{
  "title": "Brian Kernighan: UNIX, C, AWK, AMPL, and Go Programming | Lex Fridman Podcast #109",
  "id": "O9upVbGSBFo",
  "transcript": "WEBVTT\n\n00:00.000 --> 00:03.320\n The following is a conversation with Brian Kernighan,\n\n00:03.320 --> 00:07.560\n a professor of computer science at Princeton University.\n\n00:07.560 --> 00:10.140\n He was a key figure in the computer science community\n\n00:10.140 --> 00:13.760\n in the early Unix days, alongside Unix creators,\n\n00:13.760 --> 00:16.240\n Ken Thompson and Dennis Ritchie.\n\n00:16.240 --> 00:20.080\n He coauthored the C programming language with Dennis Ritchie,\n\n00:20.080 --> 00:23.520\n the creator of C, and has written a lot of books\n\n00:23.520 --> 00:26.280\n on programming, computers, and life,\n\n00:26.280 --> 00:28.480\n including The Practice of Programming,\n\n00:28.480 --> 00:31.200\n the Go programming language, and his latest,\n\n00:31.200 --> 00:34.080\n Unix, A History and a Memoir.\n\n00:34.080 --> 00:36.920\n He cocreated AUK, the text processing language\n\n00:36.920 --> 00:39.500\n used by Linux folks like myself.\n\n00:39.500 --> 00:43.800\n He co designed Ample, an algebraic modeling language\n\n00:43.800 --> 00:47.560\n that I personally love and have used a lot in my life\n\n00:47.560 --> 00:49.580\n for large scale optimization.\n\n00:49.580 --> 00:51.680\n I think I can keep going for a long time\n\n00:51.680 --> 00:54.240\n with his creations and accomplishments,\n\n00:54.240 --> 00:56.600\n which is funny because given all that,\n\n00:56.600 --> 00:59.160\n he's one of the most humble and kind people\n\n00:59.160 --> 01:01.780\n I've spoken to on this podcast.\n\n01:01.780 --> 01:04.880\n Quick summary of the ads, two new sponsors,\n\n01:04.880 --> 01:09.880\n the amazing self cooling 8sleep mattress\n\n01:10.560 --> 01:13.260\n and Raycon earbuds.\n\n01:13.260 --> 01:15.420\n Please consider supporting the podcast\n\n01:15.420 --> 01:19.040\n by going to 8sleep.com slash Lex\n\n01:19.040 --> 01:23.040\n and going to buyraycon.com slash Lex.\n\n01:23.040 --> 01:25.200\n Click the links, buy the stuff.\n\n01:25.200 --> 01:27.680\n It really is the best way to support this podcast\n\n01:27.680 --> 01:29.640\n and the journey I'm on.\n\n01:29.640 --> 01:32.000\n If you enjoy this thing, subscribe on YouTube,\n\n01:32.000 --> 01:34.200\n review it with 5,000 Apple podcasts,\n\n01:34.200 --> 01:35.560\n support it on Patreon,\n\n01:35.560 --> 01:38.740\n or connect with me on Twitter at Lex Friedman.\n\n01:39.680 --> 01:41.960\n As usual, I'll do a few minutes of ads now\n\n01:41.960 --> 01:43.300\n and never any ads in the middle\n\n01:43.300 --> 01:45.880\n that could break the flow of the conversation.\n\n01:45.880 --> 01:49.240\n This show is sponsored by 8sleep\n\n01:49.240 --> 01:51.880\n and it's incredible pod pro mattress\n\n01:51.880 --> 01:54.720\n that you can check out at 8sleep.com slash Lex\n\n01:54.720 --> 01:57.360\n to get $200 off.\n\n01:57.360 --> 02:00.720\n The mattress controls temperature with an app\n\n02:00.720 --> 02:03.840\n and can cool down to as low as 55 degrees.\n\n02:03.840 --> 02:07.000\n Research shows that temperature has a big impact\n\n02:07.000 --> 02:09.040\n on the quality of our sleep.\n\n02:09.040 --> 02:11.280\n Anecdotally, it's been a game changer for me.\n\n02:11.280 --> 02:12.280\n I love it.\n\n02:12.280 --> 02:14.320\n The pod pro is packed with sensors\n\n02:14.320 --> 02:17.140\n that track heart rate, heart rate variability,\n\n02:17.140 --> 02:18.640\n and respiratory rate,\n\n02:18.640 --> 02:21.440\n showing it all on their app once you wake up.\n\n02:21.440 --> 02:23.540\n Plus, if you have a partner,\n\n02:23.540 --> 02:26.600\n you can control the temperature of each side of the bed.\n\n02:26.600 --> 02:28.260\n I don't happen to have one,\n\n02:28.260 --> 02:30.080\n but the 8sleep app reminds me\n\n02:30.080 --> 02:32.040\n that I should probably get on that.\n\n02:32.040 --> 02:34.860\n So ladies, if a temperature controlled mattress\n\n02:34.860 --> 02:36.760\n isn't a good reason to apply,\n\n02:36.760 --> 02:38.920\n I don't know what is.\n\n02:38.920 --> 02:41.160\n The app's health metrics are amazing,\n\n02:41.160 --> 02:44.480\n but the cooling alone is honestly worth the money.\n\n02:44.480 --> 02:47.280\n As some of you know, I don't always sleep,\n\n02:47.280 --> 02:51.700\n but when I do, I choose the 8sleep pod pro mattress.\n\n02:51.700 --> 02:54.680\n Check it out at 8sleep.com slash Lex\n\n02:54.680 --> 02:57.520\n to get $200 off.\n\n02:57.520 --> 03:01.620\n This show is also sponsored by Raycon earbuds.\n\n03:01.620 --> 03:06.040\n Get them at buyraycon.com slash lex.\n\n03:06.040 --> 03:07.760\n They've quickly become my main method\n\n03:07.760 --> 03:09.680\n of listening to podcasts, audio books,\n\n03:09.680 --> 03:11.600\n and music when I run,\n\n03:11.600 --> 03:13.960\n do the pushups and pullups\n\n03:13.960 --> 03:15.940\n that I've begun to hate at this point,\n\n03:15.940 --> 03:17.560\n or just living life.\n\n03:17.560 --> 03:20.320\n In fact, I often listen to brown noise with these\n\n03:20.320 --> 03:22.320\n when I'm thinking deeply about something.\n\n03:22.320 --> 03:24.320\n It helps me focus the mind.\n\n03:24.320 --> 03:26.500\n They're super comfortable, pair easily,\n\n03:26.500 --> 03:30.200\n great sound, great bass, six hours of playtime.\n\n03:30.200 --> 03:33.520\n In fact, for fun, I have one of the earbuds in now\n\n03:33.520 --> 03:36.360\n and I'm listening to Europa by Santana,\n\n03:36.360 --> 03:39.160\n probably one of my favorite guitar songs.\n\n03:39.160 --> 03:41.560\n It kind of makes me feel like I'm in a music video.\n\n03:41.560 --> 03:44.840\n So they told me to say that a bunch of celebrities\n\n03:44.840 --> 03:49.840\n use these like Snoop Dogg, Melissa Etheridge, and Cardi B.\n\n03:50.480 --> 03:52.720\n I don't even know who Cardi B is,\n\n03:52.720 --> 03:55.600\n but her earbud game is on point.\n\n03:55.600 --> 03:58.320\n To mention celebrities I actually care about,\n\n03:58.320 --> 04:01.160\n I'm sure if Richard Feynman was still with us,\n\n04:01.160 --> 04:03.840\n he'd be listening to the Joe Rogan Experience\n\n04:03.840 --> 04:06.020\n with Raycon earbuds.\n\n04:06.020 --> 04:09.360\n Get them at buyraycon.com slash lex.\n\n04:09.360 --> 04:11.040\n It's how they know I sent you\n\n04:11.040 --> 04:12.920\n and increases the chance that he'll support\n\n04:12.920 --> 04:14.640\n this podcast in the future.\n\n04:14.640 --> 04:17.560\n So for all of the sponsors, click all of the links.\n\n04:17.560 --> 04:19.940\n It really helps this podcast.\n\n04:19.940 --> 04:24.000\n And now, here's my conversation with Brian Kernighan.\n\n04:25.040 --> 04:28.520\n Unix started being developed 50 years ago.\n\n04:28.520 --> 04:30.520\n It'd be more than 50 years ago.\n\n04:30.520 --> 04:33.520\n Can you tell the story like you describe in your new book\n\n04:33.520 --> 04:35.700\n of how Unix was created?\n\n04:35.700 --> 04:38.280\n Ha, if I can remember that far back,\n\n04:38.280 --> 04:39.500\n it was some while ago.\n\n04:40.440 --> 04:44.440\n So I think the gist of it is that at Bell Labs,\n\n04:44.440 --> 04:46.760\n in 1969, there were a group of people\n\n04:46.760 --> 04:49.920\n who had just finished working on the Multics project,\n\n04:49.920 --> 04:54.320\n which was itself a follow on to CTSS.\n\n04:54.320 --> 04:57.040\n So we can go back sort of an infinite regress in time,\n\n04:57.040 --> 05:01.040\n but the CTSS was a very, very, very nice time sharing system.\n\n05:01.040 --> 05:02.080\n It was very nice to use.\n\n05:02.080 --> 05:06.920\n I actually used it that summer I spent in Cambridge in 1966.\n\n05:06.920 --> 05:08.520\n What was the hardware there?\n\n05:08.520 --> 05:10.360\n So what's the operating system, what's the hardware there?\n\n05:10.360 --> 05:12.160\n What's the CTSS look like?\n\n05:12.160 --> 05:14.840\n So CTSS looked like kind of like\n\n05:14.840 --> 05:17.040\n a standard time sharing system.\n\n05:17.040 --> 05:19.400\n Certainly at the time, it was the only time sharing.\n\n05:19.400 --> 05:20.800\n Let's go back to the basics.\n\n05:20.800 --> 05:22.360\n What's a time sharing system?\n\n05:22.360 --> 05:23.760\n Okay, in the beginning was the word\n\n05:23.760 --> 05:24.600\n and the word was the system.\n\n05:24.600 --> 05:27.040\n And then there was time sharing systems.\n\n05:27.040 --> 05:29.960\n Yeah, if we go back into, let's call it the 1950s\n\n05:29.960 --> 05:34.280\n and early 1960s, most computing was done on very big\n\n05:34.280 --> 05:36.960\n computers, physically big, although not terribly powerful\n\n05:36.960 --> 05:39.840\n by today's standards, that were maintained\n\n05:39.840 --> 05:44.840\n in very large rooms and you use things like punch cards\n\n05:45.760 --> 05:47.440\n to write your programs on and talk to them.\n\n05:47.440 --> 05:49.320\n So you would take a deck of cards,\n\n05:49.320 --> 05:51.920\n write your program on it, send it over a counter,\n\n05:51.920 --> 05:54.520\n hand it to an operator and some while later\n\n05:54.520 --> 05:55.680\n back would come something that said,\n\n05:55.680 --> 05:58.040\n oh, you made a mistake and then you'd recycle.\n\n05:58.040 --> 05:59.480\n And so it was very, very slow.\n\n05:59.480 --> 06:02.320\n So the idea of time sharing was that you take\n\n06:02.320 --> 06:06.240\n basically that same computer, but connect to it\n\n06:06.240 --> 06:09.440\n with something that looked like an electric typewriter.\n\n06:09.440 --> 06:11.960\n They could be a long distance away, it could be close,\n\n06:11.960 --> 06:14.960\n but fundamentally what the operating system did\n\n06:14.960 --> 06:18.080\n was to give each person who was connected to it\n\n06:18.080 --> 06:21.680\n and wanting to do something a small slice of time\n\n06:23.680 --> 06:24.880\n to do a particular job.\n\n06:24.880 --> 06:28.200\n So I might be editing a file, so I would be typing\n\n06:28.200 --> 06:29.480\n and every time I hit a keystroke,\n\n06:29.480 --> 06:31.000\n the operating system would wake up and said,\n\n06:31.000 --> 06:33.440\n oh, he typed character, let me remember that.\n\n06:33.440 --> 06:35.000\n Then it'd go back to doing something else.\n\n06:35.000 --> 06:38.040\n So it'd be going around and around a group of people\n\n06:38.040 --> 06:40.200\n who were trying to get something done, giving each\n\n06:40.200 --> 06:45.200\n a small slice of time and giving them each the illusion\n\n06:45.200 --> 06:47.600\n that they pretty much had the whole machine to themselves\n\n06:47.600 --> 06:51.360\n and hence time sharing, that is sharing the computing time\n\n06:51.360 --> 06:54.240\n resource of the computer among a number of people\n\n06:54.240 --> 06:55.080\n who were doing it.\n\n06:55.080 --> 06:56.920\n Without the individual people being aware\n\n06:56.920 --> 06:59.320\n that there's others in a sense, the illusion,\n\n06:59.320 --> 07:02.560\n the feelings that the machine is your own.\n\n07:02.560 --> 07:04.040\n Pretty much that was the idea.\n\n07:04.040 --> 07:08.080\n Yes, if it were well done and if it were fast enough\n\n07:08.080 --> 07:09.840\n and other people weren't doing too much,\n\n07:09.840 --> 07:12.320\n you did have the illusion that you had the whole machine\n\n07:12.320 --> 07:14.880\n to yourself and it was very much better\n\n07:14.880 --> 07:16.480\n than the punch card model.\n\n07:16.480 --> 07:19.840\n And so CTSS, the compatible time sharing system\n\n07:19.840 --> 07:22.480\n was I think arguably the first of these.\n\n07:22.480 --> 07:26.440\n It was done I guess technically in 64 or something like that.\n\n07:26.440 --> 07:30.080\n It ran on an IBM 7094, slightly modified\n\n07:30.080 --> 07:32.840\n to have twice as much memory as the norm.\n\n07:32.840 --> 07:37.520\n It had two banks of 32K words instead of one.\n\n07:37.520 --> 07:38.920\n So.\n\n07:38.920 --> 07:40.800\n 32K words, yeah.\n\n07:40.800 --> 07:42.960\n Each word was 36 bits, so call it\n\n07:42.960 --> 07:46.440\n about 150 kilobytes times two.\n\n07:46.440 --> 07:49.640\n So by today's standards, that's down in the noise.\n\n07:49.640 --> 07:51.520\n But at the time, that was a lot of memory\n\n07:51.520 --> 07:53.280\n and memory was expensive.\n\n07:53.280 --> 07:56.920\n So CTSS was just a wonderful environment to work on.\n\n07:56.920 --> 07:58.720\n It was done by the people at MIT,\n\n07:58.720 --> 08:03.600\n led by Fernando Corbato, Corby who died just earlier\n\n08:03.600 --> 08:06.840\n this year, and a bunch of other folks.\n\n08:06.840 --> 08:09.520\n So I spent the summer of 66 working on that,\n\n08:09.520 --> 08:12.640\n had a great time, met a lot of really nice people\n\n08:12.640 --> 08:17.640\n and indirectly knew of people at Bell Labs\n\n08:17.640 --> 08:22.480\n who were also working on a follow on to CTSS\n\n08:22.480 --> 08:24.080\n that was called Multics.\n\n08:24.080 --> 08:26.000\n So Multics was meant to be the system\n\n08:26.000 --> 08:27.720\n that would do everything that CTSS did\n\n08:27.720 --> 08:30.760\n but do it better for a larger population.\n\n08:30.760 --> 08:31.720\n All the usual stuff.\n\n08:31.720 --> 08:34.120\n Now the actual time sharing, the scheduling,\n\n08:36.560 --> 08:39.040\n what's the algorithm that performs the scheduling?\n\n08:39.040 --> 08:39.880\n What's that look like?\n\n08:39.880 --> 08:40.980\n How much magic is there?\n\n08:40.980 --> 08:42.720\n What are the metrics?\n\n08:42.720 --> 08:44.920\n How does it all work in the beginning?\n\n08:44.920 --> 08:46.200\n So the answer is I don't have a clue.\n\n08:46.200 --> 08:48.280\n I think the basic idea was nothing more\n\n08:48.280 --> 08:50.600\n than who all wants to get something done.\n\n08:50.600 --> 08:52.040\n Suppose that things are very quiet\n\n08:52.040 --> 08:53.660\n in the middle of the night,\n\n08:53.660 --> 08:55.760\n then I get all the time that I want.\n\n08:55.760 --> 08:58.080\n Suppose that you and I are contending at high noon\n\n08:58.080 --> 08:59.880\n for something like that,\n\n08:59.880 --> 09:02.600\n then probably the simplest algorithm is a round robin one\n\n09:02.600 --> 09:05.080\n that gives you a bit of time, gives me a bit of time.\n\n09:05.080 --> 09:07.080\n And then we could adapt to that.\n\n09:07.080 --> 09:08.680\n Like what are you trying to do?\n\n09:08.680 --> 09:12.000\n Are you text editing or are you compiling or something?\n\n09:12.000 --> 09:13.600\n And then we might adjust the scheduler\n\n09:13.600 --> 09:15.040\n according to things like that.\n\n09:15.040 --> 09:19.000\n So okay, so Multics was trying to just do some of the,\n\n09:19.000 --> 09:20.280\n clean it up a little bit.\n\n09:20.280 --> 09:22.280\n Well, it was meant to be much more than that.\n\n09:22.280 --> 09:24.320\n So Multics was the multiplexed information\n\n09:24.320 --> 09:27.000\n and computing service and it was meant to be\n\n09:27.000 --> 09:29.980\n a very large thing that would provide computing utility.\n\n09:29.980 --> 09:32.940\n Something that where you could actually think of it\n\n09:32.940 --> 09:35.080\n as just a plug in the wall service.\n\n09:35.080 --> 09:37.140\n Sort of like cloud computing today.\n\n09:37.140 --> 09:40.680\n Same idea, but 50 odd years earlier.\n\n09:40.680 --> 09:43.800\n And so what Multics offered\n\n09:43.800 --> 09:46.520\n was a richer operating system environment,\n\n09:46.520 --> 09:48.880\n a piece of hardware that was better designed\n\n09:48.880 --> 09:53.160\n for doing the kind of sharing of resources.\n\n09:53.160 --> 09:55.920\n And presumably lots of other things.\n\n09:55.920 --> 09:58.520\n Do you think people at that time had the dream\n\n09:58.520 --> 10:01.080\n of what cloud computing is starting to become now,\n\n10:01.080 --> 10:03.120\n which is computing is everywhere.\n\n10:03.120 --> 10:06.440\n That you can just plug in almost,\n\n10:06.440 --> 10:09.000\n and you never know how the magic works.\n\n10:09.000 --> 10:11.720\n You just kind of plug in, add your little computation\n\n10:11.720 --> 10:13.640\n that you need to perform and it does it.\n\n10:13.640 --> 10:14.880\n Was that the dream?\n\n10:14.880 --> 10:16.000\n I don't know where that was the dream.\n\n10:16.000 --> 10:17.360\n I wasn't part of it at that point.\n\n10:17.360 --> 10:19.360\n I remember I was an intern for summer.\n\n10:19.360 --> 10:23.240\n But my sense is given that it was over 50 years ago,\n\n10:23.240 --> 10:26.240\n yeah, they had that idea that it was an information utility.\n\n10:26.240 --> 10:29.800\n That it was something where if you had a computing task to do,\n\n10:29.800 --> 10:31.660\n you could just go and do it.\n\n10:31.660 --> 10:35.880\n Now I'm betting that they didn't have the same view\n\n10:35.880 --> 10:38.840\n of computing for the masses, let's call it.\n\n10:38.840 --> 10:43.200\n The idea that your grandmother would be shopping on Amazon.\n\n10:43.200 --> 10:45.000\n I don't think that was part of it.\n\n10:45.000 --> 10:47.160\n But if your grandmother were a programmer,\n\n10:47.160 --> 10:49.920\n it might be very easy for her to go and use\n\n10:49.920 --> 10:51.520\n this kind of utility.\n\n10:51.520 --> 10:53.680\n What was your dream of computers at that time?\n\n10:53.680 --> 10:55.680\n What did you see as the future of computers?\n\n10:55.680 --> 10:59.600\n Because you have predicted what computers are today.\n\n10:59.600 --> 11:01.740\n Oh, short answer, absolutely not.\n\n11:01.740 --> 11:02.580\n I have no clue.\n\n11:02.580 --> 11:03.840\n I'm not sure I had a dream.\n\n11:03.840 --> 11:06.640\n It was a dream job in the sense that I really enjoyed\n\n11:06.640 --> 11:07.480\n what I was doing.\n\n11:07.480 --> 11:10.020\n I was surrounded by really, really nice people.\n\n11:10.020 --> 11:12.880\n Cambridge is a very fine city to live in in the summer,\n\n11:12.880 --> 11:14.300\n less so in the winter when it snows.\n\n11:14.300 --> 11:16.880\n But in the summer, it was a delightful time.\n\n11:16.880 --> 11:19.240\n And so I really enjoyed all of that stuff.\n\n11:19.240 --> 11:20.400\n And I learned things.\n\n11:20.400 --> 11:25.000\n And I think the good fortune of being there for summer\n\n11:25.000 --> 11:27.220\n led me then to get a summer job at Bell Labs\n\n11:27.220 --> 11:28.520\n the following summer.\n\n11:28.520 --> 11:31.760\n And that was quite useful for the future.\n\n11:31.760 --> 11:35.960\n So Bell Labs is this magical, legendary place.\n\n11:35.960 --> 11:39.060\n So first of all, where is Bell Labs?\n\n11:39.060 --> 11:44.060\n And can you start talking about that journey\n\n11:44.200 --> 11:46.600\n towards Unix at Bell Labs?\n\n11:46.600 --> 11:50.160\n Yeah, so Bell Labs is physically scattered around,\n\n11:50.160 --> 11:52.320\n at the time, scattered around New Jersey.\n\n11:52.320 --> 11:54.960\n The primary location is in a town called Murray Hill,\n\n11:54.960 --> 11:57.880\n or a location called Murray Hill is actually\n\n11:57.880 --> 12:00.840\n across the boundary between two small towns in New Jersey\n\n12:00.840 --> 12:03.440\n called New Providence and Berkeley Heights.\n\n12:03.440 --> 12:05.440\n Think of it as about 15, 20 miles straight west\n\n12:05.440 --> 12:08.920\n of New York City, and therefore about an hour north\n\n12:08.920 --> 12:10.040\n of here in Princeton.\n\n12:11.520 --> 12:15.080\n And at that time, it had, make up a number,\n\n12:15.080 --> 12:18.000\n three or 4,000 people there, many of whom had PhDs\n\n12:18.000 --> 12:20.840\n and mostly doing physical sciences,\n\n12:20.840 --> 12:24.480\n chemistry, physics, materials kinds of things,\n\n12:24.480 --> 12:29.120\n but very strong math and rapidly growing interest\n\n12:29.120 --> 12:31.240\n in computing as people realized you could do things\n\n12:31.240 --> 12:34.000\n with computers that you might not have been able\n\n12:34.000 --> 12:35.040\n to do before.\n\n12:35.040 --> 12:37.520\n You could replace labs with computers\n\n12:37.520 --> 12:40.460\n that had worked on models of what was going on.\n\n12:41.360 --> 12:44.160\n So that was the essence of Bell Labs.\n\n12:44.160 --> 12:46.600\n And again, I wasn't a permanent employee there.\n\n12:46.600 --> 12:47.960\n That was another internship.\n\n12:47.960 --> 12:49.580\n I got lucky in internships.\n\n12:50.480 --> 12:52.560\n I mean, if you could just linger on it a little bit,\n\n12:52.560 --> 12:55.520\n what was the, what was in the air there?\n\n12:55.520 --> 12:57.800\n Because some of the, the number of Nobel Prizes,\n\n12:57.800 --> 13:00.020\n the number of Turing Awards and just legendary\n\n13:00.020 --> 13:03.000\n computer scientists that come from their inventions,\n\n13:03.000 --> 13:05.920\n including developments, including Unix,\n\n13:05.920 --> 13:07.900\n it's just, it's unbelievable.\n\n13:07.900 --> 13:11.600\n So was there something special about that place?\n\n13:11.600 --> 13:14.640\n Oh, I think there was very definitely something special.\n\n13:14.640 --> 13:15.800\n I mentioned the number of people,\n\n13:15.800 --> 13:19.120\n it's a very large number of people, very highly skilled\n\n13:19.120 --> 13:20.680\n and working in an environment\n\n13:20.680 --> 13:23.120\n where there was always something interesting to work on\n\n13:23.120 --> 13:25.120\n because the goal of Bell Labs,\n\n13:25.120 --> 13:27.280\n which was a small part of AT&T,\n\n13:27.280 --> 13:30.160\n which provided basically the country's phone service.\n\n13:30.160 --> 13:33.440\n The goal of AT&T was to provide service for everybody.\n\n13:33.440 --> 13:36.940\n And the goal of Bell Labs was to try and make that service\n\n13:36.940 --> 13:39.520\n keep getting better, so improving service.\n\n13:39.520 --> 13:43.920\n And that meant doing research on a lot of different things,\n\n13:43.920 --> 13:46.400\n physical devices, like the transistor\n\n13:46.400 --> 13:50.860\n or fiber optical cables or microwave systems,\n\n13:50.860 --> 13:53.240\n all of these things the labs worked on.\n\n13:53.240 --> 13:56.580\n And it was kind of just the beginning of real boom times\n\n13:56.580 --> 13:58.040\n in computing as well.\n\n13:58.040 --> 14:01.160\n Because when I was there, I went there first in 66.\n\n14:01.160 --> 14:04.560\n So computing was at that point fairly young.\n\n14:04.560 --> 14:06.000\n And so people were discovering\n\n14:06.000 --> 14:08.720\n that you could do lots of things with computers.\n\n14:08.720 --> 14:10.840\n So how was Unix born?\n\n14:10.840 --> 14:14.600\n So Multics, in spite of having an enormous number\n\n14:14.600 --> 14:16.840\n of really good ideas and lots of good people working on it,\n\n14:16.840 --> 14:20.040\n fundamentally didn't live up, at least in the short run,\n\n14:20.040 --> 14:22.160\n and I think ultimately really ever,\n\n14:22.160 --> 14:25.560\n to its goal of being this information utility.\n\n14:25.560 --> 14:29.200\n It was too expensive and certainly what was promised\n\n14:29.200 --> 14:31.280\n was delivered much too late.\n\n14:31.280 --> 14:34.600\n And so in roughly the beginning of 1969,\n\n14:34.600 --> 14:37.200\n Bell Labs pulled out of the project.\n\n14:37.200 --> 14:42.200\n The project at that point had included MIT, Bell Labs,\n\n14:42.520 --> 14:45.480\n and General Electric, General Electric made computers.\n\n14:45.480 --> 14:48.320\n So General Electric was the hardware operation.\n\n14:48.320 --> 14:50.880\n So Bell Labs, realizing this wasn't going anywhere\n\n14:50.880 --> 14:54.160\n on a timescale they cared about, pulled out of the project.\n\n14:54.160 --> 14:59.160\n And this left several people with an acquired taste\n\n14:59.160 --> 15:01.660\n for really, really nice computing environments,\n\n15:01.660 --> 15:03.520\n but no computing environment.\n\n15:03.520 --> 15:06.820\n And so they started thinking about what could you do\n\n15:06.820 --> 15:09.480\n if you were going to design a new operating system\n\n15:09.480 --> 15:12.920\n that would provide the same kind of comfortable computing\n\n15:12.920 --> 15:16.040\n as CTSS had, but also the facilities of something\n\n15:16.040 --> 15:17.960\n like Multics sort of brought forward.\n\n15:19.440 --> 15:21.720\n And so they did a lot of paper design stuff.\n\n15:21.720 --> 15:23.920\n And at the same time, Ken Thompson found\n\n15:23.920 --> 15:27.300\n what is characterized as a little used PDP 7,\n\n15:27.300 --> 15:31.080\n where he started to do experiments with file systems,\n\n15:31.080 --> 15:33.620\n just how do you store information on a computer\n\n15:33.620 --> 15:36.380\n in a efficient way, and then this famous story\n\n15:36.380 --> 15:39.160\n that his wife went away to California for three weeks,\n\n15:39.160 --> 15:43.280\n taking their one year old son, and three weeks,\n\n15:43.280 --> 15:45.640\n and he sat down and wrote an operating system,\n\n15:45.640 --> 15:47.500\n which ultimately became Unix.\n\n15:47.500 --> 15:50.360\n So software productivity was good in those days.\n\n15:50.360 --> 15:52.060\n So PDP, what's a PDP 7?\n\n15:52.060 --> 15:53.400\n So it's a piece of hardware.\n\n15:53.400 --> 15:54.560\n Yeah, it's a piece of hardware.\n\n15:54.560 --> 15:56.760\n It was one of early machines made\n\n15:56.760 --> 15:59.880\n by Digital Equipment Corporation, DEC,\n\n15:59.880 --> 16:03.460\n and it was a mini computer, so called.\n\n16:03.460 --> 16:07.480\n It had, I would have to look up the numbers exactly,\n\n16:07.480 --> 16:09.360\n but it had a very small amount of memory,\n\n16:09.360 --> 16:13.320\n maybe 16K, 16 bit words, or something like that,\n\n16:13.320 --> 16:17.120\n relatively slow, probably not super expensive.\n\n16:17.120 --> 16:19.720\n Maybe, again, making this up, I'd have to look it up,\n\n16:19.720 --> 16:21.840\n $100,000 or something like that.\n\n16:21.840 --> 16:24.360\n Which is not super expensive in those days, right?\n\n16:24.360 --> 16:25.400\n It was expensive.\n\n16:25.400 --> 16:26.840\n It was enough that you and I probably\n\n16:26.840 --> 16:27.680\n wouldn't be able to buy one,\n\n16:27.680 --> 16:30.880\n but a modest group of people could get together.\n\n16:30.880 --> 16:34.880\n But in any case, it came out, if I recall, in 1964.\n\n16:34.880 --> 16:38.640\n So by 1969, it was getting a little obsolete,\n\n16:38.640 --> 16:40.480\n and that's why it was little used.\n\n16:41.500 --> 16:42.800\n If you can sort of comment,\n\n16:42.800 --> 16:43.800\n what do you think it's like\n\n16:43.800 --> 16:45.680\n to write an operating system like that?\n\n16:45.680 --> 16:48.680\n So that process that Ken went through in three weeks,\n\n16:49.600 --> 16:52.800\n because you were, I mean, you're a part of that process.\n\n16:52.800 --> 16:57.600\n You contributed a lot to Unix's early development.\n\n16:57.600 --> 17:01.360\n So what do you think it takes to do that first step,\n\n17:01.360 --> 17:05.460\n that first kind of, from design to reality on the PDP?\n\n17:05.460 --> 17:07.160\n Well, let me correct one thing.\n\n17:07.160 --> 17:08.860\n I had nothing to do with it.\n\n17:08.860 --> 17:10.440\n So I did not write it.\n\n17:10.440 --> 17:12.540\n I have never written operating system code.\n\n17:13.440 --> 17:16.400\n And so I don't know.\n\n17:16.400 --> 17:18.980\n Now an operating system is simply code.\n\n17:18.980 --> 17:21.400\n And this first one wasn't very big,\n\n17:21.400 --> 17:24.600\n but it's something that lets you run processes,\n\n17:24.600 --> 17:27.320\n lets you execute some kind of code that has been written.\n\n17:27.320 --> 17:30.800\n It lets you store information for periods of time\n\n17:30.800 --> 17:33.160\n so that it doesn't go away when you turn the power off\n\n17:33.160 --> 17:35.220\n or reboot or something like that.\n\n17:36.180 --> 17:38.560\n And there's kind of a core set of tools\n\n17:38.560 --> 17:40.920\n that are technically not part of an operating system,\n\n17:40.920 --> 17:42.380\n but you probably need them.\n\n17:42.380 --> 17:44.980\n In this case, Ken wrote an assembler\n\n17:44.980 --> 17:46.680\n for the PDP 7 that worked.\n\n17:46.680 --> 17:47.820\n He needed a text editor\n\n17:47.820 --> 17:49.840\n so that he could actually create text.\n\n17:49.840 --> 17:52.120\n He had the file system stuff that he had been working on,\n\n17:52.120 --> 17:53.640\n and then the rest of it was just a way\n\n17:53.640 --> 17:57.840\n to load things, executable code from the file system\n\n17:57.840 --> 18:00.040\n into the memory, give it control,\n\n18:00.040 --> 18:02.800\n and then recover control when it was finished\n\n18:02.800 --> 18:04.840\n or in some other way quit.\n\n18:04.840 --> 18:06.600\n What was the code written in,\n\n18:06.600 --> 18:08.160\n primarily the programming language?\n\n18:08.160 --> 18:09.200\n Was it in assembly?\n\n18:09.200 --> 18:12.320\n Yeah, PDP 7 assembler that Ken created.\n\n18:13.680 --> 18:15.200\n These things were assembly language\n\n18:15.200 --> 18:20.200\n until probably the, call it 1973 or 74, something like that.\n\n18:21.440 --> 18:23.000\n Forgive me if it's a dumb question,\n\n18:23.000 --> 18:25.200\n but it feels like a daunting task\n\n18:25.200 --> 18:28.780\n to write any kind of complex system in assembly.\n\n18:28.780 --> 18:29.620\n Absolutely.\n\n18:31.280 --> 18:32.860\n It feels like impossible to do any kind\n\n18:32.860 --> 18:36.160\n of what we think of as software engineering with assembly,\n\n18:36.160 --> 18:40.080\n because to work on a big picture sort of.\n\n18:40.080 --> 18:41.480\n I think it's hard.\n\n18:41.480 --> 18:43.760\n It's been a long time since I wrote assembly language.\n\n18:43.760 --> 18:45.600\n It is absolutely true that in assembly language,\n\n18:45.600 --> 18:47.160\n if you make a mistake, nobody tells you.\n\n18:47.160 --> 18:49.640\n There are no training wheels whatsoever.\n\n18:49.640 --> 18:51.120\n And so stuff doesn't work.\n\n18:51.120 --> 18:51.960\n Now what?\n\n18:51.960 --> 18:53.400\n There's no debuggers.\n\n18:53.400 --> 18:54.460\n Well, there could be debuggers,\n\n18:54.460 --> 18:56.800\n but that's the same problem, right?\n\n18:56.800 --> 18:58.920\n How do you actually get something\n\n18:58.920 --> 19:00.400\n that will help you debug it?\n\n19:00.400 --> 19:05.400\n So part of it is an ability to see the big picture.\n\n19:05.640 --> 19:07.760\n Now these systems were not big in the sense\n\n19:07.760 --> 19:08.680\n that today's pictures are.\n\n19:08.680 --> 19:11.840\n So the big picture was in some sense more manageable.\n\n19:11.840 --> 19:13.560\n I mean, then realistically,\n\n19:13.560 --> 19:15.240\n there's an enormous variation\n\n19:15.240 --> 19:17.520\n in the capabilities of programmers.\n\n19:17.520 --> 19:20.200\n And Ken Thompson, who did that first one,\n\n19:20.200 --> 19:25.200\n is kind of the singularity, in my experience, of programmers.\n\n19:25.480 --> 19:27.760\n With no disrespect to you or even to me,\n\n19:27.760 --> 19:31.000\n he's in several leagues removed.\n\n19:31.000 --> 19:33.080\n I know there's levels.\n\n19:33.080 --> 19:37.200\n It's a fascinating thing that there are unique stars\n\n19:37.200 --> 19:39.800\n in particular in the programming space\n\n19:39.800 --> 19:40.880\n and at a particular time.\n\n19:40.880 --> 19:42.160\n You know, the time matters too,\n\n19:42.160 --> 19:44.440\n the timing of when that person comes along.\n\n19:44.440 --> 19:47.800\n And a wife does have to leave.\n\n19:47.800 --> 19:49.760\n There's this weird timing that happens\n\n19:49.760 --> 19:52.240\n and then all of a sudden something beautiful is created.\n\n19:52.240 --> 19:53.400\n I mean, how does it make you feel\n\n19:53.400 --> 19:58.280\n that there's a system that was created in three weeks\n\n19:58.280 --> 20:01.160\n or maybe you can even say on a whim,\n\n20:01.160 --> 20:03.600\n but not really, but of course, quickly,\n\n20:03.600 --> 20:07.080\n that is now, you could think of most of the computers\n\n20:07.080 --> 20:10.560\n in the world run on a Unix like system?\n\n20:10.560 --> 20:11.400\n Right.\n\n20:12.800 --> 20:14.240\n How do you interpret, like,\n\n20:14.240 --> 20:16.480\n if you kind of zoom from the alien perspective,\n\n20:16.480 --> 20:18.360\n if you were just observing Earth,\n\n20:18.360 --> 20:20.960\n and all of a sudden these computers took over the world\n\n20:20.960 --> 20:24.800\n and they started from this little initial seed of Unix,\n\n20:24.800 --> 20:26.600\n how does that make you feel?\n\n20:26.600 --> 20:27.640\n It's quite surprising.\n\n20:27.640 --> 20:30.280\n And you asked earlier about prediction.\n\n20:30.280 --> 20:31.120\n The answer is no.\n\n20:31.120 --> 20:33.960\n There's no way you could predict that kind of evolution.\n\n20:33.960 --> 20:37.120\n And I don't know whether it was inevitable\n\n20:37.120 --> 20:39.080\n or just a whole sequence of blind luck.\n\n20:39.080 --> 20:40.920\n I suspect more of the latter.\n\n20:40.920 --> 20:45.320\n And so I look at it and think, gee, that's kind of neat.\n\n20:45.320 --> 20:49.000\n I think the real question is what does Ken think about that?\n\n20:49.000 --> 20:53.000\n Because he's the guy arguably from whom it really came.\n\n20:53.000 --> 20:55.240\n You know, tremendous contributions from Dennis Ritchie\n\n20:55.240 --> 20:58.200\n and then others around in that Bell Labs environment.\n\n20:58.200 --> 21:01.160\n But, you know, if you had to pick a single person,\n\n21:01.160 --> 21:02.560\n that would be Ken.\n\n21:02.560 --> 21:04.320\n So you've written a new book,\n\n21:04.320 --> 21:06.320\n Unix, a history and a memoir.\n\n21:06.320 --> 21:08.960\n Are there some memorable human stories,\n\n21:08.960 --> 21:10.680\n funny or profound from that time\n\n21:10.680 --> 21:12.160\n that just kind of stand out?\n\n21:12.160 --> 21:14.000\n Oh, there's a lot of them in his book.\n\n21:14.000 --> 21:15.680\n Oh, there's a lot of them in a sense.\n\n21:15.680 --> 21:18.160\n And again, it's a question of can you resurrect them\n\n21:18.160 --> 21:19.000\n in real time?\n\n21:19.000 --> 21:19.840\n Never.\n\n21:19.840 --> 21:21.720\n His memory fails.\n\n21:21.720 --> 21:25.040\n But I think part of it was that Bell Labs at the time\n\n21:25.040 --> 21:27.040\n was a very special kind of place to work\n\n21:27.040 --> 21:28.960\n because there were a lot of interesting people\n\n21:28.960 --> 21:31.720\n and the environment was very, very open and free.\n\n21:31.720 --> 21:33.280\n It was a very cooperative environment,\n\n21:33.280 --> 21:34.360\n very friendly environment.\n\n21:34.360 --> 21:35.960\n And so if you had an interesting problem,\n\n21:35.960 --> 21:37.160\n you go and talk to somebody\n\n21:37.160 --> 21:39.160\n and they might help you with the solution.\n\n21:40.600 --> 21:43.800\n And it was a kind of a fun environment too,\n\n21:43.800 --> 21:46.680\n in which people did strange things\n\n21:46.680 --> 21:51.680\n and often tweaking the bureaucracy in one way or another.\n\n21:52.440 --> 21:54.960\n So rebellious in certain kinds of ways.\n\n21:54.960 --> 21:56.720\n In some ways, yeah, absolutely.\n\n21:56.720 --> 21:58.880\n I think most people didn't take too kindly\n\n21:58.880 --> 22:01.560\n to the bureaucracy and I'm sure the bureaucracy\n\n22:01.560 --> 22:03.840\n put up with an enormous amount\n\n22:03.840 --> 22:06.000\n that they didn't really want to.\n\n22:06.000 --> 22:09.520\n So maybe to linger on it a little bit,\n\n22:09.520 --> 22:11.840\n do you have a sense of what the philosophy\n\n22:11.840 --> 22:15.320\n that characterizes Unix is, the design?\n\n22:15.320 --> 22:18.880\n Not just the initial, but just carry through the years,\n\n22:18.880 --> 22:20.640\n just being there, being around it.\n\n22:20.640 --> 22:23.320\n What's the fundamental philosophy behind the system?\n\n22:23.320 --> 22:25.600\n I think one aspect of fundamental philosophy\n\n22:25.600 --> 22:29.120\n was to provide an environment that made it easy to write\n\n22:29.120 --> 22:31.960\n or easier, productive to write programs.\n\n22:31.960 --> 22:33.720\n So it was meant as a programmer environment.\n\n22:33.720 --> 22:36.080\n It wasn't meant specifically as something\n\n22:36.080 --> 22:38.400\n to do some other kind of job.\n\n22:38.400 --> 22:41.400\n For example, it was used extensively for word processing,\n\n22:41.400 --> 22:43.720\n but it wasn't designed as a word processing system.\n\n22:43.720 --> 22:45.800\n It was used extensively for lab control,\n\n22:45.800 --> 22:47.320\n but it wasn't designed for that.\n\n22:47.320 --> 22:49.480\n It was used extensively as a front end\n\n22:49.480 --> 22:52.440\n for big other systems, big dumb systems,\n\n22:52.440 --> 22:53.800\n but it wasn't designed for that.\n\n22:53.800 --> 22:55.640\n It was meant to be an environment\n\n22:55.640 --> 22:57.960\n where it was really easy to write programs.\n\n22:57.960 --> 23:00.680\n So the programmers could be highly productive.\n\n23:00.680 --> 23:03.120\n And part of that was to be a community.\n\n23:03.120 --> 23:05.760\n And there's some observation from Dennis Ritchie,\n\n23:05.760 --> 23:06.840\n I think at the end of the book,\n\n23:06.840 --> 23:09.720\n that says that from his standpoint,\n\n23:09.720 --> 23:11.920\n the real goal was to create a community\n\n23:11.920 --> 23:16.920\n where people could work as programmers on a system.\n\n23:17.160 --> 23:19.600\n And I think in that sense, certainly for many, many years,\n\n23:19.600 --> 23:22.520\n it succeeded quite well at that.\n\n23:22.520 --> 23:25.040\n And part of that is the technical aspects\n\n23:25.040 --> 23:27.600\n of because it made it really easy to write programs,\n\n23:27.600 --> 23:29.520\n people did write interesting programs.\n\n23:29.520 --> 23:32.000\n Those programs tended to be used by other programmers.\n\n23:32.000 --> 23:34.600\n And so it was kind of a virtuous circle\n\n23:34.600 --> 23:36.560\n of more and more stuff coming up\n\n23:36.560 --> 23:39.360\n that was really good for programmers.\n\n23:39.360 --> 23:41.800\n And you were part of that community of programmers.\n\n23:41.800 --> 23:45.760\n So what was it like writing programs in that early Unix?\n\n23:45.760 --> 23:46.600\n It was a blast.\n\n23:46.600 --> 23:47.420\n It really was.\n\n23:50.000 --> 23:51.120\n You know, I like to program.\n\n23:51.120 --> 23:52.800\n I'm not a terribly good programmer,\n\n23:52.800 --> 23:55.260\n but it was a lot of fun to write code.\n\n23:55.260 --> 23:57.520\n And in the early days, there was an enormous amount\n\n23:57.520 --> 23:59.000\n of what you would today, I suppose,\n\n23:59.000 --> 24:00.100\n called low hanging fruit.\n\n24:00.100 --> 24:02.520\n People hadn't done things before.\n\n24:02.520 --> 24:04.320\n And this was this new environment\n\n24:04.320 --> 24:07.640\n and the whole combination of nice tools\n\n24:07.640 --> 24:11.560\n and very responsive system and tremendous colleagues\n\n24:11.560 --> 24:13.640\n made it possible to write code.\n\n24:13.640 --> 24:16.440\n You could have an idea in the morning.\n\n24:16.440 --> 24:19.080\n You could do an experiment with it.\n\n24:19.080 --> 24:21.320\n You could have something limping along that night\n\n24:21.320 --> 24:23.600\n or the next day and people would react to it.\n\n24:23.600 --> 24:25.920\n And they would say, oh, that's wonderful,\n\n24:25.920 --> 24:27.800\n but you're really screwed up here.\n\n24:27.800 --> 24:31.680\n And the feedback loop was then very, very short and tight.\n\n24:31.680 --> 24:34.960\n And so a lot of things got developed fairly quickly\n\n24:34.960 --> 24:39.920\n that in many cases still exist today.\n\n24:39.920 --> 24:43.240\n And I think that was part of what made it fun\n\n24:43.240 --> 24:44.680\n because programming itself is fun.\n\n24:44.680 --> 24:46.900\n It's puzzle solving in a variety of ways,\n\n24:46.900 --> 24:50.000\n but I think it's even more fun when you do something\n\n24:50.000 --> 24:52.320\n that somebody else then uses.\n\n24:52.320 --> 24:54.600\n Even if they whine about it not working,\n\n24:54.600 --> 24:58.560\n the fact that they used it is part of the reward mechanism.\n\n24:58.560 --> 25:00.480\n And what was the method of interaction,\n\n25:00.480 --> 25:03.640\n the communication, that feedback loop?\n\n25:03.640 --> 25:05.440\n I mean, this is before the internet.\n\n25:05.440 --> 25:07.520\n Certainly before the internet.\n\n25:07.520 --> 25:11.640\n It was mostly physical right there.\n\n25:11.640 --> 25:13.680\n Somebody would come into your office and say something.\n\n25:13.680 --> 25:15.280\n So these places are all close by,\n\n25:15.280 --> 25:18.960\n like offices are nearby, so really lively interaction.\n\n25:18.960 --> 25:19.800\n Yeah, yeah.\n\n25:19.800 --> 25:22.040\n Bell Labs was fundamentally one giant building\n\n25:22.040 --> 25:24.400\n and most of the people were involved in this unique stuff.\n\n25:24.400 --> 25:27.640\n We're in two or three quarters and there was a room.\n\n25:27.640 --> 25:29.400\n Oh, how big was it?\n\n25:29.400 --> 25:33.480\n Probably call it 50 feet by 50 feet.\n\n25:33.480 --> 25:37.320\n Make up a number of that which had some access\n\n25:37.320 --> 25:39.980\n to computers there as well as in offices\n\n25:39.980 --> 25:42.920\n and people hung out there and it had a coffee machine.\n\n25:42.920 --> 25:46.340\n And so it was mostly very physical.\n\n25:46.340 --> 25:48.020\n We did use email, of course.\n\n25:49.440 --> 25:52.720\n But it was fundamentally, for a long time,\n\n25:52.720 --> 25:54.120\n all on one machine.\n\n25:54.120 --> 25:56.520\n So there was no need for internet.\n\n25:56.520 --> 25:58.660\n It's fascinating to think about what computing\n\n25:58.660 --> 26:00.920\n would be today without Bell Labs.\n\n26:00.920 --> 26:05.000\n It seems so many, the people being in the vicinity\n\n26:05.000 --> 26:08.480\n of each other, sort of getting that quick feedback,\n\n26:08.480 --> 26:11.440\n working together, so many brilliant people.\n\n26:11.440 --> 26:13.200\n I don't know where else that could have existed\n\n26:13.200 --> 26:16.320\n in the world given how that came together.\n\n26:18.000 --> 26:19.720\n Yeah, how does that make you feel\n\n26:19.720 --> 26:23.200\n that little element of history?\n\n26:23.200 --> 26:24.600\n Well, I think that's very nice,\n\n26:24.600 --> 26:26.760\n but in a sense it's survivor bias\n\n26:26.760 --> 26:29.240\n and if it hadn't happened at Bell Labs,\n\n26:29.240 --> 26:31.000\n there were other places that were doing\n\n26:31.000 --> 26:32.880\n really interesting work as well.\n\n26:32.880 --> 26:35.040\n Xerox PARC is perhaps the most obvious one.\n\n26:35.040 --> 26:36.760\n Xerox PARC contributed an enormous amount\n\n26:36.760 --> 26:39.120\n of good material and many of the things\n\n26:39.120 --> 26:41.520\n we take for granted today in the same way\n\n26:41.520 --> 26:43.360\n came from Xerox PARC experience.\n\n26:43.360 --> 26:46.440\n I don't think they capitalized in the long run as much.\n\n26:46.440 --> 26:49.800\n Their parent company was perhaps not as lucky\n\n26:49.800 --> 26:52.800\n in capitalizing on this, who knows?\n\n26:52.800 --> 26:55.000\n But that's certainly another place\n\n26:55.000 --> 26:58.060\n where there was a tremendous amount of influence.\n\n26:58.060 --> 27:00.240\n There were a lot of good university activities.\n\n27:00.240 --> 27:03.720\n MIT was obviously no slouch in this kind of thing\n\n27:03.720 --> 27:06.280\n and others as well.\n\n27:07.120 --> 27:10.660\n So Unix turned out to be open source\n\n27:10.660 --> 27:13.560\n because of the various ways that AT&T operated\n\n27:13.560 --> 27:17.680\n and sort of it had to, the focus was on telephones.\n\n27:19.000 --> 27:21.580\n I think that's a mischaracterization in a sense.\n\n27:21.580 --> 27:23.840\n It absolutely was not open source.\n\n27:23.840 --> 27:27.840\n It was very definitely proprietary, licensed,\n\n27:27.840 --> 27:30.840\n but it was licensed freely to universities\n\n27:30.840 --> 27:33.520\n in source code form for many years.\n\n27:33.520 --> 27:37.680\n And because of that, generations of university students\n\n27:37.680 --> 27:41.760\n and their faculty people grew up knowing about Unix\n\n27:41.760 --> 27:44.720\n and there was enough expertise in the community\n\n27:44.720 --> 27:46.640\n that it then became possible for people\n\n27:46.640 --> 27:48.120\n to kind of go off in their own direction\n\n27:48.120 --> 27:50.540\n and build something that looked Unix like.\n\n27:51.520 --> 27:56.520\n The Berkeley version of Unix started with that licensed code\n\n27:56.520 --> 28:01.520\n and gradually picked up enough of its own code contributions,\n\n28:01.680 --> 28:04.000\n notably from people like Bill Joy,\n\n28:04.000 --> 28:08.600\n that eventually it was able to become completely free\n\n28:08.600 --> 28:10.480\n of any AT&T code.\n\n28:10.480 --> 28:13.120\n Now, there was an enormous amount of legal jockeying\n\n28:13.120 --> 28:17.400\n around this in the late, early to late 80s, early 90s,\n\n28:17.400 --> 28:18.580\n something like that.\n\n28:19.480 --> 28:24.480\n And then, I guess the open source movement\n\n28:24.480 --> 28:27.600\n might've started when Richard Stallman started\n\n28:27.600 --> 28:29.240\n to think about this in the late 80s.\n\n28:29.240 --> 28:33.200\n And by 1991, when Torvalds decided he was going\n\n28:33.200 --> 28:37.040\n to do a Unix like operating system,\n\n28:37.040 --> 28:40.440\n there was enough expertise in the community\n\n28:40.440 --> 28:44.280\n that first he had a target, he could see what to do\n\n28:44.280 --> 28:47.480\n because the kind of the Unix system call interface\n\n28:47.480 --> 28:49.380\n and the tools and so on were there.\n\n28:50.720 --> 28:53.440\n And so he was able to build an operating system\n\n28:53.440 --> 28:56.160\n that at this point, when you say Unix,\n\n28:56.160 --> 28:58.400\n in many cases, what you're really thinking is Linux.\n\n28:58.400 --> 28:59.280\n Linux, yeah.\n\n28:59.280 --> 29:02.880\n But it's funny that from my distant perception,\n\n29:02.880 --> 29:04.720\n I felt that Unix was open source\n\n29:05.720 --> 29:07.440\n without actually knowing it.\n\n29:07.440 --> 29:11.560\n But what you're really saying, it was just freely licensed.\n\n29:11.560 --> 29:12.960\n It was freely licensed.\n\n29:12.960 --> 29:14.880\n So it felt open source in a sense\n\n29:14.880 --> 29:16.960\n because universities are not trying to make money,\n\n29:16.960 --> 29:19.000\n so it felt open source in a sense\n\n29:19.000 --> 29:20.520\n that you can get access if you wanted.\n\n29:20.520 --> 29:23.640\n Right, and a very, very, very large number of universities\n\n29:23.640 --> 29:25.240\n had the license and they were able to talk\n\n29:25.240 --> 29:27.360\n to all the other universities who had the license.\n\n29:27.360 --> 29:30.200\n And so technically not open,\n\n29:30.200 --> 29:34.880\n technically belonging to AT&T, pragmatically pretty open.\n\n29:34.880 --> 29:36.080\n And so there's a ripple effect\n\n29:36.080 --> 29:39.000\n that all the faculty and the students then all grew up\n\n29:39.000 --> 29:41.840\n and then they went throughout the world\n\n29:41.840 --> 29:45.420\n and permeated in that kind of way.\n\n29:45.420 --> 29:49.820\n So what kind of features do you think make\n\n29:49.820 --> 29:51.300\n for a good operating system?\n\n29:52.560 --> 29:54.920\n If you take the lessons of Unix,\n\n29:54.920 --> 29:59.440\n you said make it easy for programmers.\n\n29:59.440 --> 30:03.840\n That seems to be an important one.\n\n30:03.840 --> 30:07.000\n But also Unix turned out to be exceptionally robust\n\n30:07.000 --> 30:08.180\n and efficient.\n\n30:08.180 --> 30:09.020\n Right.\n\n30:09.020 --> 30:12.120\n So is that an accident when you focus on the programmer\n\n30:12.120 --> 30:14.760\n or is that a natural outcome?\n\n30:14.760 --> 30:17.560\n I think part of the reason for efficiency\n\n30:17.560 --> 30:21.160\n was that it began on extremely modest hardware,\n\n30:21.160 --> 30:22.600\n very, very, very tiny.\n\n30:22.600 --> 30:24.000\n And so you couldn't get carried away.\n\n30:24.000 --> 30:26.680\n You couldn't do a lot of complicated things\n\n30:27.740 --> 30:30.000\n because you just didn't have the resources,\n\n30:30.000 --> 30:32.400\n either processor speed or memory.\n\n30:32.400 --> 30:37.400\n And so that enforced a certain minimality of mechanisms\n\n30:37.800 --> 30:40.080\n and maybe a search for generalizations\n\n30:40.080 --> 30:41.840\n so that you would find one mechanism\n\n30:41.840 --> 30:43.520\n that served for a lot of different things\n\n30:43.520 --> 30:45.900\n rather than having lots of different special cases.\n\n30:45.900 --> 30:48.800\n I think the file system in Unix is a good example\n\n30:48.800 --> 30:51.460\n of that file system interface in its fundamental form\n\n30:51.460 --> 30:53.600\n is extremely straightforward.\n\n30:53.600 --> 30:55.600\n And that means that you can write code\n\n30:56.560 --> 30:58.920\n very, very effectively for the file system.\n\n30:58.920 --> 31:02.720\n And then one of those ideas, one of those generalizations\n\n31:02.720 --> 31:04.840\n is that gee, that file system interface works\n\n31:04.840 --> 31:06.780\n for all kinds of other things as well.\n\n31:06.780 --> 31:09.240\n And so in particular, the idea of reading\n\n31:09.240 --> 31:11.600\n and writing to devices is the same as reading\n\n31:11.600 --> 31:14.480\n and writing to a disc that has a file system.\n\n31:14.480 --> 31:17.880\n And then that gets carried further in other parts\n\n31:17.880 --> 31:18.700\n of the world.\n\n31:18.700 --> 31:23.360\n Processes become, in effect, files in a file system.\n\n31:24.240 --> 31:26.440\n And the Plan 9 operating system, which came along,\n\n31:26.440 --> 31:29.320\n I guess, in the late 80s or something like that,\n\n31:29.320 --> 31:31.520\n took a lot of those ideas from the original Unix\n\n31:31.520 --> 31:34.720\n and tried to push the generalization even further\n\n31:34.720 --> 31:37.180\n so that in Plan 9, a lot of different resources\n\n31:37.180 --> 31:38.180\n are file systems.\n\n31:38.180 --> 31:40.040\n They all share that interface.\n\n31:40.040 --> 31:44.360\n So that would be one example where finding the right model\n\n31:44.360 --> 31:46.800\n of how to do something means that an awful lot of things\n\n31:46.800 --> 31:48.840\n become simpler, and it means, therefore,\n\n31:48.840 --> 31:51.200\n that more people can do useful, interesting things\n\n31:51.200 --> 31:54.440\n with them without having to think as hard about it.\n\n31:54.440 --> 31:56.960\n So you said you're not a very good programmer.\n\n31:56.960 --> 31:58.480\n That's true.\n\n31:58.480 --> 32:01.400\n You're the most modest human being, okay,\n\n32:01.400 --> 32:03.280\n but you'll continue saying that.\n\n32:03.280 --> 32:04.420\n I understand how this works.\n\n32:04.420 --> 32:07.760\n But you do radiate a sort of love for programming.\n\n32:07.760 --> 32:10.840\n So let me ask, do you think programming\n\n32:10.840 --> 32:13.240\n is more an art or a science?\n\n32:13.240 --> 32:16.640\n Is it creativity or kind of rigor?\n\n32:16.640 --> 32:18.080\n I think it's some of each.\n\n32:18.080 --> 32:20.800\n It's some combination.\n\n32:20.800 --> 32:22.680\n Some of the art is figuring out what it is\n\n32:22.680 --> 32:23.720\n that you really want to do.\n\n32:23.720 --> 32:25.520\n What should that program be?\n\n32:25.520 --> 32:27.560\n What would make a good program?\n\n32:27.560 --> 32:30.640\n And that's some understanding of what the task is,\n\n32:30.640 --> 32:33.600\n what the people who might use this program want.\n\n32:33.600 --> 32:37.760\n And I think that's art in many respects.\n\n32:37.760 --> 32:40.480\n The science part is trying to figure out how to do it well.\n\n32:40.480 --> 32:45.240\n And some of that is real computer sciencey stuff,\n\n32:45.240 --> 32:48.080\n like what algorithm should we use at some point?\n\n32:48.080 --> 32:52.320\n Mostly in the sense of being careful to use algorithms\n\n32:52.320 --> 32:56.240\n that will actually work properly, scale properly,\n\n32:56.240 --> 32:58.000\n avoiding quadratic algorithms\n\n32:58.000 --> 33:01.280\n when a linear algorithm should be the right thing,\n\n33:01.280 --> 33:04.080\n that kind of more formal view of it.\n\n33:04.080 --> 33:06.380\n Same thing for data structures.\n\n33:06.380 --> 33:10.360\n But also it's, I think, an engineering field as well.\n\n33:10.360 --> 33:12.480\n And engineering is not quite the same as science\n\n33:12.480 --> 33:15.320\n because engineering, you're working with constraints.\n\n33:15.320 --> 33:19.200\n You have to figure out not only what\n\n33:19.200 --> 33:21.080\n is a good algorithm for this kind of thing,\n\n33:21.080 --> 33:23.240\n but what's the most appropriate algorithm given\n\n33:23.240 --> 33:26.200\n the amount of time we have to compute,\n\n33:26.200 --> 33:28.000\n the amount of time we have to program,\n\n33:28.000 --> 33:30.880\n what's likely to happen in the future with maintenance,\n\n33:30.880 --> 33:33.280\n who's going to pick this up in the future, all\n\n33:33.280 --> 33:35.840\n of those kind of things that if you're an engineer,\n\n33:35.840 --> 33:37.240\n you get to worry about.\n\n33:37.240 --> 33:39.160\n Whereas if you think of yourself as a scientist,\n\n33:39.160 --> 33:42.080\n well, you can maybe push them over the horizon in a way.\n\n33:42.080 --> 33:45.360\n And if you're an artist, what's that?\n\n33:45.360 --> 33:48.600\n So just on your own personal level,\n\n33:48.600 --> 33:50.640\n what's your process like of writing a program?\n\n33:50.640 --> 33:55.840\n Say, a small and large sort of tinkering with stuff.\n\n33:55.840 --> 33:58.000\n Do you just start coding right away\n\n33:58.000 --> 34:03.040\n and just kind of evolve iteratively with a loose notion?\n\n34:03.040 --> 34:05.760\n Or do you plan on a sheet of paper first\n\n34:05.760 --> 34:09.320\n and then kind of design in what they teach you\n\n34:09.320 --> 34:12.040\n in the kind of software engineering courses\n\n34:12.040 --> 34:13.600\n in undergrad or something like that?\n\n34:13.600 --> 34:14.880\n What's your process like?\n\n34:14.880 --> 34:17.480\n It's certainly much more the informal incremental.\n\n34:17.480 --> 34:19.880\n First, I don't write big programs at this point.\n\n34:19.880 --> 34:21.880\n It's been a long time since I wrote a program that\n\n34:21.880 --> 34:25.560\n was more than I call it a few hundred or more lines,\n\n34:25.560 --> 34:26.960\n something like that.\n\n34:26.960 --> 34:29.080\n Many of the programs I write are experiments\n\n34:29.080 --> 34:31.680\n for either something I'm curious about\n\n34:31.680 --> 34:34.680\n or often for something that I want to talk about in a class.\n\n34:34.680 --> 34:38.920\n So those necessarily tend to be relatively small.\n\n34:38.920 --> 34:41.400\n A lot of the kind of code I write these days\n\n34:41.400 --> 34:44.280\n tends to be for sort of exploratory data analysis\n\n34:44.280 --> 34:46.200\n where I've got some collection of data\n\n34:46.200 --> 34:49.160\n and I want to try and figure out what on earth is going on in it.\n\n34:49.160 --> 34:52.280\n And for that, those programs tend to be very small.\n\n34:52.280 --> 34:53.920\n Sometimes you're not even programming.\n\n34:53.920 --> 34:57.720\n You're just using existing tools like counting things.\n\n34:57.720 --> 35:00.200\n Or sometimes you're writing OX scripts\n\n35:00.200 --> 35:02.360\n because two or three lines will tell you\n\n35:02.360 --> 35:03.960\n something about a piece of data.\n\n35:03.960 --> 35:05.640\n And then when it gets bigger, well, then I\n\n35:05.640 --> 35:08.800\n will probably write something in Python\n\n35:08.800 --> 35:13.200\n because that scales better up to call it a few hundred lines\n\n35:13.200 --> 35:14.240\n or something like that.\n\n35:14.240 --> 35:16.320\n And it's been a long time since I wrote programs\n\n35:16.320 --> 35:18.600\n that were much more than that.\n\n35:18.600 --> 35:23.680\n Speaking of data exploration and OX, first, what is OX?\n\n35:23.680 --> 35:25.680\n So OX is a scripting language that\n\n35:25.680 --> 35:30.280\n was done by myself, Al Aho, and Peter Weinberger.\n\n35:30.280 --> 35:32.240\n We did that originally in the late 70s.\n\n35:32.240 --> 35:34.800\n It was a language that was meant to make it really easy\n\n35:34.800 --> 35:39.360\n to do quick and dirty tasks like counting things\n\n35:39.360 --> 35:43.680\n or selecting interesting information from basically\n\n35:43.680 --> 35:47.640\n all text files, rearranging it in some way or summarizing it.\n\n35:47.640 --> 35:51.480\n It runs a command on each line of a file.\n\n35:51.480 --> 35:55.480\n I mean, it's still exceptionally widely used today.\n\n35:55.480 --> 35:56.280\n Oh, absolutely.\n\n35:56.280 --> 35:56.800\n Yeah.\n\n35:56.800 --> 36:01.480\n It's so simple and elegant, sort of the way to explore data.\n\n36:01.480 --> 36:03.320\n Turns out you can just write a script that\n\n36:03.320 --> 36:07.120\n does something seemingly trivial in a single line,\n\n36:07.120 --> 36:09.880\n and giving you that slice of the data\n\n36:09.880 --> 36:13.200\n somehow reveals something fundamental about the data.\n\n36:13.200 --> 36:17.040\n And that seems to work still.\n\n36:17.040 --> 36:19.640\n Yeah, it's very good for that kind of thing.\n\n36:19.640 --> 36:21.200\n That's sort of what it was meant for.\n\n36:21.200 --> 36:22.600\n I think what we didn't appreciate\n\n36:22.600 --> 36:26.240\n was that the model was actually quite good for a lot of data\n\n36:26.240 --> 36:29.040\n processing kinds of tasks and that it's\n\n36:29.040 --> 36:31.440\n kept going as long as it has because at this point,\n\n36:31.440 --> 36:35.920\n it's over 40 years old, and it's still, I think, a useful tool.\n\n36:35.920 --> 36:38.400\n And well, this is paternal interest, I guess.\n\n36:38.400 --> 36:40.960\n But I think in terms of programming languages,\n\n36:40.960 --> 36:44.240\n you get the most bang for the buck by learning AUC.\n\n36:44.240 --> 36:46.560\n And it doesn't scale the big programs,\n\n36:46.560 --> 36:49.920\n but it does pretty darn well on these little things\n\n36:49.920 --> 36:53.760\n where you just want to see all the somethings in something.\n\n36:53.760 --> 36:56.960\n So yeah, I probably write more AUC than anything else\n\n36:56.960 --> 36:58.640\n at this point.\n\n36:58.640 --> 37:01.160\n So what kind of stuff do you love about AUC?\n\n37:01.160 --> 37:06.240\n Is there, if you can comment on sort of things\n\n37:06.240 --> 37:10.200\n that give you joy when you can, in a simple program,\n\n37:10.200 --> 37:11.560\n reveal something about the data.\n\n37:11.560 --> 37:14.520\n Is there something that stands out from particular features?\n\n37:14.520 --> 37:19.440\n I think it's mostly the selection of default behaviors.\n\n37:19.440 --> 37:21.080\n You sort of hinted at it a moment ago.\n\n37:21.080 --> 37:24.760\n What AUC does is to read through a set of files,\n\n37:24.760 --> 37:26.640\n and then within each file, it writes\n\n37:26.640 --> 37:28.400\n through each of the lines.\n\n37:28.400 --> 37:31.760\n And then on each of the lines, it has a set of patterns\n\n37:31.760 --> 37:33.120\n that it looks for.\n\n37:33.120 --> 37:34.720\n That's your AUC program.\n\n37:34.720 --> 37:36.920\n And if one of the patterns matches,\n\n37:36.920 --> 37:40.000\n there is a corresponding action that you might perform.\n\n37:40.000 --> 37:43.960\n And so it's kind of a quadruply nested loop or something\n\n37:43.960 --> 37:45.160\n like that.\n\n37:45.160 --> 37:46.620\n And that's all completely automatic.\n\n37:46.620 --> 37:48.280\n You don't have to say anything about it.\n\n37:48.280 --> 37:49.960\n You just write the pattern and the action,\n\n37:49.960 --> 37:52.120\n and then run the data by it.\n\n37:52.120 --> 37:54.240\n And so that paradigm for programming\n\n37:54.240 --> 37:56.880\n is a very natural and effective one.\n\n37:56.880 --> 38:00.160\n And I think we captured that reasonably well in AUC.\n\n38:00.160 --> 38:01.960\n And it does other things for free as well.\n\n38:01.960 --> 38:05.320\n It splits the data into fields so that on each line,\n\n38:05.320 --> 38:07.640\n there is fields separated by white space or something.\n\n38:07.640 --> 38:08.840\n And so it does that for free.\n\n38:08.840 --> 38:11.200\n You don't have to say anything about it.\n\n38:11.200 --> 38:13.840\n And it collects information as it goes along,\n\n38:13.840 --> 38:15.360\n like what line are we on?\n\n38:15.360 --> 38:18.040\n How many fields are there on this line?\n\n38:18.040 --> 38:21.160\n So lots of things that just make it so that a program which\n\n38:21.160 --> 38:24.080\n in another language, let's say Python,\n\n38:24.080 --> 38:28.040\n would be five, 10, 20 lines in AUC is one or two lines.\n\n38:28.040 --> 38:29.600\n And so because it's one or two lines,\n\n38:29.600 --> 38:31.840\n you can do it on the shell.\n\n38:31.840 --> 38:33.720\n You don't have to open up another whole thing.\n\n38:33.720 --> 38:35.920\n You can just do it right there in the interaction\n\n38:35.920 --> 38:38.920\n with the operatives directly.\n\n38:38.920 --> 38:44.880\n Is there other shell commands that you love over the years\n\n38:44.880 --> 38:46.320\n like you really enjoy using?\n\n38:46.320 --> 38:47.360\n Oh, grep.\n\n38:47.360 --> 38:47.920\n Grep?\n\n38:47.920 --> 38:49.720\n Grep's the only one.\n\n38:49.720 --> 38:51.440\n Yeah, grep does everything.\n\n38:51.440 --> 38:55.360\n So grep is a simpler version of AUC, I would say?\n\n38:55.360 --> 38:58.000\n In some sense, yeah, right.\n\n38:58.000 --> 38:58.880\n What is grep?\n\n38:58.880 --> 39:01.840\n So grep basically searches the input\n\n39:01.840 --> 39:04.000\n for particular patterns, regular expressions,\n\n39:04.000 --> 39:06.160\n technically, of a certain class.\n\n39:06.160 --> 39:08.640\n And it has that same paradigm that AUC does.\n\n39:08.640 --> 39:10.080\n It's a pattern action thing.\n\n39:10.080 --> 39:12.080\n It reads through all the files and then\n\n39:12.080 --> 39:13.480\n all the lines in each file.\n\n39:13.480 --> 39:15.200\n But it has a single pattern, which\n\n39:15.200 --> 39:17.040\n is the regular expression you're looking for,\n\n39:17.040 --> 39:20.240\n and a single action printed if it matches.\n\n39:20.240 --> 39:22.600\n So in that sense, it's a much simpler version.\n\n39:22.600 --> 39:26.800\n And you could write grep in AUC as a one liner.\n\n39:26.800 --> 39:30.440\n And I use grep probably more than anything else\n\n39:30.440 --> 39:35.000\n at this point just because it's so convenient and natural.\n\n39:35.000 --> 39:38.640\n Why do you think it's such a powerful tool, grep and AUC?\n\n39:38.640 --> 39:41.280\n Why do you think operating systems like Windows,\n\n39:41.280 --> 39:45.240\n for example, don't have it?\n\n39:45.240 --> 39:48.240\n You can, of course, I use, which is amazing now,\n\n39:48.240 --> 39:50.120\n there's Windows for Linux.\n\n39:50.120 --> 39:54.880\n So which you could basically use all the fun stuff\n\n39:54.880 --> 39:57.320\n like AUC and grep inside of Windows.\n\n39:57.320 --> 40:00.800\n But Windows naturally, as part of the graphical interface,\n\n40:00.800 --> 40:03.200\n the simplicity of grep, searching\n\n40:03.200 --> 40:06.560\n through a bunch of files and just popping up naturally.\n\n40:06.560 --> 40:11.560\n Why do you think that's unique to the Linux environment?\n\n40:11.560 --> 40:12.400\n I don't know.\n\n40:12.400 --> 40:16.400\n It's not strictly unique, but it's certainly focused there.\n\n40:16.400 --> 40:19.080\n And I think some of it's the weight of history\n\n40:19.080 --> 40:22.040\n that Windows came from MS DOS.\n\n40:22.040 --> 40:24.520\n MS DOS was a pretty pathetic operating system,\n\n40:24.520 --> 40:27.760\n although common on an unboundedly large number\n\n40:27.760 --> 40:28.960\n of machines.\n\n40:28.960 --> 40:32.840\n But somewhere in roughly the 90s,\n\n40:32.840 --> 40:34.680\n Windows became a graphical system.\n\n40:34.680 --> 40:37.960\n And I think Microsoft spent a lot of their energy\n\n40:37.960 --> 40:41.600\n on making that graphical interface what it is.\n\n40:41.600 --> 40:44.160\n And that's a different model of computing.\n\n40:44.160 --> 40:47.120\n It's a model of computing where you point and click\n\n40:47.120 --> 40:49.480\n and sort of experiment with menus.\n\n40:49.480 --> 40:53.160\n It's a model of computing works rather well for people\n\n40:53.160 --> 40:56.080\n who are not programmers and just want to get something done,\n\n40:56.080 --> 40:59.080\n whereas teaching something like the command line\n\n40:59.080 --> 41:01.760\n to nonprogrammers turns out to sometimes be\n\n41:01.760 --> 41:02.720\n an uphill struggle.\n\n41:02.720 --> 41:04.400\n And so I think Microsoft probably\n\n41:04.400 --> 41:06.240\n was right in what they did.\n\n41:06.240 --> 41:07.920\n Now you mentioned Whistle or whatever\n\n41:07.920 --> 41:09.520\n it's called, the Winix, Linux.\n\n41:09.520 --> 41:10.040\n Whistle.\n\n41:10.040 --> 41:11.480\n I wonder what it's pronounced.\n\n41:11.480 --> 41:13.120\n WSL is what I've never actually pronounced.\n\n41:13.120 --> 41:13.920\n Whistle, I like it.\n\n41:13.920 --> 41:15.880\n I have no idea.\n\n41:15.880 --> 41:17.880\n But there have been things like that for longest.\n\n41:17.880 --> 41:21.320\n Cygwin, for example, which is a wonderful collection of take\n\n41:21.320 --> 41:23.320\n all your favorite tools from Unix and Linux\n\n41:23.320 --> 41:25.440\n and just make them work perfectly on Windows.\n\n41:25.440 --> 41:27.320\n And so that's something that's been going on\n\n41:27.320 --> 41:29.920\n for at least 20 years, if not longer.\n\n41:29.920 --> 41:34.600\n And I use that on my one remaining Windows machine\n\n41:34.600 --> 41:37.960\n routinely because if you're doing something that\n\n41:37.960 --> 41:41.360\n is batch computing, suitable for command line,\n\n41:41.360 --> 41:42.700\n that's the right way to do it.\n\n41:42.700 --> 41:45.160\n Because the Windows equivalents are, if nothing else,\n\n41:45.160 --> 41:47.760\n not familiar to me.\n\n41:47.760 --> 41:50.200\n But I would definitely recommend to people\n\n41:50.200 --> 41:52.440\n if they don't use Cygwin to try Whistle.\n\n41:52.440 --> 41:54.240\n Yes.\n\n41:54.240 --> 41:59.600\n I've been so excited that I could write scripts quickly\n\n41:59.600 --> 42:00.560\n in Windows.\n\n42:00.560 --> 42:03.160\n It's changed my life.\n\n42:03.160 --> 42:06.400\n OK, what's your perfect programming setup?\n\n42:06.400 --> 42:09.080\n What computer, what operating system, what keyboard,\n\n42:09.080 --> 42:10.440\n what editor?\n\n42:10.440 --> 42:13.320\n Yeah, perfect is too strong a word.\n\n42:13.320 --> 42:15.280\n It's way too strong a word.\n\n42:15.280 --> 42:18.880\n What I use by default, I have, at this point,\n\n42:18.880 --> 42:22.000\n a 13 inch MacBook Air, which I use\n\n42:22.000 --> 42:24.240\n because it's kind of a reasonable balance\n\n42:24.240 --> 42:25.400\n of the various things I need.\n\n42:25.400 --> 42:26.600\n I can carry it around.\n\n42:26.600 --> 42:28.400\n It's got enough computing, horsepower, screen's\n\n42:28.400 --> 42:31.080\n big enough, keyboard's OK.\n\n42:31.080 --> 42:34.640\n And so I basically do most of my computing on that.\n\n42:34.640 --> 42:38.840\n I have a big iMac in my office that I use from time to time\n\n42:38.840 --> 42:41.020\n as well, especially when I need a big screen,\n\n42:41.020 --> 42:47.080\n but otherwise, it tends not to be used that much.\n\n42:47.080 --> 42:48.320\n Editor.\n\n42:48.320 --> 42:52.600\n I use mostly SAM, which is an editor that Rob Pike wrote\n\n42:52.600 --> 42:56.080\n long ago at Bell Labs.\n\n42:56.080 --> 42:56.960\n Sorry to interrupt.\n\n42:56.960 --> 42:58.680\n Does that precede VI?\n\n42:58.680 --> 43:00.040\n Does that precede iMac?\n\n43:00.040 --> 43:04.000\n It post dates both VI and iMacs.\n\n43:04.000 --> 43:11.120\n It is derived from Rob's experience with ED and VI.\n\n43:11.120 --> 43:12.760\n What's ED?\n\n43:12.760 --> 43:14.600\n That's the original Unix editor.\n\n43:14.600 --> 43:16.520\n Oh, wow.\n\n43:16.520 --> 43:19.600\n Dated probably before you were born.\n\n43:19.600 --> 43:23.480\n So actually, what's the history of editors?\n\n43:23.480 --> 43:26.680\n Can you briefly, because it's such a fact.\n\n43:26.680 --> 43:28.840\n I use Emacs, I'm sorry to say.\n\n43:28.840 --> 43:30.280\n Sorry to come out with that.\n\n43:30.280 --> 43:33.640\n But what's the kind of interplay there?\n\n43:33.640 --> 43:39.280\n So in ancient times, call it the first time sharing systems,\n\n43:39.280 --> 43:41.800\n going back to what we were talking about.\n\n43:41.800 --> 43:44.560\n There was an editor on CTSS that I don't even\n\n43:44.560 --> 43:45.760\n remember what it was called.\n\n43:45.760 --> 43:50.280\n It might have been edit, where you could type text, program\n\n43:50.280 --> 43:53.760\n text, and it would do something, or document text.\n\n43:53.760 --> 43:54.960\n You could save the text.\n\n43:54.960 --> 43:55.560\n And save it.\n\n43:55.560 --> 43:57.240\n You could edit it.\n\n43:57.240 --> 44:00.200\n The usual thing that you would get in an editor.\n\n44:00.200 --> 44:04.080\n And Ken Thompson wrote an editor called QED, which\n\n44:04.080 --> 44:05.960\n was very, very powerful.\n\n44:05.960 --> 44:08.680\n But these were all totally A, command based.\n\n44:08.680 --> 44:10.760\n They were not mouse or cursor based,\n\n44:10.760 --> 44:13.720\n because it was before mice and even before cursors,\n\n44:13.720 --> 44:17.000\n because they were running on terminals that printed on paper.\n\n44:17.000 --> 44:21.280\n No CRT type displays, let alone LEDs.\n\n44:21.280 --> 44:26.080\n And so then when Unix came along, Ken took QED\n\n44:26.080 --> 44:28.680\n and stripped it way, way, way, way down.\n\n44:28.680 --> 44:30.960\n And that became an editor that he called ED.\n\n44:30.960 --> 44:31.960\n And it was very simple.\n\n44:31.960 --> 44:33.800\n But it was a line oriented editor.\n\n44:33.800 --> 44:36.080\n And so you could load a file.\n\n44:36.080 --> 44:38.120\n And then you could talk about the lines one\n\n44:38.120 --> 44:39.240\n through the last line.\n\n44:39.240 --> 44:41.600\n And you could print ranges of lines.\n\n44:41.600 --> 44:43.080\n You could add text.\n\n44:43.080 --> 44:44.000\n You could delete text.\n\n44:44.000 --> 44:44.880\n You could change text.\n\n44:44.880 --> 44:46.440\n Or you could do a substitute command\n\n44:46.440 --> 44:48.800\n that would change things within a line or within groups\n\n44:48.800 --> 44:49.280\n of lines.\n\n44:49.280 --> 44:51.320\n So you can work on parts of a file, essentially.\n\n44:51.320 --> 44:51.480\n Yeah.\n\n44:51.480 --> 44:54.000\n You can work on any part of it, the whole thing or whatever.\n\n44:54.000 --> 44:57.320\n But it was entirely command line based.\n\n44:57.320 --> 45:00.800\n And it was entirely on paper.\n\n45:00.800 --> 45:01.560\n Paper.\n\n45:01.560 --> 45:02.960\n And that meant that you changed it.\n\n45:02.960 --> 45:03.480\n Yeah, right.\n\n45:03.480 --> 45:04.080\n Real paper.\n\n45:04.080 --> 45:06.240\n And so if you changed a line, you\n\n45:06.240 --> 45:09.120\n had to print that line using up another line of paper\n\n45:09.120 --> 45:12.920\n to see what the change caused.\n\n45:12.920 --> 45:18.320\n So when CRT displays came along, then you\n\n45:18.320 --> 45:19.760\n could start to use cursor control.\n\n45:19.760 --> 45:24.200\n And you could sort of move where you were on the screen.\n\n45:24.200 --> 45:26.080\n Without reprinting every time.\n\n45:26.080 --> 45:27.000\n Without reprinting.\n\n45:27.000 --> 45:29.880\n And there were a number of editors there.\n\n45:29.880 --> 45:32.720\n The one that I was most familiar with and still use\n\n45:32.720 --> 45:35.160\n is VI, which was done by Bill Choi.\n\n45:35.160 --> 45:40.760\n And so that dates from probably the late 70s, as I guess.\n\n45:40.760 --> 45:45.200\n And it took full advantage of the cursor controls.\n\n45:45.200 --> 45:48.360\n I suspect that Emacs was roughly at the same time.\n\n45:48.360 --> 45:49.040\n But I don't know.\n\n45:49.040 --> 45:51.760\n I've never internalized Emacs.\n\n45:51.760 --> 45:56.320\n So at this point, I stopped using ED, although I still can.\n\n45:56.320 --> 46:00.120\n I use VI sometimes, and I use SAM when I can.\n\n46:00.120 --> 46:02.480\n And SAM is available on most systems?\n\n46:02.480 --> 46:04.320\n It is available.\n\n46:04.320 --> 46:06.360\n You have to download it yourself from, typically,\n\n46:06.360 --> 46:08.520\n the Plan 9 operating system distribution.\n\n46:08.520 --> 46:11.800\n It's been maintained by people there.\n\n46:11.800 --> 46:13.600\n And so I'll get home tonight.\n\n46:13.600 --> 46:14.280\n I'll try it.\n\n46:14.280 --> 46:14.800\n It's cool.\n\n46:14.800 --> 46:17.800\n It sounds fascinating.\n\n46:17.800 --> 46:20.600\n Although my love is with Lisp and Emacs,\n\n46:20.600 --> 46:25.120\n I've went into that hippie world of.\n\n46:25.120 --> 46:26.280\n I think it's a lot of things.\n\n46:26.280 --> 46:27.760\n Religion, where you're brought up with.\n\n46:27.760 --> 46:28.760\n Yeah, that's true.\n\n46:28.760 --> 46:29.280\n That's true.\n\n46:29.280 --> 46:34.080\n Most of the actual programming I do is C, C++, and Python.\n\n46:34.080 --> 46:38.160\n But my weird sort of, yeah, my religious upbringing is in Lisp.\n\n46:38.160 --> 46:41.840\n So can you take on the impossible task\n\n46:41.840 --> 46:44.760\n and give a brief history of programming languages\n\n46:44.760 --> 46:46.440\n from your perspective?\n\n46:46.440 --> 46:48.800\n So I guess you could say programming languages started\n\n46:48.800 --> 46:52.000\n probably in, what, the late 40s or something like that.\n\n46:52.000 --> 46:55.200\n People used to program computers by basically putting\n\n46:55.200 --> 46:56.240\n in zeros and ones.\n\n46:56.240 --> 46:59.760\n Using something like switches on a console.\n\n46:59.760 --> 47:03.560\n And then, or maybe holes in paper tapes.\n\n47:03.560 --> 47:04.920\n Something like that.\n\n47:04.920 --> 47:08.040\n So extremely tedious, awful, whatever.\n\n47:08.040 --> 47:10.280\n And so I think the first programming languages\n\n47:10.280 --> 47:14.560\n were relatively crude assembly languages,\n\n47:14.560 --> 47:17.840\n where people would basically write\n\n47:17.840 --> 47:22.360\n a program that would convert mnemonics like add ADD\n\n47:22.360 --> 47:24.920\n into whatever the bit pattern was\n\n47:24.920 --> 47:26.800\n that corresponded to an ADD instruction.\n\n47:26.800 --> 47:28.960\n And they would do the clerical work of figuring out\n\n47:28.960 --> 47:30.080\n where things were.\n\n47:30.080 --> 47:32.840\n So you could put a name on a location in a program,\n\n47:32.840 --> 47:34.920\n and the assembler would figure out\n\n47:34.920 --> 47:37.920\n where that corresponded to when the thing was all put together\n\n47:37.920 --> 47:40.760\n and dropped into memory.\n\n47:40.760 --> 47:46.280\n And early on, and this would be the late 40s and very early\n\n47:46.280 --> 47:50.040\n 50s, there were assemblers written for the various machines\n\n47:50.040 --> 47:51.040\n that people used.\n\n47:51.040 --> 47:53.460\n You may have seen in the paper just a couple of days ago,\n\n47:53.460 --> 47:54.240\n Tony Berker died.\n\n47:54.240 --> 47:58.720\n He did this thing in Manchester called AutoCode, a language\n\n47:58.720 --> 48:01.000\n which I knew only by name.\n\n48:01.000 --> 48:04.400\n But it sounds like it was a flavor of assembly language,\n\n48:04.400 --> 48:06.680\n sort of a little higher in some ways.\n\n48:06.680 --> 48:09.040\n And it replaced a language that Alan Turing wrote,\n\n48:09.040 --> 48:10.840\n which you put in zeros and ones.\n\n48:10.840 --> 48:12.480\n But you put it in backwards order,\n\n48:12.480 --> 48:14.400\n because that was a hardware word.\n\n48:14.400 --> 48:14.920\n Very strange.\n\n48:14.920 --> 48:15.480\n That's right.\n\n48:15.480 --> 48:16.520\n Yeah, yeah, that's right.\n\n48:16.520 --> 48:17.880\n Backwards.\n\n48:17.880 --> 48:22.320\n So assembly languages, let's call that the early 1950s.\n\n48:22.320 --> 48:24.280\n And so every different flavor of computer\n\n48:24.280 --> 48:25.800\n has its own assembly language.\n\n48:25.800 --> 48:28.920\n So the EDSAC had its, and the Manchester had its,\n\n48:28.920 --> 48:33.640\n and the IBM whatever, 790 or 704, or whatever had its,\n\n48:33.640 --> 48:34.240\n and so on.\n\n48:34.240 --> 48:36.080\n So everybody had their own assembly language.\n\n48:36.080 --> 48:38.760\n And assembly languages have a few commands, additions,\n\n48:38.760 --> 48:41.160\n subtraction, then branching of some kind,\n\n48:41.160 --> 48:42.920\n if then type of situation.\n\n48:42.920 --> 48:46.720\n Right, they have exactly, in their simplest form at least,\n\n48:46.720 --> 48:50.000\n one instruction per, or one assembly language instruction\n\n48:50.000 --> 48:52.880\n per instruction in the machine's repertoire.\n\n48:52.880 --> 48:54.920\n And so you have to know the machine intimately\n\n48:54.920 --> 48:56.760\n to be able to write programs in it.\n\n48:56.760 --> 48:58.640\n And if you write an assembly language program\n\n48:58.640 --> 49:00.440\n for one kind of machine, and then you say,\n\n49:00.440 --> 49:03.920\n gee, it's nice, I'd like a different machine, start over.\n\n49:03.920 --> 49:06.160\n OK, so very bad.\n\n49:06.160 --> 49:08.680\n And so what happened in the late 50s\n\n49:08.680 --> 49:10.960\n was people realized you could play this game again,\n\n49:10.960 --> 49:15.480\n and you could move up a level in writing or creating languages\n\n49:15.480 --> 49:18.000\n that were closer to the way that real people might think\n\n49:18.000 --> 49:20.680\n about how to write code.\n\n49:20.680 --> 49:24.080\n And there were, I guess, arguably three or four\n\n49:24.080 --> 49:25.600\n at that time period.\n\n49:25.600 --> 49:28.080\n There was FORTRAN, which came from IBM,\n\n49:28.080 --> 49:29.960\n which was formula translation, meant\n\n49:29.960 --> 49:32.240\n to make it easy to do scientific and engineering\n\n49:32.240 --> 49:32.840\n computations.\n\n49:32.840 --> 49:34.920\n I didn't know that, formula translation, that's wow.\n\n49:34.920 --> 49:35.680\n That's what I stood for.\n\n49:35.680 --> 49:37.880\n There was COBOL, which is the Common Business Oriented\n\n49:37.880 --> 49:40.920\n Language that Grace Hopper and others worked on,\n\n49:40.920 --> 49:44.200\n which was aimed at business kinds of tasks.\n\n49:44.200 --> 49:45.680\n There was ALGOL, which was mostly\n\n49:45.680 --> 49:49.280\n meant to describe algorithmic computations.\n\n49:49.280 --> 49:51.440\n I guess you could argue BASIC was in there somewhere.\n\n49:51.440 --> 49:54.400\n I think it's just a little later.\n\n49:54.400 --> 49:56.360\n And so all of those moved the level up,\n\n49:56.360 --> 49:59.920\n and so they were closer to what you and I might think of\n\n49:59.920 --> 50:02.520\n as we were trying to write a program.\n\n50:02.520 --> 50:06.400\n And they were focused on different domains, FORTRAN\n\n50:06.400 --> 50:09.160\n for formula translation, engineering computations,\n\n50:09.160 --> 50:11.640\n let's say COBOL for business, that kind of thing.\n\n50:11.640 --> 50:14.520\n And still used today, at least FORTRAN probably.\n\n50:14.520 --> 50:16.760\n Oh, yeah, COBOL, too.\n\n50:16.760 --> 50:19.440\n But the deal was that once you moved up that level,\n\n50:19.440 --> 50:21.120\n then you, let's call it FORTRAN, you\n\n50:21.120 --> 50:24.640\n had a language that was not tied to a particular kind\n\n50:24.640 --> 50:26.840\n of hardware, because a different compiler would compile\n\n50:26.840 --> 50:28.180\n for a different kind of hardware.\n\n50:28.180 --> 50:30.080\n And that meant two things.\n\n50:30.080 --> 50:32.360\n It meant you only had to write the program once, which\n\n50:32.360 --> 50:33.920\n is very important.\n\n50:33.920 --> 50:35.960\n And it meant that you could, in fact,\n\n50:35.960 --> 50:38.240\n if you were a random engineer, physicist, whatever,\n\n50:38.240 --> 50:39.800\n you could write that program yourself.\n\n50:39.800 --> 50:42.240\n You didn't have to hire a programmer to do it for you.\n\n50:42.240 --> 50:44.500\n It might not be as good as you'd get with a real programmer,\n\n50:44.500 --> 50:45.840\n but it was pretty good.\n\n50:45.840 --> 50:49.640\n And so it democratized and made much more broadly available\n\n50:49.640 --> 50:51.440\n the ability to write code.\n\n50:51.440 --> 50:53.080\n So it puts the power of programming\n\n50:53.080 --> 50:54.600\n into the hands of people like you.\n\n50:54.600 --> 50:58.480\n Yeah, anybody who is willing to invest some time in learning\n\n50:58.480 --> 51:00.720\n a programming language and is not then tied\n\n51:00.720 --> 51:03.520\n to a particular kind of computer.\n\n51:03.520 --> 51:06.280\n And then in the 70s, you get system programming languages,\n\n51:06.280 --> 51:08.480\n of which C is the survivor.\n\n51:08.480 --> 51:11.840\n And what does system programming language mean?\n\n51:11.840 --> 51:14.920\n Programs that, programming languages\n\n51:14.920 --> 51:16.560\n that would take on the kinds of things\n\n51:16.560 --> 51:19.360\n that were necessary to write so called system programs.\n\n51:19.360 --> 51:22.720\n Things like text editors, or assemblers, or compilers,\n\n51:22.720 --> 51:24.920\n or operating systems themselves.\n\n51:24.920 --> 51:26.600\n Those kinds of things.\n\n51:26.600 --> 51:28.000\n And Fortran.\n\n51:28.000 --> 51:29.160\n They have to be feature rich.\n\n51:29.160 --> 51:30.960\n They have to be able to do a lot of stuff.\n\n51:30.960 --> 51:33.640\n A lot of memory management, access processes,\n\n51:33.640 --> 51:35.600\n and all that kind of stuff.\n\n51:35.600 --> 51:37.560\n It's a different flavor of what they're doing.\n\n51:37.560 --> 51:41.200\n They're much more in touch with the actual machine,\n\n51:41.200 --> 51:42.360\n but in a positive way.\n\n51:42.360 --> 51:44.760\n That is, you can talk about memory in a more controlled\n\n51:44.760 --> 51:45.880\n way.\n\n51:45.880 --> 51:48.000\n You can talk about the different data types\n\n51:48.000 --> 51:52.760\n that the machine supports, and more ways\n\n51:52.760 --> 51:54.840\n to structure and organize data.\n\n51:54.840 --> 51:57.360\n And so the system programming languages,\n\n51:57.360 --> 51:59.720\n there was a lot of effort in that in the,\n\n51:59.720 --> 52:02.120\n call it the late 60s, early 70s.\n\n52:02.120 --> 52:06.240\n C is, I think, the only real survivor of that.\n\n52:06.240 --> 52:09.000\n And then what happens after that?\n\n52:09.000 --> 52:12.080\n You get things like object oriented programming languages.\n\n52:12.080 --> 52:14.880\n Because as you write programs in a language like C,\n\n52:14.880 --> 52:16.520\n at some point scale gets to you.\n\n52:16.520 --> 52:18.440\n And it's too hard to keep track of the pieces.\n\n52:18.440 --> 52:21.040\n And there's no guardrails, or training wheels,\n\n52:21.040 --> 52:22.480\n or something like that to prevent you\n\n52:22.480 --> 52:24.320\n from doing bad things.\n\n52:24.320 --> 52:28.200\n So C++ comes out of that tradition.\n\n52:28.200 --> 52:29.560\n And then it took off from there.\n\n52:29.560 --> 52:32.160\n I mean, there's also a parallel, slightly parallel track\n\n52:32.160 --> 52:35.080\n with a little bit of functional stuff with Lisp and so on.\n\n52:35.080 --> 52:37.080\n But I guess from that point, it's\n\n52:37.080 --> 52:38.920\n just an explosion of languages.\n\n52:38.920 --> 52:40.040\n There's the Java story.\n\n52:40.040 --> 52:41.880\n There's the JavaScript.\n\n52:41.880 --> 52:44.960\n There's all the stuff that the cool kids these days\n\n52:44.960 --> 52:48.320\n are doing with Rust and all that.\n\n52:48.320 --> 52:50.120\n So what's to you?\n\n52:50.120 --> 52:53.080\n You wrote a book, C Programming Language.\n\n52:53.080 --> 52:56.920\n And C is probably one of the most important languages\n\n52:56.920 --> 52:58.840\n in the history of programming languages,\n\n52:58.840 --> 53:01.080\n if you kind of look at impact.\n\n53:01.080 --> 53:06.240\n What do you think is the most elegant or powerful part of C?\n\n53:06.240 --> 53:07.560\n Why did it survive?\n\n53:07.560 --> 53:11.280\n Why did it have such a long lasting impact?\n\n53:11.280 --> 53:16.280\n I think it found a sweet spot of expressiveness,\n\n53:16.280 --> 53:19.080\n so that you could rewrite things in a pretty natural way,\n\n53:19.080 --> 53:22.400\n and efficiency, which was particularly important when\n\n53:22.400 --> 53:25.160\n computers were not nearly as powerful as they are today.\n\n53:25.160 --> 53:28.880\n You've got to put yourself back 50 years,\n\n53:28.880 --> 53:31.240\n almost, in terms of what computers could do.\n\n53:31.240 --> 53:35.000\n And that's roughly four or five generations,\n\n53:35.000 --> 53:37.520\n decades of Moore's law, right?\n\n53:37.520 --> 53:42.960\n So expressiveness and efficiency and, I don't know,\n\n53:42.960 --> 53:45.040\n perhaps the environment that it came with as well,\n\n53:45.040 --> 53:46.360\n which was Unix.\n\n53:46.360 --> 53:47.920\n So it meant if you wrote a program,\n\n53:47.920 --> 53:50.520\n it could be used on all those computers that ran Unix.\n\n53:50.520 --> 53:51.960\n And that was all of those computers,\n\n53:51.960 --> 53:53.440\n because they were all written in C.\n\n53:53.440 --> 53:56.560\n And that was Unix, the operating system itself,\n\n53:56.560 --> 53:58.640\n was portable, as were all the tools.\n\n53:58.640 --> 54:00.720\n So it all worked together, again,\n\n54:00.720 --> 54:02.720\n in one of these things where things\n\n54:02.720 --> 54:05.920\n fit on each other in a positive cycle.\n\n54:05.920 --> 54:10.000\n What did it take to write sort of a definitive book,\n\n54:10.000 --> 54:11.960\n probably definitive book on all of program,\n\n54:11.960 --> 54:14.480\n like it's more definitive to a particular language\n\n54:14.480 --> 54:16.640\n than any other book on any other language,\n\n54:16.640 --> 54:19.000\n and did two really powerful things,\n\n54:19.000 --> 54:22.720\n which is popularized the language,\n\n54:22.720 --> 54:24.880\n at least from my perspective, maybe you can correct me.\n\n54:24.880 --> 54:29.880\n And second is created a standard of how, you know,\n\n54:29.880 --> 54:33.640\n how this language is supposed to be used and applied.\n\n54:33.640 --> 54:34.960\n So what did it take?\n\n54:34.960 --> 54:37.400\n Did you have those kinds of ambitions in mind\n\n54:37.400 --> 54:38.240\n when working on that?\n\n54:38.240 --> 54:39.640\n Is this some kind of joke?\n\n54:39.640 --> 54:42.840\n No, of course not.\n\n54:42.840 --> 54:47.840\n So it's an accident of timing, skill, and just luck?\n\n54:48.440 --> 54:50.360\n A lot of it is, clearly.\n\n54:50.360 --> 54:51.520\n Timing was good.\n\n54:51.520 --> 54:54.040\n Now, Dennis and I wrote the book in 1977.\n\n54:54.040 --> 54:54.880\n Dennis Ritchie.\n\n54:54.880 --> 54:56.440\n Yeah, right.\n\n54:56.440 --> 54:58.920\n And at that point, Unix was starting to spread.\n\n54:58.920 --> 55:00.040\n I don't know how many there were,\n\n55:00.040 --> 55:03.320\n but it would be dozens to hundreds of Unix systems.\n\n55:03.320 --> 55:06.680\n And C was also available on other kinds of computers\n\n55:06.680 --> 55:08.320\n that had nothing to do with Unix.\n\n55:08.320 --> 55:11.440\n And so the language had some potential.\n\n55:13.520 --> 55:17.720\n And there were no other books on C,\n\n55:17.720 --> 55:20.360\n and Bell Labs was really the only source for it.\n\n55:20.360 --> 55:22.560\n And Dennis, of course, was authoritative\n\n55:22.560 --> 55:23.920\n because it was his language.\n\n55:23.920 --> 55:26.800\n And he had written the reference manual,\n\n55:26.800 --> 55:28.040\n which is a marvelous example\n\n55:28.040 --> 55:29.480\n of how to write a reference manual.\n\n55:29.480 --> 55:31.480\n Really, really very, very well done.\n\n55:31.480 --> 55:34.240\n So I twisted his arm until he agreed to write a book,\n\n55:34.240 --> 55:35.440\n and then we wrote a book.\n\n55:35.440 --> 55:38.560\n And the virtue or advantage, at least,\n\n55:38.560 --> 55:40.840\n I guess, of going first is that then other people\n\n55:40.840 --> 55:43.280\n have to follow you if they're gonna do anything.\n\n55:44.880 --> 55:49.240\n And I think it worked well because Dennis\n\n55:49.240 --> 55:50.400\n was a superb writer.\n\n55:50.400 --> 55:51.600\n I mean, he really, really did.\n\n55:51.600 --> 55:55.080\n And the reference manual in that book is his, period.\n\n55:55.080 --> 55:58.760\n I had nothing to do with that at all.\n\n55:58.760 --> 56:02.720\n So just crystal clear prose and very, very well expressed.\n\n56:02.720 --> 56:07.720\n And then he and I, I wrote most of the expository material.\n\n56:07.720 --> 56:10.320\n And then he and I sort of did the usual ping ponging\n\n56:10.320 --> 56:13.400\n back and forth, refining it.\n\n56:13.400 --> 56:15.600\n But I spent a lot of time trying to find examples\n\n56:15.600 --> 56:16.840\n that would sort of hang together\n\n56:16.840 --> 56:18.680\n and that would tell people what they might need\n\n56:18.680 --> 56:20.200\n to know at about the right time\n\n56:20.200 --> 56:22.440\n that they should be thinking about needing it.\n\n56:22.440 --> 56:25.520\n And I'm not sure it completely succeeded,\n\n56:25.520 --> 56:28.480\n but it mostly worked out fairly well.\n\n56:28.480 --> 56:30.120\n What do you think is the power of example?\n\n56:30.120 --> 56:35.120\n I mean, you're the creator, at least one of the first people\n\n56:35.960 --> 56:40.400\n to do the Hello World program, which is like the example.\n\n56:40.400 --> 56:43.760\n If aliens discover our civilization hundreds of years\n\n56:43.760 --> 56:46.800\n from now, it'll probably be Hello World programs,\n\n56:46.800 --> 56:49.560\n just like a half broken robot communicating with them\n\n56:49.560 --> 56:50.760\n with the Hello World.\n\n56:50.760 --> 56:53.400\n So what, and that's a representative example.\n\n56:53.400 --> 56:57.040\n So what do you find powerful about examples?\n\n56:57.040 --> 57:01.520\n I think a good example will tell you how to do something\n\n57:01.520 --> 57:03.840\n and it will be representative of,\n\n57:03.840 --> 57:05.680\n you might not want to do exactly that,\n\n57:05.680 --> 57:07.560\n but you will want to do something that's at least\n\n57:07.560 --> 57:09.680\n in that same general vein.\n\n57:10.720 --> 57:14.000\n And so a lot of the examples in the C book were picked\n\n57:14.000 --> 57:16.200\n for these very, very simple, straightforward\n\n57:16.200 --> 57:19.720\n text processing problems that were typical of Unix.\n\n57:19.720 --> 57:23.560\n I want to read input and write it out again.\n\n57:23.560 --> 57:24.560\n There's a copy command.\n\n57:24.560 --> 57:27.040\n I want to read input and do something to it\n\n57:27.040 --> 57:27.960\n and write it out again.\n\n57:27.960 --> 57:28.800\n There's a grab.\n\n57:28.800 --> 57:33.120\n And so that kind of find things that are representative\n\n57:33.120 --> 57:36.600\n of what people want to do and spell those out\n\n57:36.600 --> 57:41.600\n so that they can then take those and see the core parts\n\n57:42.040 --> 57:45.680\n and modify them to their taste.\n\n57:45.680 --> 57:48.760\n And I think that a lot of programming books that,\n\n57:48.760 --> 57:51.120\n I don't look at programming books\n\n57:51.120 --> 57:52.880\n a tremendous amount these days, but when I do,\n\n57:52.880 --> 57:54.440\n a lot of them don't do that.\n\n57:54.440 --> 57:59.000\n They don't give you examples that are both realistic\n\n57:59.000 --> 58:01.840\n and something you might want to do.\n\n58:01.840 --> 58:03.760\n Some of them are pure syntax.\n\n58:03.760 --> 58:05.280\n Here's how you add three numbers.\n\n58:05.280 --> 58:07.280\n Well, come on, I could figure that out.\n\n58:07.280 --> 58:09.160\n Tell me how I would get those three numbers\n\n58:09.160 --> 58:11.880\n into the computer and how we would do something useful\n\n58:11.880 --> 58:14.280\n with them and then how I put them back out again,\n\n58:14.280 --> 58:15.520\n neatly formatted.\n\n58:15.520 --> 58:17.160\n And especially if you follow that example,\n\n58:17.160 --> 58:19.440\n there is something magical of doing something\n\n58:19.440 --> 58:21.000\n that feels useful.\n\n58:21.000 --> 58:21.840\n Yeah, right.\n\n58:21.840 --> 58:23.560\n And I think it's the attempt,\n\n58:23.560 --> 58:26.360\n and it's absolutely not perfect,\n\n58:26.360 --> 58:28.760\n but the attempt in all cases was to get something\n\n58:28.760 --> 58:31.520\n that was going to be either directly useful\n\n58:31.520 --> 58:35.560\n or would be very representative of useful things\n\n58:35.560 --> 58:37.920\n that a programmer might want to do.\n\n58:37.920 --> 58:41.080\n But within that vein of fundamentally text processing,\n\n58:41.080 --> 58:43.640\n reading text, doing something, writing text.\n\n58:43.640 --> 58:47.360\n So you've also written a book on Go language.\n\n58:47.360 --> 58:50.920\n I have to admit, so I worked at Google for a while\n\n58:50.920 --> 58:53.640\n and I've never used Go.\n\n58:53.640 --> 58:54.680\n Well, you missed something.\n\n58:54.680 --> 58:56.320\n Well, I know I missed something for sure.\n\n58:56.320 --> 58:59.520\n I mean, so Go and Rust are two languages\n\n58:59.520 --> 59:04.000\n that I hear very, spoken very highly of\n\n59:04.000 --> 59:06.840\n and I wish I would like to, well, there's a lot of them.\n\n59:06.840 --> 59:10.760\n There's Julia, there's all these incredible modern languages.\n\n59:10.760 --> 59:12.680\n But if you can comment before,\n\n59:12.680 --> 59:16.280\n or maybe comment on what do you find,\n\n59:16.280 --> 59:19.640\n where does Go sit in this broad spectrum of languages?\n\n59:19.640 --> 59:22.320\n And also, how do you yourself feel\n\n59:22.320 --> 59:26.480\n about this wide range of powerful, interesting languages\n\n59:26.480 --> 59:30.520\n that you may never even get to try to explore\n\n59:30.520 --> 59:31.520\n because of time?\n\n59:31.520 --> 59:36.520\n So I think, so Go first comes from that same\n\n59:36.520 --> 59:39.240\n Bell Labs tradition in part, not exclusively,\n\n59:39.240 --> 59:42.480\n but two of the three creators, Ken Thompson and Rob Pike.\n\n59:42.480 --> 59:44.040\n So literally, the people.\n\n59:44.040 --> 59:45.600\n Yeah, the people.\n\n59:45.600 --> 59:49.080\n And then with this very, very useful influence\n\n59:49.080 --> 59:51.880\n from the European school in particular,\n\n59:51.880 --> 59:55.600\n the Claude Speer influence through Robert Griesemer,\n\n59:55.600 --> 1:00:00.600\n who was, I guess, a second generation down student at ETH.\n\n1:00:01.200 --> 1:00:03.240\n And so that's an interesting combination of things.\n\n1:00:03.240 --> 1:00:08.240\n And so some ways, Go captures the good parts of C,\n\n1:00:08.560 --> 1:00:11.400\n it looks sort of like C, it's sometimes characterized as C\n\n1:00:11.400 --> 1:00:12.960\n for the 21st century.\n\n1:00:14.280 --> 1:00:17.580\n On the surface, it looks very, very much like C.\n\n1:00:17.580 --> 1:00:20.040\n But at the same time, it has some interesting\n\n1:00:20.040 --> 1:00:21.880\n data structuring capabilities.\n\n1:00:21.880 --> 1:00:25.240\n And then I think the part that I would say\n\n1:00:25.240 --> 1:00:29.680\n is particularly useful, and again, I'm not a Go expert.\n\n1:00:29.680 --> 1:00:31.840\n In spite of coauthoring the book,\n\n1:00:31.840 --> 1:00:34.840\n about 90% of the work was done by Alan Donovan,\n\n1:00:34.840 --> 1:00:36.920\n my coauthor, who is a Go expert.\n\n1:00:36.920 --> 1:00:40.420\n But Go provides a very nice model of concurrency.\n\n1:00:40.420 --> 1:00:42.740\n It's basically the cooperating,\n\n1:00:42.740 --> 1:00:45.420\n communicating sequential processes that Tony Hoare\n\n1:00:46.460 --> 1:00:49.380\n set forth, jeez, I don't know, 40 plus years ago.\n\n1:00:50.380 --> 1:00:53.980\n And Go routines are, to my mind, a very natural way\n\n1:00:53.980 --> 1:00:57.260\n to talk about parallel computation.\n\n1:00:57.260 --> 1:00:59.740\n And in the few experiments I've done with them,\n\n1:00:59.740 --> 1:01:02.780\n they're easy to write, and typically it's gonna work,\n\n1:01:02.780 --> 1:01:05.180\n and very efficient as well.\n\n1:01:05.180 --> 1:01:07.860\n So I think that's one place where Go stands out,\n\n1:01:07.860 --> 1:01:10.860\n that that model of parallel computation\n\n1:01:10.860 --> 1:01:14.100\n is very, very easy and nice to work with.\n\n1:01:14.100 --> 1:01:17.500\n Just to comment on that, do you think C foresaw,\n\n1:01:17.500 --> 1:01:20.740\n or the early Unix days foresaw threads\n\n1:01:20.740 --> 1:01:23.940\n and massively parallel computation?\n\n1:01:23.940 --> 1:01:25.620\n I would guess not really.\n\n1:01:25.620 --> 1:01:28.300\n I mean, maybe it was seen, but not at the level\n\n1:01:28.300 --> 1:01:31.340\n where it was something you had to do anything about.\n\n1:01:31.340 --> 1:01:35.020\n For a long time, processors got faster,\n\n1:01:35.020 --> 1:01:38.300\n and then processors stopped getting faster\n\n1:01:38.300 --> 1:01:40.820\n because of things like power consumption\n\n1:01:40.820 --> 1:01:43.100\n and heat generation.\n\n1:01:43.100 --> 1:01:46.100\n And so what happened instead was that instead\n\n1:01:46.100 --> 1:01:47.460\n of processors getting faster,\n\n1:01:47.460 --> 1:01:49.500\n there started to be more of them.\n\n1:01:49.500 --> 1:01:52.540\n And that's where that parallel thread stuff comes in.\n\n1:01:53.740 --> 1:01:58.020\n So if you can comment on all the other languages,\n\n1:01:58.020 --> 1:02:01.500\n is it break your heart that you'll never get to explore them?\n\n1:02:01.500 --> 1:02:04.420\n How do you feel about the full variety?\n\n1:02:04.420 --> 1:02:05.700\n It's not break my heart,\n\n1:02:05.700 --> 1:02:10.020\n but I would love to be able to try more of these languages.\n\n1:02:10.020 --> 1:02:11.940\n The closest I've come is in a class\n\n1:02:11.940 --> 1:02:14.060\n that I often teach in the spring here.\n\n1:02:14.060 --> 1:02:18.580\n It's a programming class, and I often give,\n\n1:02:18.580 --> 1:02:21.980\n I have one sort of small example that I will write\n\n1:02:21.980 --> 1:02:24.380\n in as many languages as I possibly can.\n\n1:02:24.380 --> 1:02:26.060\n I've got it in 20 languages.\n\n1:02:26.060 --> 1:02:31.060\n At this point, and that's so I do a minimal experiment\n\n1:02:31.260 --> 1:02:33.060\n with a language just to say, okay,\n\n1:02:33.060 --> 1:02:35.580\n I have this trivial task, which I understand the task,\n\n1:02:35.580 --> 1:02:38.500\n and it takes 15 lines in awk,\n\n1:02:38.500 --> 1:02:41.420\n and not much more in a variety of other languages.\n\n1:02:41.420 --> 1:02:42.260\n So how big is it?\n\n1:02:42.260 --> 1:02:43.380\n How fast does it run?\n\n1:02:43.380 --> 1:02:46.900\n And what pain did I go through to learn how to do it?\n\n1:02:47.980 --> 1:02:52.420\n And that's like anecdotal, right?\n\n1:02:52.420 --> 1:02:55.980\n It's very, very, very, very, very, very, very,\n\n1:02:55.980 --> 1:02:57.900\n very, very narrowly focused.\n\n1:02:57.900 --> 1:02:59.460\n I think data, I like that term.\n\n1:02:59.460 --> 1:03:01.940\n So yeah, but still, it's a little sample,\n\n1:03:01.940 --> 1:03:04.040\n because you get to, I think the hardest step\n\n1:03:04.040 --> 1:03:06.380\n of the programming language is probably the first step,\n\n1:03:06.380 --> 1:03:08.800\n right, so there you're taking the first step.\n\n1:03:08.800 --> 1:03:13.460\n Yeah, and so my experience with some languages\n\n1:03:13.460 --> 1:03:14.900\n is very positive, like Lua,\n\n1:03:14.900 --> 1:03:17.580\n a scripting language I had never used,\n\n1:03:17.580 --> 1:03:19.780\n and I took my little program.\n\n1:03:19.780 --> 1:03:21.700\n The program is a trivial formatter.\n\n1:03:21.700 --> 1:03:24.660\n It just takes in lines of text of varying lengths,\n\n1:03:24.660 --> 1:03:26.500\n and it puts them out in lines\n\n1:03:26.500 --> 1:03:28.940\n that have no more than 60 characters on each line.\n\n1:03:28.940 --> 1:03:31.940\n So think of it as just kind of the flow of process\n\n1:03:31.940 --> 1:03:34.500\n in a browser or something.\n\n1:03:34.500 --> 1:03:36.300\n So it's a very short program.\n\n1:03:36.300 --> 1:03:39.340\n And in Lua, I downloaded Lua,\n\n1:03:39.340 --> 1:03:41.040\n and in an hour, I had it working,\n\n1:03:41.040 --> 1:03:43.180\n never having written Lua in my life,\n\n1:03:43.180 --> 1:03:44.940\n just going with online documentation.\n\n1:03:44.940 --> 1:03:46.180\n I did the same thing in Scala,\n\n1:03:46.180 --> 1:03:50.100\n which you can think of as a flavor of Java, equally trivial.\n\n1:03:51.020 --> 1:03:52.140\n I did it in Haskell.\n\n1:03:52.140 --> 1:03:53.620\n It took me several weeks.\n\n1:03:53.620 --> 1:03:57.780\n But it did run like a turtle.\n\n1:03:57.780 --> 1:04:02.780\n And I did it in Fortran 90, and it was painful,\n\n1:04:05.220 --> 1:04:07.980\n but it worked, and I tried it in Rust,\n\n1:04:07.980 --> 1:04:10.200\n and it took me several days to get it working\n\n1:04:10.200 --> 1:04:12.140\n because the model of memory management\n\n1:04:12.140 --> 1:04:13.820\n was just a little unfamiliar to me.\n\n1:04:13.820 --> 1:04:15.900\n And the problem I had with Rust,\n\n1:04:15.900 --> 1:04:18.300\n and it's back to what we were just talking about,\n\n1:04:18.300 --> 1:04:21.500\n I couldn't find good, consistent documentation on Rust.\n\n1:04:21.500 --> 1:04:22.720\n Now, this was several years ago,\n\n1:04:22.720 --> 1:04:24.180\n and I'm sure things have stabilized,\n\n1:04:24.180 --> 1:04:26.500\n but at the time, everything in the Rust world\n\n1:04:26.500 --> 1:04:27.900\n seemed to be changing rapidly,\n\n1:04:27.900 --> 1:04:30.500\n and so you would find what looked like a working example,\n\n1:04:30.500 --> 1:04:32.220\n and it wouldn't work with the version\n\n1:04:32.220 --> 1:04:33.700\n of the language that I had.\n\n1:04:34.820 --> 1:04:36.700\n So it took longer than it should have.\n\n1:04:37.540 --> 1:04:39.620\n Rust is a language I would like to get back to,\n\n1:04:39.620 --> 1:04:41.200\n but probably won't.\n\n1:04:41.200 --> 1:04:42.060\n I think one of the issues,\n\n1:04:42.060 --> 1:04:44.060\n you have to have something you want to do.\n\n1:04:44.060 --> 1:04:47.540\n If you don't have something that is the right combination,\n\n1:04:47.540 --> 1:04:51.980\n if I want to do it, and yet I have enough disposable time,\n\n1:04:51.980 --> 1:04:55.220\n whatever, to make it worth learning a new language\n\n1:04:55.220 --> 1:04:58.120\n at the same time, it's never gonna happen.\n\n1:04:58.120 --> 1:05:02.100\n So what do you think about another language of JavaScript?\n\n1:05:02.100 --> 1:05:03.500\n That's this...\n\n1:05:04.940 --> 1:05:06.860\n Well, let me just sort of comment on what I said.\n\n1:05:06.860 --> 1:05:09.780\n When I was brought up, sort of JavaScript was seen as\n\n1:05:12.240 --> 1:05:15.580\n probably like the ugliest language possible,\n\n1:05:15.580 --> 1:05:18.980\n and yet it's quite arguably, quite possibly taking over,\n\n1:05:18.980 --> 1:05:21.640\n not just the front end and the back end of the internet,\n\n1:05:21.640 --> 1:05:24.020\n but possibly in the future taking over everything,\n\n1:05:24.020 --> 1:05:26.980\n because they've now learned to make it very efficient.\n\n1:05:27.900 --> 1:05:29.700\n And so what do you think about this?\n\n1:05:29.700 --> 1:05:32.140\n Yeah, well, I think you've captured it in a lot of ways.\n\n1:05:32.140 --> 1:05:32.980\n When it first came out,\n\n1:05:32.980 --> 1:05:35.460\n JavaScript was deemed to be fairly irregular\n\n1:05:35.460 --> 1:05:37.780\n and an ugly language, and certainly in the academy,\n\n1:05:37.780 --> 1:05:39.260\n if you said you were working on JavaScript,\n\n1:05:39.260 --> 1:05:40.460\n people would ridicule you.\n\n1:05:40.460 --> 1:05:43.780\n It was just not fit for academics to work on.\n\n1:05:43.780 --> 1:05:45.460\n I think a lot of that has evolved.\n\n1:05:45.460 --> 1:05:47.540\n The language itself has evolved,\n\n1:05:47.540 --> 1:05:50.660\n and certainly the technology of compiling it\n\n1:05:50.660 --> 1:05:53.660\n is fantastically better than it was.\n\n1:05:53.660 --> 1:05:54.780\n And so in that sense,\n\n1:05:54.780 --> 1:05:58.820\n it's absolutely a viable solution on back ends,\n\n1:05:58.820 --> 1:06:00.220\n as well as the front ends.\n\n1:06:01.140 --> 1:06:03.480\n Used well, I think it's a pretty good language.\n\n1:06:03.480 --> 1:06:06.340\n I've written a modest amount of it,\n\n1:06:06.340 --> 1:06:09.140\n and I've played with JavaScript translators\n\n1:06:09.140 --> 1:06:10.300\n and things like that.\n\n1:06:10.300 --> 1:06:12.020\n I'm not a real expert,\n\n1:06:12.020 --> 1:06:13.660\n and it's hard to keep up even there\n\n1:06:13.660 --> 1:06:15.860\n with the new things that come along with it.\n\n1:06:15.860 --> 1:06:19.220\n So I don't know whether it will ever take over the world.\n\n1:06:19.220 --> 1:06:24.220\n I think not, but it's certainly an important language,\n\n1:06:24.540 --> 1:06:27.100\n and worth knowing more about.\n\n1:06:27.100 --> 1:06:30.260\n There's, maybe to get your comment on something,\n\n1:06:30.260 --> 1:06:33.220\n which JavaScript, and actually most languages,\n\n1:06:33.220 --> 1:06:37.420\n sort of Python, such a big part of the experience\n\n1:06:37.420 --> 1:06:40.660\n of programming with those languages includes libraries,\n\n1:06:40.660 --> 1:06:42.500\n sort of using, building on top of the code\n\n1:06:42.500 --> 1:06:43.780\n that other people have built.\n\n1:06:43.780 --> 1:06:45.980\n I think that's probably different from the experience\n\n1:06:45.980 --> 1:06:49.700\n that we just talked about from Unix and C days,\n\n1:06:49.700 --> 1:06:51.020\n when you're building stuff from scratch.\n\n1:06:51.020 --> 1:06:53.020\n What do you think about this world\n\n1:06:53.020 --> 1:06:55.460\n of essentially leveraging, building up libraries\n\n1:06:55.460 --> 1:06:57.180\n on top of each other and leveraging them?\n\n1:06:57.180 --> 1:07:00.740\n Yeah, no, that's a very perceptive kind of question.\n\n1:07:01.780 --> 1:07:04.060\n One of the reasons programming was fun in the old days\n\n1:07:04.060 --> 1:07:06.860\n was that you were really building it all yourself.\n\n1:07:06.860 --> 1:07:08.780\n The number of libraries you had to deal with\n\n1:07:08.780 --> 1:07:09.620\n was quite small.\n\n1:07:09.620 --> 1:07:11.980\n Maybe it was printf, or the standard library,\n\n1:07:11.980 --> 1:07:15.780\n or something like that, and that is not the case today.\n\n1:07:15.780 --> 1:07:18.060\n And if you want to do something in,\n\n1:07:18.060 --> 1:07:20.460\n you mentioned Python and JavaScript,\n\n1:07:20.460 --> 1:07:22.220\n and those are the two fine examples,\n\n1:07:22.220 --> 1:07:25.740\n you have to typically download a boatload of other stuff,\n\n1:07:25.740 --> 1:07:27.660\n and you have no idea what you're getting,\n\n1:07:27.660 --> 1:07:29.220\n absolutely nothing.\n\n1:07:29.220 --> 1:07:31.540\n I've been doing some playing with machine learning\n\n1:07:31.540 --> 1:07:33.540\n over the last couple of days,\n\n1:07:33.540 --> 1:07:36.420\n and geez, something doesn't work.\n\n1:07:36.420 --> 1:07:38.900\n Well, you pip install this, okay,\n\n1:07:38.900 --> 1:07:40.460\n and down comes another one,\n\n1:07:40.460 --> 1:07:44.340\n okay, and down comes another gazillion megabytes of something\n\n1:07:44.340 --> 1:07:46.300\n and you have no idea what it was.\n\n1:07:46.300 --> 1:07:47.940\n And if you're lucky, it works.\n\n1:07:47.940 --> 1:07:51.180\n And if it doesn't work, you have no recourse.\n\n1:07:51.180 --> 1:07:52.740\n There's absolutely no way you could figure out\n\n1:07:52.740 --> 1:07:55.180\n which of these thousand different packages.\n\n1:07:55.180 --> 1:07:59.540\n And I think it's worse in the NPM environment\n\n1:07:59.540 --> 1:08:00.380\n for JavaScript.\n\n1:08:00.380 --> 1:08:02.980\n I think there's less discipline, less control there.\n\n1:08:02.980 --> 1:08:06.100\n And there's aspects of not just not understanding\n\n1:08:06.100 --> 1:08:07.900\n how it works, but there's security issues,\n\n1:08:07.900 --> 1:08:09.020\n there's robustness issues,\n\n1:08:09.020 --> 1:08:11.740\n so you don't wanna run a nuclear power plant\n\n1:08:11.740 --> 1:08:14.060\n using JavaScript, essentially.\n\n1:08:14.060 --> 1:08:14.900\n Probably not.\n\n1:08:16.100 --> 1:08:18.820\n So speaking to the variety of languages,\n\n1:08:18.820 --> 1:08:20.420\n do you think that variety is good,\n\n1:08:20.420 --> 1:08:23.540\n or do you hope, think that over time,\n\n1:08:23.540 --> 1:08:25.740\n we should converge towards one, two, three\n\n1:08:25.740 --> 1:08:27.060\n programming languages?\n\n1:08:28.140 --> 1:08:29.700\n You mentioned to the Bell Lab days\n\n1:08:29.700 --> 1:08:32.860\n when people could sort of, the community of it,\n\n1:08:32.860 --> 1:08:34.500\n and the more languages you have,\n\n1:08:34.500 --> 1:08:36.780\n the more you separate the communities.\n\n1:08:36.780 --> 1:08:38.140\n There's the Ruby community,\n\n1:08:38.140 --> 1:08:40.260\n there's the Python community,\n\n1:08:40.260 --> 1:08:42.660\n there's C++ community.\n\n1:08:42.660 --> 1:08:45.420\n Do you hope that they'll unite one day\n\n1:08:45.420 --> 1:08:47.700\n to just one or two languages?\n\n1:08:47.700 --> 1:08:48.820\n I certainly don't hope it.\n\n1:08:48.820 --> 1:08:49.940\n I'm not sure that that's right,\n\n1:08:49.940 --> 1:08:51.940\n because I honestly don't think there is one language\n\n1:08:51.940 --> 1:08:55.340\n that will suffice for all the programming needs of the world.\n\n1:08:55.340 --> 1:08:56.860\n Are there too many at this point?\n\n1:08:56.860 --> 1:08:58.540\n Well, arguably.\n\n1:08:58.540 --> 1:09:01.860\n But I think if you look at the sort of the distribution\n\n1:09:01.860 --> 1:09:03.140\n of how they are used,\n\n1:09:03.140 --> 1:09:06.740\n there's something called a dozen languages\n\n1:09:06.740 --> 1:09:10.500\n that probably account for 95% of all programming\n\n1:09:10.500 --> 1:09:13.580\n at this point, and that doesn't seem unreasonable.\n\n1:09:13.580 --> 1:09:17.220\n And then there's another, well, 2,000 languages\n\n1:09:17.220 --> 1:09:19.940\n that are still in use that nobody uses,\n\n1:09:19.940 --> 1:09:23.300\n and, or at least don't use in any quantity.\n\n1:09:23.300 --> 1:09:25.940\n But I think new languages are a good idea in many respects,\n\n1:09:25.940 --> 1:09:30.260\n because they're often a chance to explore an idea\n\n1:09:30.260 --> 1:09:32.940\n of how language might help.\n\n1:09:32.940 --> 1:09:35.220\n I think that's one of the positive things\n\n1:09:35.220 --> 1:09:36.940\n about functional languages, for example.\n\n1:09:36.940 --> 1:09:38.660\n They're a particularly good place\n\n1:09:38.660 --> 1:09:42.500\n where people have explored ideas\n\n1:09:42.500 --> 1:09:45.700\n that at the time didn't seem feasible,\n\n1:09:45.700 --> 1:09:47.500\n but ultimately have wound up\n\n1:09:47.500 --> 1:09:50.140\n as part of mainstream languages as well.\n\n1:09:50.140 --> 1:09:52.700\n I mean, just go back as early as Recursion Lisp\n\n1:09:52.700 --> 1:09:57.100\n and then follow forward functions as first class citizens\n\n1:09:57.100 --> 1:09:59.300\n and pattern based languages,\n\n1:09:59.300 --> 1:10:02.260\n and gee, I don't know, closures,\n\n1:10:02.260 --> 1:10:04.220\n and just on and on and on.\n\n1:10:04.220 --> 1:10:07.020\n Lambda's interesting ideas that showed up first\n\n1:10:07.020 --> 1:10:08.860\n in, let's call it broadly,\n\n1:10:08.860 --> 1:10:10.700\n the functional programming community,\n\n1:10:10.700 --> 1:10:13.340\n and then find their way into mainstream languages.\n\n1:10:13.340 --> 1:10:15.620\n Yeah, it's a playground for rebels.\n\n1:10:15.620 --> 1:10:19.620\n Yeah, exactly, and so I think the languages\n\n1:10:19.620 --> 1:10:22.680\n in the playground themselves are probably not going\n\n1:10:22.680 --> 1:10:25.900\n to be the mainstream, at least for some while,\n\n1:10:25.900 --> 1:10:28.540\n but the ideas that come from there are invaluable.\n\n1:10:29.940 --> 1:10:33.860\n So let's go to something that, when I found out recently,\n\n1:10:33.860 --> 1:10:36.220\n so I've known that you've done a million things,\n\n1:10:36.220 --> 1:10:37.740\n but one of the things I wasn't aware of,\n\n1:10:37.740 --> 1:10:39.700\n that you had a role in Ample,\n\n1:10:39.700 --> 1:10:43.580\n and before you interrupt me by minimizing your role in it.\n\n1:10:44.940 --> 1:10:46.500\n Ample is for minimizing functions.\n\n1:10:46.500 --> 1:10:48.660\n Yeah, minimizing functions, right, exactly.\n\n1:10:51.020 --> 1:10:53.580\n Can I just say that the elegance and abstraction power\n\n1:10:53.580 --> 1:10:57.380\n of Ample is incredible,\n\n1:10:57.380 --> 1:11:01.360\n when I first came to it about 10 years ago or so.\n\n1:11:01.360 --> 1:11:04.260\n Can you describe what is the Ample language?\n\n1:11:04.260 --> 1:11:08.180\n Sure, so Ample is a language for mathematical programming,\n\n1:11:08.180 --> 1:11:10.760\n technical term, think of it as linear programming,\n\n1:11:10.760 --> 1:11:14.740\n that is setting up systems of linear equations\n\n1:11:14.740 --> 1:11:18.820\n that are of some sort of system of constraints,\n\n1:11:18.820 --> 1:11:20.580\n so that you have a bunch of things\n\n1:11:20.580 --> 1:11:22.580\n that have to be less than this, greater than that,\n\n1:11:22.580 --> 1:11:25.640\n whatever, and you're trying to find a set of values\n\n1:11:25.640 --> 1:11:29.580\n for some decision variables that will maximize\n\n1:11:29.580 --> 1:11:32.220\n or minimize some objective function,\n\n1:11:32.220 --> 1:11:35.900\n so it's a way of solving a particular kind\n\n1:11:35.900 --> 1:11:38.000\n of optimization problem,\n\n1:11:38.000 --> 1:11:40.020\n a very formal sort of optimization problem,\n\n1:11:40.020 --> 1:11:42.540\n but one that's exceptionally useful.\n\n1:11:42.540 --> 1:11:45.820\n And it specifies, so there's objective function constraints\n\n1:11:45.820 --> 1:11:48.180\n and variables that become separate\n\n1:11:48.180 --> 1:11:50.060\n from the data it operates on.\n\n1:11:50.060 --> 1:11:50.900\n Right.\n\n1:11:50.900 --> 1:11:54.800\n So that kind of separation allows you to,\n\n1:11:56.860 --> 1:11:58.020\n put on different hats,\n\n1:11:58.020 --> 1:12:00.380\n one put the hat of an optimization person\n\n1:12:00.380 --> 1:12:03.260\n and then put another hat of a data person\n\n1:12:03.260 --> 1:12:04.940\n and dance back and forth,\n\n1:12:04.940 --> 1:12:08.820\n and also separate the actual solvers,\n\n1:12:08.820 --> 1:12:11.980\n the optimization systems that do the solving.\n\n1:12:11.980 --> 1:12:14.220\n Then you can have other people come to the table\n\n1:12:14.220 --> 1:12:15.500\n and then build their solvers,\n\n1:12:15.500 --> 1:12:17.420\n whether it's linear or nonlinear,\n\n1:12:19.480 --> 1:12:21.800\n convex, nonconvex, that kind of stuff.\n\n1:12:21.800 --> 1:12:25.740\n So what is the,\n\n1:12:25.740 --> 1:12:28.780\n to you as, maybe you can comment\n\n1:12:28.780 --> 1:12:30.180\n how you got into that world\n\n1:12:30.180 --> 1:12:33.800\n and what is the beautiful or interesting idea to you\n\n1:12:33.800 --> 1:12:35.420\n from the world of optimization?\n\n1:12:35.420 --> 1:12:36.260\n Sure.\n\n1:12:36.260 --> 1:12:39.820\n So I preface it by saying I'm absolutely not an expert\n\n1:12:39.820 --> 1:12:42.980\n on this and most of the important work in AMPL\n\n1:12:42.980 --> 1:12:45.360\n comes from my two partners in crime on that,\n\n1:12:45.360 --> 1:12:47.820\n Bob Forer, who was a professor\n\n1:12:48.740 --> 1:12:50.020\n in the Industrial Engineering\n\n1:12:50.020 --> 1:12:52.500\n and Management Science Department at Northwestern,\n\n1:12:52.500 --> 1:12:54.820\n and my colleague at Bell Labs, Dave Gay,\n\n1:12:54.820 --> 1:12:59.020\n who was a numerical analyst and optimization person.\n\n1:12:59.020 --> 1:13:01.060\n So the deal is linear programming.\n\n1:13:02.420 --> 1:13:03.860\n Preface this by saying I don't.\n\n1:13:03.860 --> 1:13:05.180\n Let's stay with linear programming.\n\n1:13:05.180 --> 1:13:07.620\n Yeah, linear programming is the simplest example of this.\n\n1:13:07.620 --> 1:13:09.740\n So linear programming, as it's taught in school,\n\n1:13:09.740 --> 1:13:11.220\n is that you have a big matrix,\n\n1:13:11.220 --> 1:13:12.260\n which is always called A,\n\n1:13:12.260 --> 1:13:14.940\n and you say AX is less than or equal to B.\n\n1:13:14.940 --> 1:13:16.380\n So B is a set of constraints,\n\n1:13:16.380 --> 1:13:18.580\n X is the decision variables,\n\n1:13:18.580 --> 1:13:22.980\n and A is how the decision variables are combined\n\n1:13:22.980 --> 1:13:24.500\n to set up the various constraints.\n\n1:13:24.500 --> 1:13:28.180\n So A is a matrix and X and B are vectors.\n\n1:13:28.180 --> 1:13:30.020\n And then there's an objective function,\n\n1:13:30.020 --> 1:13:32.000\n which is just a sum of a bunch of Xs\n\n1:13:32.000 --> 1:13:33.620\n and some coefficients on them,\n\n1:13:33.620 --> 1:13:35.740\n and that's the thing you want to optimize.\n\n1:13:37.160 --> 1:13:40.020\n The problem is that in the real world,\n\n1:13:40.020 --> 1:13:43.460\n that matrix A is a very, very, very intricate,\n\n1:13:43.460 --> 1:13:45.560\n very large and very sparse matrix\n\n1:13:45.560 --> 1:13:47.860\n where the various components of the model\n\n1:13:47.860 --> 1:13:50.600\n are distributed among the coefficients\n\n1:13:50.600 --> 1:13:54.880\n in a way that is totally unobvious to anybody.\n\n1:13:54.880 --> 1:13:57.580\n And so what you need is some way\n\n1:13:57.580 --> 1:13:59.860\n to express the original model,\n\n1:13:59.860 --> 1:14:01.100\n which you and I would write,\n\n1:14:01.100 --> 1:14:03.300\n you know, we'd write mathematics on the board,\n\n1:14:03.300 --> 1:14:04.580\n and the sum of this is greater\n\n1:14:04.580 --> 1:14:06.460\n than the sum of that kind of thing.\n\n1:14:06.460 --> 1:14:10.300\n So you need a language to write those kinds of constraints.\n\n1:14:10.300 --> 1:14:12.340\n And Bob Forer, for a long time,\n\n1:14:12.340 --> 1:14:14.420\n had been interested in modeling languages,\n\n1:14:14.420 --> 1:14:16.540\n languages that made it possible to do this.\n\n1:14:16.540 --> 1:14:19.060\n There was a modeling language around called GAMS,\n\n1:14:19.060 --> 1:14:21.300\n the General Algebraic Modeling System,\n\n1:14:21.300 --> 1:14:22.940\n but it looked very much like Fortran.\n\n1:14:22.940 --> 1:14:24.700\n It was kind of clunky.\n\n1:14:24.700 --> 1:14:29.220\n And so Bob spent a sabbatical year at Bell Labs in 1984,\n\n1:14:29.220 --> 1:14:32.820\n and he and, there's only the office across from me,\n\n1:14:32.820 --> 1:14:35.420\n and it's always geography,\n\n1:14:35.420 --> 1:14:38.080\n and he and Dave Gay and I started talking\n\n1:14:38.080 --> 1:14:39.700\n about this kind of thing,\n\n1:14:39.700 --> 1:14:43.780\n and he wanted to design a language that would make it\n\n1:14:43.780 --> 1:14:46.520\n so that you could take these algebraic specifications,\n\n1:14:46.520 --> 1:14:48.820\n you know, summation signs over sets,\n\n1:14:48.820 --> 1:14:51.100\n and that you would write on the board\n\n1:14:51.100 --> 1:14:55.820\n and convert them into basically this A matrix,\n\n1:14:55.820 --> 1:14:58.900\n and then pass that off to a solver,\n\n1:14:58.900 --> 1:15:01.620\n which is an entirely separate thing.\n\n1:15:01.620 --> 1:15:05.140\n And so we talked about the design of the language.\n\n1:15:05.140 --> 1:15:07.200\n I don't remember any of the details of this now,\n\n1:15:07.200 --> 1:15:08.940\n but it's kind of an obvious thing.\n\n1:15:08.940 --> 1:15:11.220\n You're just writing out mathematical expressions\n\n1:15:11.220 --> 1:15:13.140\n in a Fortran like, sorry,\n\n1:15:13.140 --> 1:15:15.820\n an algebraic but textual like language.\n\n1:15:15.820 --> 1:15:20.820\n And I wrote the first version of this Ample program,\n\n1:15:22.580 --> 1:15:26.180\n my first C++ program, and.\n\n1:15:26.180 --> 1:15:27.420\n It's written in C++?\n\n1:15:27.420 --> 1:15:28.620\n Yeah.\n\n1:15:28.620 --> 1:15:30.980\n And so I did that fairly quickly.\n\n1:15:30.980 --> 1:15:33.500\n We wrote, it was, you know, 3,000 lines or something,\n\n1:15:33.500 --> 1:15:34.340\n so it wasn't very big,\n\n1:15:34.340 --> 1:15:36.520\n but it sort of showed the feasibility of it\n\n1:15:36.520 --> 1:15:38.380\n that you could actually do something that was easy\n\n1:15:38.380 --> 1:15:41.740\n for people to specify models\n\n1:15:41.740 --> 1:15:44.700\n and convert it into something that a solver could work with.\n\n1:15:44.700 --> 1:15:45.860\n At the same time, as you say,\n\n1:15:45.860 --> 1:15:47.900\n the model and the data are separate things.\n\n1:15:47.900 --> 1:15:50.580\n So one model would then work with all kinds\n\n1:15:50.580 --> 1:15:51.780\n of different data in the same way\n\n1:15:51.780 --> 1:15:53.500\n that lots of programs do the same thing,\n\n1:15:53.500 --> 1:15:54.420\n but with different data.\n\n1:15:54.420 --> 1:15:55.660\n So one of the really nice things\n\n1:15:55.660 --> 1:15:58.460\n is the specification of the models,\n\n1:15:58.460 --> 1:16:01.980\n human, just kind of like, as you say, is human readable.\n\n1:16:01.980 --> 1:16:04.900\n Like I literally, I remember on stuff I worked,\n\n1:16:04.900 --> 1:16:07.620\n I would send it to colleagues\n\n1:16:07.620 --> 1:16:10.780\n that I'm pretty sure never programmed in their life,\n\n1:16:10.780 --> 1:16:15.780\n just to understand what the optimization problem is.\n\n1:16:15.780 --> 1:16:18.060\n I think, how hard is it to convert that?\n\n1:16:18.060 --> 1:16:20.300\n You said there's a first prototype in C++\n\n1:16:20.300 --> 1:16:22.060\n to convert that into something\n\n1:16:22.060 --> 1:16:24.300\n that could actually be used by the solver.\n\n1:16:24.300 --> 1:16:25.140\n It's not too bad,\n\n1:16:25.140 --> 1:16:27.460\n because most of the solvers have some mechanism\n\n1:16:27.460 --> 1:16:30.460\n that lets them import a model in a form.\n\n1:16:30.460 --> 1:16:32.980\n It might be as simple as the matrix itself\n\n1:16:32.980 --> 1:16:35.040\n in just some representation,\n\n1:16:35.040 --> 1:16:38.420\n or if you're doing things that are not linear programming,\n\n1:16:38.420 --> 1:16:39.820\n then there may be some mechanism\n\n1:16:39.820 --> 1:16:43.420\n that lets you provide things like functions to be called,\n\n1:16:43.420 --> 1:16:47.140\n or other constraints on the model.\n\n1:16:47.140 --> 1:16:51.500\n So all AMPL does is to generate that kind of thing,\n\n1:16:51.500 --> 1:16:54.220\n and then solver deals with all the hard work,\n\n1:16:54.220 --> 1:16:57.380\n and then when the solver comes back with numbers,\n\n1:16:57.380 --> 1:17:00.220\n AMPL converts those back into your original form,\n\n1:17:00.220 --> 1:17:03.140\n so you know how much of each thing you should be buying,\n\n1:17:03.140 --> 1:17:05.120\n or making, or shipping, or whatever.\n\n1:17:05.120 --> 1:17:10.120\n So we did that in 84, and I haven't had a lot to do\n\n1:17:11.160 --> 1:17:13.560\n with it since, except that we wrote a couple of versions\n\n1:17:13.560 --> 1:17:14.400\n of a book on it.\n\n1:17:14.400 --> 1:17:16.520\n Which is one of the greatest books ever written.\n\n1:17:16.520 --> 1:17:17.660\n I love that book.\n\n1:17:18.600 --> 1:17:19.960\n I don't know why.\n\n1:17:19.960 --> 1:17:20.980\n It's an excellent book.\n\n1:17:20.980 --> 1:17:22.520\n Bob Farrer wrote most of it,\n\n1:17:22.520 --> 1:17:23.980\n and so it's really, really well done.\n\n1:17:23.980 --> 1:17:25.640\n He must have been a dynamite teacher.\n\n1:17:25.640 --> 1:17:27.520\n And typeset in LaTeX.\n\n1:17:27.520 --> 1:17:29.040\n No, no, no, are you kidding?\n\n1:17:29.040 --> 1:17:32.920\n I remember liking the typography, so I don't know.\n\n1:17:32.920 --> 1:17:34.480\n We did it with DROF.\n\n1:17:34.480 --> 1:17:35.440\n I don't even know what that is.\n\n1:17:35.440 --> 1:17:36.280\n Yeah, exactly.\n\n1:17:36.280 --> 1:17:37.120\n You're too young.\n\n1:17:37.120 --> 1:17:38.360\n Uh oh, oh boy.\n\n1:17:38.360 --> 1:17:42.160\n I think of DROF as a predecessor\n\n1:17:42.160 --> 1:17:44.240\n to the tech family of things.\n\n1:17:44.240 --> 1:17:46.160\n It's a formatter that was done at Bell Labs\n\n1:17:46.160 --> 1:17:48.840\n in this same period of the very early 70s\n\n1:17:49.720 --> 1:17:52.440\n that predates tech and things like that\n\n1:17:52.440 --> 1:17:54.920\n by five to 10 years.\n\n1:17:54.920 --> 1:17:58.200\n But it was nevertheless, I'm going by memories.\n\n1:17:58.200 --> 1:18:00.080\n I remember it being beautiful.\n\n1:18:00.080 --> 1:18:01.800\n Yeah, it was nicely done.\n\n1:18:01.800 --> 1:18:03.840\n Outside of Unix, C, A, Golang,\n\n1:18:03.840 --> 1:18:05.760\n all the things we talked about.\n\n1:18:05.760 --> 1:18:07.920\n All the amazing work you've done.\n\n1:18:07.920 --> 1:18:09.880\n You've also done work in graph theory.\n\n1:18:12.500 --> 1:18:16.480\n Let me ask this crazy out there question.\n\n1:18:16.480 --> 1:18:17.640\n If you had to make a bet,\n\n1:18:17.640 --> 1:18:19.200\n and I had to force you to make a bet,\n\n1:18:19.200 --> 1:18:20.880\n do you think P equals NP?\n\n1:18:23.520 --> 1:18:24.360\n The answer is no,\n\n1:18:24.360 --> 1:18:27.160\n although I'm told that somebody asked Jeff Dean\n\n1:18:27.160 --> 1:18:30.080\n if that was, under what conditions P would equal NP,\n\n1:18:30.080 --> 1:18:33.840\n and he said either P is zero or N is one.\n\n1:18:33.840 --> 1:18:35.640\n Or vice versa, I've forgotten.\n\n1:18:35.640 --> 1:18:38.040\n This is why Jeff Dean is a lot smarter than I am.\n\n1:18:38.040 --> 1:18:38.880\n Yeah.\n\n1:18:40.040 --> 1:18:42.440\n So, but your intuition is, uh.\n\n1:18:42.440 --> 1:18:44.880\n I have no, I have no intuition,\n\n1:18:44.880 --> 1:18:46.840\n but I've got a lot of colleagues who've got intuition\n\n1:18:46.840 --> 1:18:48.160\n and their betting is no.\n\n1:18:48.160 --> 1:18:51.200\n That's the popular, that's the popular bet.\n\n1:18:51.200 --> 1:18:55.640\n Okay, so what is computational complexity theory?\n\n1:18:55.640 --> 1:18:58.280\n And do you think these kinds of complexity classes,\n\n1:18:58.280 --> 1:19:01.560\n especially as you've taught in this modern world,\n\n1:19:01.560 --> 1:19:04.240\n are still a useful way to understand\n\n1:19:04.240 --> 1:19:06.080\n the hardness of problems?\n\n1:19:06.080 --> 1:19:07.400\n I don't do that stuff.\n\n1:19:07.400 --> 1:19:09.360\n The last time I touched anything to do with that\n\n1:19:09.360 --> 1:19:10.320\n was before. Many, many years ago.\n\n1:19:10.320 --> 1:19:12.400\n Was before it was invented.\n\n1:19:12.400 --> 1:19:14.680\n Because I, it's literally true.\n\n1:19:14.680 --> 1:19:17.720\n I did my PhD thesis on graph.\n\n1:19:17.720 --> 1:19:18.920\n Before Big O notation.\n\n1:19:18.920 --> 1:19:19.760\n Oh, absolutely.\n\n1:19:19.760 --> 1:19:24.060\n Before, I did this in 1968,\n\n1:19:24.060 --> 1:19:25.940\n and I worked on graph partitioning,\n\n1:19:25.940 --> 1:19:26.780\n which is this question.\n\n1:19:26.780 --> 1:19:30.280\n You've got a graph that is a nodes and edges kind of graph,\n\n1:19:30.280 --> 1:19:31.640\n and the edges have weights,\n\n1:19:31.640 --> 1:19:34.400\n and you just want to divide the nodes into two piles\n\n1:19:34.400 --> 1:19:36.780\n of equal size so that the number of edges\n\n1:19:36.780 --> 1:19:38.040\n that goes from one side to the other\n\n1:19:38.040 --> 1:19:39.360\n is as small as possible.\n\n1:19:40.320 --> 1:19:41.560\n And we.\n\n1:19:41.560 --> 1:19:45.880\n You developed, so that problem is hard.\n\n1:19:45.880 --> 1:19:47.240\n Well, as it turns out,\n\n1:19:47.240 --> 1:19:49.880\n I worked with Shen Lin at Bell Labs on this,\n\n1:19:49.880 --> 1:19:52.640\n and we were never able to come up with anything\n\n1:19:52.640 --> 1:19:54.200\n that was guaranteed to give the right answer.\n\n1:19:54.200 --> 1:19:57.920\n We came up with heuristics that worked pretty darn well,\n\n1:19:57.920 --> 1:20:01.060\n and I peeled off some special cases for my thesis,\n\n1:20:01.060 --> 1:20:02.240\n but it was just hard.\n\n1:20:02.240 --> 1:20:04.680\n And that was just about the time that Steve Cook\n\n1:20:04.680 --> 1:20:06.500\n was showing that there were classes of problems\n\n1:20:06.500 --> 1:20:08.120\n that appeared to be really hard,\n\n1:20:08.120 --> 1:20:10.720\n of which graph partitioning was one.\n\n1:20:10.720 --> 1:20:13.760\n But this, my expertise, such as it was,\n\n1:20:13.760 --> 1:20:16.500\n totally predates that development.\n\n1:20:16.500 --> 1:20:17.340\n Oh, interesting.\n\n1:20:17.340 --> 1:20:18.720\n So the heuristic, which now,\n\n1:20:20.060 --> 1:20:21.960\n carries the two of yours names\n\n1:20:21.960 --> 1:20:23.720\n for the traveling salesman problem,\n\n1:20:23.720 --> 1:20:25.280\n and then for the graph partitioning.\n\n1:20:25.280 --> 1:20:27.460\n That was, like, how did you,\n\n1:20:27.460 --> 1:20:29.320\n you weren't even thinking in terms of classes.\n\n1:20:29.320 --> 1:20:30.160\n You were just trying to find.\n\n1:20:30.160 --> 1:20:31.120\n There was no such idea.\n\n1:20:31.120 --> 1:20:34.440\n A heuristic that kinda does the job pretty well.\n\n1:20:34.440 --> 1:20:36.820\n You were trying to find something that did the job,\n\n1:20:36.820 --> 1:20:38.680\n and there was nothing that you would call,\n\n1:20:38.680 --> 1:20:41.760\n let's say, a closed form or algorithmic thing\n\n1:20:41.760 --> 1:20:44.320\n that would give you a guaranteed right answer.\n\n1:20:44.320 --> 1:20:48.320\n I mean, compare graph partitioning to max flow min cut,\n\n1:20:48.320 --> 1:20:50.180\n or something like that.\n\n1:20:50.180 --> 1:20:51.400\n That's the same problem,\n\n1:20:51.400 --> 1:20:53.920\n except there's no constraint on the number of nodes\n\n1:20:53.920 --> 1:20:56.280\n on one side or the other of the cut.\n\n1:20:56.280 --> 1:20:58.720\n And that means it's an easy problem,\n\n1:20:58.720 --> 1:21:00.000\n at least as I understand it.\n\n1:21:00.000 --> 1:21:01.480\n Whereas the constraint that says\n\n1:21:01.480 --> 1:21:03.480\n the two have to be constrained in size\n\n1:21:03.480 --> 1:21:05.520\n makes it a hard problem.\n\n1:21:05.520 --> 1:21:07.600\n Yeah, so Robert Frost says that poem\n\n1:21:07.600 --> 1:21:09.280\n where you had to choose two paths.\n\n1:21:09.280 --> 1:21:10.560\n So why did you,\n\n1:21:12.200 --> 1:21:13.600\n is there another alternate universe\n\n1:21:13.600 --> 1:21:16.600\n in which you pursued the Don Knuth path\n\n1:21:16.600 --> 1:21:19.860\n of algorithm design, sort of?\n\n1:21:19.860 --> 1:21:21.480\n Not smart enough.\n\n1:21:21.480 --> 1:21:22.340\n Not smart enough.\n\n1:21:25.480 --> 1:21:27.320\n You're infinitely modest,\n\n1:21:27.320 --> 1:21:30.280\n but so you pursued your kind of love of programming.\n\n1:21:31.480 --> 1:21:33.640\n I mean, when you look back to those,\n\n1:21:33.640 --> 1:21:35.320\n I mean, just looking into that world,\n\n1:21:35.320 --> 1:21:37.840\n does that just seem like a distant world\n\n1:21:37.840 --> 1:21:40.360\n of theoretical computer science?\n\n1:21:40.360 --> 1:21:42.080\n Then is it fundamentally different\n\n1:21:42.080 --> 1:21:44.680\n from the world of programming?\n\n1:21:44.680 --> 1:21:45.520\n I don't know.\n\n1:21:45.520 --> 1:21:47.680\n I mean, certainly, in all seriousness,\n\n1:21:47.680 --> 1:21:49.480\n I just didn't have the talent for it.\n\n1:21:49.480 --> 1:21:51.840\n When I got here as a grad student to Princeton\n\n1:21:51.840 --> 1:21:53.520\n and I started to think about research\n\n1:21:53.520 --> 1:21:55.040\n at the end of my, I don't know,\n\n1:21:55.040 --> 1:21:56.480\n first year or something like that,\n\n1:21:56.480 --> 1:21:59.040\n I worked briefly with John Hopcroft,\n\n1:21:59.040 --> 1:22:00.920\n who is absolutely, you know,\n\n1:22:00.920 --> 1:22:02.640\n you mentioned during award winner, et cetera,\n\n1:22:02.640 --> 1:22:05.440\n a great guy, and it became crystal clear\n\n1:22:05.440 --> 1:22:09.280\n I was not cut out for this stuff, period, okay.\n\n1:22:09.280 --> 1:22:11.520\n And so I moved into things\n\n1:22:11.520 --> 1:22:13.600\n where I was more cut out for it,\n\n1:22:13.600 --> 1:22:16.840\n and that tended to be things like writing programs\n\n1:22:16.840 --> 1:22:20.600\n and then ultimately writing books.\n\n1:22:20.600 --> 1:22:22.920\n You said that in Toronto as an undergrad,\n\n1:22:22.920 --> 1:22:26.360\n you did a senior thesis or a literature survey\n\n1:22:26.360 --> 1:22:28.720\n on artificial intelligence.\n\n1:22:28.720 --> 1:22:30.480\n This was 1964.\n\n1:22:30.480 --> 1:22:31.320\n Correct.\n\n1:22:32.160 --> 1:22:37.080\n What was the AI landscape, ideas, dreams at that time?\n\n1:22:37.080 --> 1:22:39.080\n I think that was one of the,\n\n1:22:39.080 --> 1:22:40.400\n well, you've heard of AI winners.\n\n1:22:40.400 --> 1:22:41.800\n This is whatever the opposite was,\n\n1:22:41.800 --> 1:22:43.640\n AI summer or something.\n\n1:22:43.640 --> 1:22:46.000\n It was one of these things where people thought\n\n1:22:46.000 --> 1:22:49.280\n that, boy, we could do anything with computers,\n\n1:22:49.280 --> 1:22:51.520\n that all these hard problems, we could,\n\n1:22:51.520 --> 1:22:52.720\n computers will solve them.\n\n1:22:52.720 --> 1:22:54.400\n They will do machine translation.\n\n1:22:54.400 --> 1:22:57.880\n They will play games like chess.\n\n1:22:57.880 --> 1:23:02.160\n They will do, you know, prove theorems in geometry.\n\n1:23:02.160 --> 1:23:04.160\n There are all kinds of examples like that\n\n1:23:04.160 --> 1:23:06.560\n where people thought, boy,\n\n1:23:06.560 --> 1:23:08.880\n we could really do those sorts of things.\n\n1:23:09.880 --> 1:23:14.880\n And, you know, I read The Kool Aid in some sense.\n\n1:23:14.880 --> 1:23:16.920\n There's a wonderful collection of papers\n\n1:23:16.920 --> 1:23:18.760\n called Computers and Thought that was published\n\n1:23:18.760 --> 1:23:22.520\n in about that era and people were very optimistic.\n\n1:23:22.520 --> 1:23:24.240\n And then of course it turned out that\n\n1:23:24.240 --> 1:23:27.360\n what people thought was just a few years down the pike\n\n1:23:28.920 --> 1:23:31.320\n was more than a few years down the pike.\n\n1:23:31.320 --> 1:23:34.600\n And some parts of that are more or less now\n\n1:23:34.600 --> 1:23:36.400\n sort of under control.\n\n1:23:36.400 --> 1:23:38.960\n We finally do play games like Go and chess\n\n1:23:38.960 --> 1:23:41.160\n and so on better than people do,\n\n1:23:41.160 --> 1:23:43.600\n but there are others and machine translation\n\n1:23:43.600 --> 1:23:45.120\n is a lot better than it used to be,\n\n1:23:45.120 --> 1:23:49.720\n but that's, you know, 50, close to 60 years of progress\n\n1:23:49.720 --> 1:23:51.360\n and a lot of evolution in hardware\n\n1:23:51.360 --> 1:23:53.360\n and a tremendous amount more data up on which\n\n1:23:53.360 --> 1:23:57.480\n you can build systems that actually can learn\n\n1:23:57.480 --> 1:23:58.960\n from some of that data.\n\n1:23:58.960 --> 1:24:02.600\n And the infrastructure to support developers\n\n1:24:02.600 --> 1:24:05.640\n working together, like an open source movement,\n\n1:24:05.640 --> 1:24:08.760\n the internet, period, is also empowering.\n\n1:24:08.760 --> 1:24:11.720\n But what lessons do you draw from that,\n\n1:24:11.720 --> 1:24:13.760\n the opposite of winter, that optimism?\n\n1:24:14.760 --> 1:24:19.680\n Well, I guess the lesson is that in the short run\n\n1:24:19.680 --> 1:24:23.520\n it's pretty easy to be too pessimistic\n\n1:24:23.520 --> 1:24:25.520\n or maybe too optimistic and in the long run\n\n1:24:25.520 --> 1:24:27.200\n you probably shouldn't be too pessimistic.\n\n1:24:27.200 --> 1:24:28.600\n I'm not saying that very well.\n\n1:24:28.600 --> 1:24:32.600\n It reminds me of this remark from Arthur Clarke,\n\n1:24:32.600 --> 1:24:34.680\n a science fiction author, who says, you know,\n\n1:24:34.680 --> 1:24:36.560\n when some distinguished but elderly person\n\n1:24:36.560 --> 1:24:41.200\n says that something is possible, he's probably right.\n\n1:24:41.200 --> 1:24:44.320\n And if he says it's impossible, he's almost surely wrong.\n\n1:24:44.320 --> 1:24:45.760\n But you don't know what the time scale is.\n\n1:24:45.760 --> 1:24:48.320\n The time scale is critical, right.\n\n1:24:48.320 --> 1:24:52.520\n So what are your thoughts on this new summer of AI\n\n1:24:52.520 --> 1:24:55.360\n now in the work with machine learning and neural networks?\n\n1:24:55.360 --> 1:24:57.880\n You've kind of mentioned that you started to try to explore\n\n1:24:57.880 --> 1:25:01.400\n and look into this world that seems fundamentally different\n\n1:25:01.400 --> 1:25:06.200\n from the world of heuristics and algorithms like search,\n\n1:25:06.200 --> 1:25:08.960\n that it's now purely sort of trying to take\n\n1:25:08.960 --> 1:25:12.480\n huge amounts of data and learn from that data, right,\n\n1:25:12.480 --> 1:25:14.040\n programs from the data.\n\n1:25:14.040 --> 1:25:17.000\n Yeah, look, I think it's very interesting.\n\n1:25:17.000 --> 1:25:19.800\n I am incredibly far from an expert.\n\n1:25:19.800 --> 1:25:21.520\n Most of what I know I've learned from my students\n\n1:25:21.520 --> 1:25:24.520\n and they're probably disappointed\n\n1:25:24.520 --> 1:25:26.360\n in how little I've learned from them.\n\n1:25:26.360 --> 1:25:29.200\n But I think it has tremendous potential\n\n1:25:29.200 --> 1:25:30.560\n for certain kinds of things.\n\n1:25:30.560 --> 1:25:34.640\n I mean, games is one where it obviously has had an effect\n\n1:25:34.640 --> 1:25:36.000\n on some of the others as well.\n\n1:25:36.000 --> 1:25:39.520\n I think there's, and this is speaking from\n\n1:25:39.520 --> 1:25:40.680\n definitely not expertise,\n\n1:25:40.680 --> 1:25:42.360\n I think there are serious problems\n\n1:25:42.360 --> 1:25:45.480\n in certain kinds of machine learning at least\n\n1:25:45.480 --> 1:25:47.520\n because what they're learning from\n\n1:25:47.520 --> 1:25:49.200\n is the data that we give them.\n\n1:25:49.200 --> 1:25:52.080\n And if the data we give them has something wrong with it,\n\n1:25:52.080 --> 1:25:54.920\n then what they learn from it is probably wrong too.\n\n1:25:54.920 --> 1:25:59.120\n And the obvious thing is some kind of bias in the data.\n\n1:25:59.120 --> 1:26:02.360\n That the data has stuff in it like, I don't know,\n\n1:26:02.360 --> 1:26:05.440\n women aren't as good as men at something, okay.\n\n1:26:05.440 --> 1:26:07.360\n That's just flat wrong.\n\n1:26:07.360 --> 1:26:11.480\n But if it's in the data because of historical treatment,\n\n1:26:11.480 --> 1:26:15.000\n then that machine learning stuff will propagate that.\n\n1:26:15.000 --> 1:26:18.120\n And that is a serious worry.\n\n1:26:18.120 --> 1:26:22.680\n The positive part of that is what machine learning does\n\n1:26:22.680 --> 1:26:24.680\n is reveal the bias in the data\n\n1:26:24.680 --> 1:26:27.040\n and puts a mirror to our own society.\n\n1:26:27.040 --> 1:26:30.920\n And in so doing helps us remove the bias,\n\n1:26:30.920 --> 1:26:33.880\n you know, helps us work on ourselves.\n\n1:26:33.880 --> 1:26:35.720\n Puts a mirror to ourselves.\n\n1:26:35.720 --> 1:26:37.440\n Yeah, that's an optimistic point of view.\n\n1:26:37.440 --> 1:26:40.000\n And if it works that way, that would be absolutely great.\n\n1:26:40.000 --> 1:26:42.560\n And what I don't know is whether it does work that way\n\n1:26:42.560 --> 1:26:46.440\n or whether the AI mechanisms\n\n1:26:46.440 --> 1:26:48.480\n or machine learning mechanisms reinforce\n\n1:26:49.400 --> 1:26:52.640\n and amplify things that have been wrong in the past.\n\n1:26:52.640 --> 1:26:56.000\n And I don't know, but I think that's a serious thing\n\n1:26:56.000 --> 1:26:58.760\n that we have to be concerned about.\n\n1:26:58.760 --> 1:27:01.200\n Let me ask you an out there question, okay.\n\n1:27:01.200 --> 1:27:03.920\n I know nobody knows, but what do you think it takes\n\n1:27:03.920 --> 1:27:07.400\n to build a system of human level intelligence?\n\n1:27:07.400 --> 1:27:09.880\n That's been the dream from the 60s.\n\n1:27:09.880 --> 1:27:12.000\n We talk about games, about language,\n\n1:27:12.000 --> 1:27:16.360\n about image recognition, but really the dream\n\n1:27:16.360 --> 1:27:19.600\n is to create human level or superhuman level intelligence.\n\n1:27:19.600 --> 1:27:21.240\n What do you think it takes to do that?\n\n1:27:21.240 --> 1:27:23.080\n And are we close?\n\n1:27:23.080 --> 1:27:26.200\n I haven't a clue and I don't know, roughly speaking.\n\n1:27:26.200 --> 1:27:27.040\n I mean, this was Turing.\n\n1:27:27.040 --> 1:27:30.040\n I was trying to trick you into a hypothesis.\n\n1:27:30.040 --> 1:27:31.520\n Yeah, I mean, Turing talked about this\n\n1:27:31.520 --> 1:27:34.960\n in his paper on machine intelligence back in, geez,\n\n1:27:34.960 --> 1:27:36.840\n I don't know, early 50s or something like that.\n\n1:27:36.840 --> 1:27:38.320\n And he had the idea of the Turing test.\n\n1:27:38.320 --> 1:27:41.000\n And I don't know what the Turing test is.\n\n1:27:41.000 --> 1:27:41.960\n It's a good test of intelligence.\n\n1:27:41.960 --> 1:27:42.800\n I don't know.\n\n1:27:42.800 --> 1:27:43.640\n It's an interesting test.\n\n1:27:43.640 --> 1:27:45.800\n At least it's in some vague sense objective,\n\n1:27:45.800 --> 1:27:48.480\n whether you can read anything into the conclusions\n\n1:27:48.480 --> 1:27:50.440\n is a different story.\n\n1:27:50.440 --> 1:27:55.160\n Do you have worries, concerns, excitement\n\n1:27:55.160 --> 1:27:57.000\n about the future of artificial intelligence?\n\n1:27:57.000 --> 1:27:58.920\n So there's a lot of people who are worried\n\n1:27:58.920 --> 1:28:00.320\n and you can speak broadly\n\n1:28:00.320 --> 1:28:01.720\n than just artificial intelligence.\n\n1:28:01.720 --> 1:28:05.320\n It's basically computing taking over the world\n\n1:28:05.320 --> 1:28:06.760\n in various forms.\n\n1:28:06.760 --> 1:28:09.240\n Are you excited by this future,\n\n1:28:09.240 --> 1:28:12.320\n this possibility of computing being everywhere\n\n1:28:12.320 --> 1:28:13.820\n or are you worried?\n\n1:28:14.640 --> 1:28:16.440\n It's some combination of those.\n\n1:28:16.440 --> 1:28:21.200\n I think almost all technologies over the long run\n\n1:28:21.200 --> 1:28:24.600\n are for good, but there's plenty of examples\n\n1:28:24.600 --> 1:28:27.840\n where they haven't been good either over a long run\n\n1:28:27.840 --> 1:28:30.520\n for some people or over a short run.\n\n1:28:30.520 --> 1:28:33.220\n And computing is one of those.\n\n1:28:33.220 --> 1:28:36.800\n And AI within it is gonna be one of those as well,\n\n1:28:36.800 --> 1:28:37.880\n but computing broadly.\n\n1:28:37.880 --> 1:28:41.600\n I mean, for just a today example is privacy,\n\n1:28:41.600 --> 1:28:46.440\n that the use of things like social media and so on\n\n1:28:46.440 --> 1:28:49.140\n means that, and the commercial surveillance\n\n1:28:49.140 --> 1:28:52.480\n means that there's an enormous amount more known about us\n\n1:28:52.480 --> 1:28:56.920\n by people, other businesses, government, whatever,\n\n1:28:56.920 --> 1:28:59.560\n than perhaps one ought to feel comfortable with.\n\n1:28:59.560 --> 1:29:01.120\n So that's an example.\n\n1:29:04.280 --> 1:29:07.600\n So that's an example of a possible negative effect\n\n1:29:07.600 --> 1:29:09.700\n of computing being everywhere.\n\n1:29:09.700 --> 1:29:11.160\n It's an interesting one\n\n1:29:11.160 --> 1:29:16.160\n because it could also be a positive, if leveraged correctly.\n\n1:29:16.160 --> 1:29:18.160\n There's a big if there.\n\n1:29:18.160 --> 1:29:22.980\n So I have a deep interest in human psychology\n\n1:29:22.980 --> 1:29:27.360\n and humans seem to be very paranoid about this data thing\n\n1:29:27.360 --> 1:29:31.360\n that varies depending on age group.\n\n1:29:31.360 --> 1:29:32.920\n It seems like the younger folks.\n\n1:29:32.920 --> 1:29:35.940\n So it's exciting to me to see what society looks like\n\n1:29:35.940 --> 1:29:39.280\n 50 years from now, that the concerns about privacy\n\n1:29:39.280 --> 1:29:40.640\n might be flipped on their head\n\n1:29:40.640 --> 1:29:42.680\n based purely on human psychology\n\n1:29:42.680 --> 1:29:45.620\n versus actual concerns or not.\n\n1:29:47.400 --> 1:29:49.560\n What do you think about Moore's Law?\n\n1:29:49.560 --> 1:29:52.040\n Well, you said a lot of stuff we've talked,\n\n1:29:52.040 --> 1:29:55.760\n you talked about programming languages in their design,\n\n1:29:55.760 --> 1:29:58.760\n in their ideas that come from the constraints\n\n1:29:58.760 --> 1:30:00.480\n in the systems they operate in.\n\n1:30:00.480 --> 1:30:01.840\n Do you think Moore's Law,\n\n1:30:04.360 --> 1:30:07.160\n the exponential improvement of systems\n\n1:30:07.160 --> 1:30:08.840\n will continue indefinitely?\n\n1:30:08.840 --> 1:30:12.400\n There's a mix of opinions on that currently,\n\n1:30:12.400 --> 1:30:17.400\n or do you think there'll be a plateau?\n\n1:30:19.260 --> 1:30:21.600\n Well, the frivolous answer is no exponential\n\n1:30:21.600 --> 1:30:22.700\n it can go on forever.\n\n1:30:24.080 --> 1:30:26.120\n You run out of something.\n\n1:30:26.120 --> 1:30:27.760\n Just as we said, timescale matters.\n\n1:30:27.760 --> 1:30:30.880\n So if it goes on long enough, that might be all we need.\n\n1:30:30.880 --> 1:30:33.320\n Yeah, right, won't matter to us.\n\n1:30:33.320 --> 1:30:34.680\n So I don't know, we've seen places\n\n1:30:34.680 --> 1:30:35.960\n where Moore's Law has changed.\n\n1:30:35.960 --> 1:30:37.480\n For example, mentioned earlier,\n\n1:30:37.480 --> 1:30:41.320\n processors don't get faster anymore,\n\n1:30:41.320 --> 1:30:46.120\n but you use that same growth of the ability\n\n1:30:46.120 --> 1:30:48.080\n to put more things in a given area\n\n1:30:48.080 --> 1:30:51.120\n to grow them horizontally instead of vertically as it were\n\n1:30:51.120 --> 1:30:52.960\n so you can get more and more processors\n\n1:30:52.960 --> 1:30:55.640\n or memory or whatever on the same chip.\n\n1:30:55.640 --> 1:30:57.440\n Is that gonna run into a limitation?\n\n1:30:57.440 --> 1:31:00.680\n Presumably, because at some point\n\n1:31:00.680 --> 1:31:03.160\n you get down to the individual atoms.\n\n1:31:03.160 --> 1:31:05.600\n And so you gotta find some way around that.\n\n1:31:05.600 --> 1:31:07.840\n Will we find some way around that?\n\n1:31:07.840 --> 1:31:10.040\n I don't know, I just said that if I say it won't,\n\n1:31:10.040 --> 1:31:12.600\n I'll be wrong, so perhaps we will.\n\n1:31:12.600 --> 1:31:15.080\n So I just talked to Jim Keller and he says,\n\n1:31:15.080 --> 1:31:16.920\n so he actually describes, he argues\n\n1:31:16.920 --> 1:31:19.580\n that the Moore's Law will continue for a long, long time\n\n1:31:19.580 --> 1:31:21.840\n because you mentioned the atom.\n\n1:31:21.840 --> 1:31:25.200\n We actually have, I think, a thousand fold increase,\n\n1:31:25.200 --> 1:31:30.000\n still decreased in size, still possible\n\n1:31:30.000 --> 1:31:32.120\n before we get to the quantum level.\n\n1:31:32.120 --> 1:31:34.760\n So there's still a lot of possibilities.\n\n1:31:34.760 --> 1:31:36.460\n He thinks he'll continue indefinitely,\n\n1:31:36.460 --> 1:31:40.720\n which is an interesting optimistic viewpoint.\n\n1:31:40.720 --> 1:31:43.480\n But how do you think the programming languages\n\n1:31:43.480 --> 1:31:45.440\n will change with this increase?\n\n1:31:45.440 --> 1:31:47.680\n Whether we hit a wall or not,\n\n1:31:47.680 --> 1:31:50.400\n what do you think, do you think there'll be\n\n1:31:50.400 --> 1:31:51.840\n a fundamental change in the way\n\n1:31:51.840 --> 1:31:53.600\n programming languages are designed?\n\n1:31:54.500 --> 1:31:55.400\n I don't know about that.\n\n1:31:55.400 --> 1:31:58.600\n I think what will happen is continuation\n\n1:31:58.600 --> 1:32:02.040\n of what we see in some areas, at least,\n\n1:32:02.040 --> 1:32:05.500\n which is that more programming will be done\n\n1:32:05.500 --> 1:32:10.500\n by programs than by people, and that more will be done\n\n1:32:11.000 --> 1:32:14.960\n by sort of declarative rather than procedural mechanisms\n\n1:32:14.960 --> 1:32:17.360\n where I'll say, I want this to happen.\n\n1:32:17.360 --> 1:32:18.700\n You figure out how.\n\n1:32:19.820 --> 1:32:24.240\n And that is, in many cases, at this point,\n\n1:32:24.240 --> 1:32:28.680\n domain of specialized languages for narrow domains,\n\n1:32:28.680 --> 1:32:31.840\n but you can imagine that broadening out.\n\n1:32:31.840 --> 1:32:35.660\n And so I don't have to say so much, in so much detail,\n\n1:32:35.660 --> 1:32:39.360\n some collection of software, let's call it languages\n\n1:32:39.360 --> 1:32:42.400\n or programs or something, will figure out\n\n1:32:42.400 --> 1:32:44.840\n how to do what I want to do.\n\n1:32:44.840 --> 1:32:47.200\n Interesting, so increased levels of abstraction.\n\n1:32:47.200 --> 1:32:48.040\n Yeah.\n\n1:32:48.920 --> 1:32:51.040\n And one day getting to the human level,\n\n1:32:51.040 --> 1:32:52.680\n where we can just use natural language.\n\n1:32:52.680 --> 1:32:54.600\n Could be possible.\n\n1:32:54.600 --> 1:32:56.800\n So you taught, so teach a course,\n\n1:32:56.800 --> 1:32:59.760\n Computers in Our World, here at Princeton,\n\n1:32:59.760 --> 1:33:03.880\n that introduces computing and programming to nonmajors.\n\n1:33:03.880 --> 1:33:06.800\n What, just from that experience,\n\n1:33:06.800 --> 1:33:08.560\n what advice do you have for people\n\n1:33:08.560 --> 1:33:10.600\n who don't know anything about programming\n\n1:33:10.600 --> 1:33:12.960\n but are kind of curious about this world,\n\n1:33:12.960 --> 1:33:14.800\n or programming seems to become more and more\n\n1:33:14.800 --> 1:33:17.360\n of a fundamental skill that people need to be\n\n1:33:17.360 --> 1:33:18.440\n at least aware of?\n\n1:33:18.440 --> 1:33:20.400\n Yeah, well, I couldn't recommend a good book.\n\n1:33:20.400 --> 1:33:22.040\n What's that?\n\n1:33:22.040 --> 1:33:24.400\n The book I wrote for the course.\n\n1:33:24.400 --> 1:33:26.840\n I think this is one of these questions of,\n\n1:33:26.840 --> 1:33:28.520\n should everybody know how to program?\n\n1:33:28.520 --> 1:33:31.300\n And I think the answer is probably not,\n\n1:33:31.300 --> 1:33:33.000\n but I think everybody should at least understand\n\n1:33:33.000 --> 1:33:35.700\n sort of what it is, so that if you say to somebody,\n\n1:33:35.700 --> 1:33:38.140\n I'm a programmer, they have a notion of what that might be,\n\n1:33:38.140 --> 1:33:40.160\n or if you say this is a program,\n\n1:33:40.160 --> 1:33:43.600\n or this was decided by a computer running a program,\n\n1:33:43.600 --> 1:33:47.600\n that they have some vague intuitive understanding\n\n1:33:47.600 --> 1:33:51.420\n and accurate understanding of what that might imply.\n\n1:33:52.600 --> 1:33:55.180\n So part of what I'm doing in this course,\n\n1:33:55.180 --> 1:33:57.480\n which is very definitely for nontechnical people,\n\n1:33:57.480 --> 1:34:01.200\n and a typical person in it is a history or English major,\n\n1:34:01.200 --> 1:34:03.680\n try and explain how computers work,\n\n1:34:03.680 --> 1:34:06.320\n how they do their thing, what programming is,\n\n1:34:06.320 --> 1:34:07.620\n how you write a program,\n\n1:34:08.880 --> 1:34:11.400\n and how computers talk to each other,\n\n1:34:11.400 --> 1:34:14.320\n and what do they do when they're talking to each other.\n\n1:34:14.320 --> 1:34:19.320\n And then I would say nobody, very rarely,\n\n1:34:19.400 --> 1:34:21.920\n and does anybody in that course go on\n\n1:34:21.920 --> 1:34:24.200\n to become a real serious programmer,\n\n1:34:24.200 --> 1:34:27.160\n but at least they've got a somewhat better idea\n\n1:34:27.160 --> 1:34:29.600\n of what all this stuff is about, not just the programming,\n\n1:34:29.600 --> 1:34:32.640\n but the technology behind computers and communications.\n\n1:34:32.640 --> 1:34:35.720\n Do they try and write a program themselves?\n\n1:34:35.720 --> 1:34:38.360\n Oh yeah, yeah, a very small amount.\n\n1:34:38.360 --> 1:34:42.200\n I introduced them to how machines work at a level below,\n\n1:34:42.200 --> 1:34:45.240\n high level languages, so we have kind of a toy machine\n\n1:34:45.240 --> 1:34:47.800\n that has a very small repertoire, a dozen instructions,\n\n1:34:47.800 --> 1:34:51.240\n and they write trivial assembly language programs for that.\n\n1:34:51.240 --> 1:34:52.440\n Wow, that's interesting.\n\n1:34:52.440 --> 1:34:55.080\n So can you just, if you were to give a flavor\n\n1:34:55.080 --> 1:34:57.680\n to people of the programming world,\n\n1:34:57.680 --> 1:34:59.480\n of the competing world,\n\n1:34:59.480 --> 1:35:01.920\n what are the examples they should go with?\n\n1:35:01.920 --> 1:35:04.320\n So a little bit of assembly to get a sense\n\n1:35:04.320 --> 1:35:08.800\n at the lowest level of what the program is really doing.\n\n1:35:08.800 --> 1:35:10.720\n Yeah, I mean, in some sense,\n\n1:35:10.720 --> 1:35:12.480\n there's no such thing as the lowest level\n\n1:35:12.480 --> 1:35:13.600\n because you can keep going down,\n\n1:35:13.600 --> 1:35:15.560\n but that's the place where I drew the line.\n\n1:35:15.560 --> 1:35:19.360\n So the idea that computers have a fairly small repertoire\n\n1:35:19.360 --> 1:35:21.760\n of very simple instructions that they can do,\n\n1:35:21.760 --> 1:35:25.000\n like add and subtract and branch and so on,\n\n1:35:25.000 --> 1:35:26.200\n as you mentioned earlier,\n\n1:35:27.560 --> 1:35:31.520\n and that you can write code at that level\n\n1:35:31.520 --> 1:35:33.240\n and it will get things done,\n\n1:35:33.240 --> 1:35:35.520\n and then you have the levels of abstraction\n\n1:35:35.520 --> 1:35:37.800\n that we get with higher level languages,\n\n1:35:37.800 --> 1:35:39.880\n like Fortran or C or whatever,\n\n1:35:39.880 --> 1:35:42.320\n and that makes it easier to write the code\n\n1:35:42.320 --> 1:35:44.920\n and less dependent on particular architectures.\n\n1:35:45.960 --> 1:35:48.040\n And then we talk about a lot of the different kinds\n\n1:35:48.040 --> 1:35:50.640\n of programs that they use all the time\n\n1:35:50.640 --> 1:35:52.760\n that they don't probably realize are programs,\n\n1:35:52.760 --> 1:35:57.640\n like they're running Mac OS on their computers\n\n1:35:57.640 --> 1:36:00.240\n or maybe Windows, and they're downloading apps\n\n1:36:00.240 --> 1:36:03.000\n on their phones, and all of those things are programs\n\n1:36:03.000 --> 1:36:05.960\n that are just what we just talked about,\n\n1:36:05.960 --> 1:36:08.160\n except at a grand scale.\n\n1:36:08.160 --> 1:36:10.520\n And it's easy to forget that they're actual programs\n\n1:36:10.520 --> 1:36:11.840\n that people program.\n\n1:36:11.840 --> 1:36:14.080\n There's engineers that wrote those things.\n\n1:36:14.080 --> 1:36:14.920\n Yeah, right.\n\n1:36:14.920 --> 1:36:18.920\n And so in a way, I'm expecting them\n\n1:36:18.920 --> 1:36:20.600\n to make an enormous conceptual leap\n\n1:36:20.600 --> 1:36:24.560\n from their five or 10 line toy assembly language thing\n\n1:36:24.560 --> 1:36:28.280\n that adds two or three numbers to something\n\n1:36:28.280 --> 1:36:31.040\n that is a browser on their phone or whatever,\n\n1:36:31.040 --> 1:36:33.480\n but it's really the same thing.\n\n1:36:34.520 --> 1:36:37.160\n So if you look in broad strokes at history,\n\n1:36:38.320 --> 1:36:39.720\n what do you think the world,\n\n1:36:39.720 --> 1:36:42.840\n how do you think the world changed because of computers?\n\n1:36:42.840 --> 1:36:45.200\n It's hard to sometimes see the big picture\n\n1:36:45.200 --> 1:36:48.040\n when you're in it, but I guess I'm asking\n\n1:36:48.040 --> 1:36:51.520\n if there's something you've noticed over the years\n\n1:36:51.520 --> 1:36:54.560\n that, like you were mentioning,\n\n1:36:54.560 --> 1:36:56.820\n the students are more distracted looking at their,\n\n1:36:56.820 --> 1:36:58.520\n now there's a device to look at.\n\n1:36:58.520 --> 1:36:59.360\n Right.\n\n1:36:59.360 --> 1:37:01.600\n I think computing has changed a tremendous amount,\n\n1:37:01.600 --> 1:37:03.800\n obviously, but I think one aspect of that\n\n1:37:03.800 --> 1:37:06.480\n is the way that people interact with each other,\n\n1:37:06.480 --> 1:37:08.880\n both locally and far away.\n\n1:37:08.880 --> 1:37:12.240\n And when I was the age of those kids,\n\n1:37:12.240 --> 1:37:15.120\n making a phone call to somewhere was a big deal\n\n1:37:15.120 --> 1:37:17.280\n because it costs serious money.\n\n1:37:17.280 --> 1:37:19.320\n And this was in the 60s, right?\n\n1:37:20.520 --> 1:37:22.920\n And today people don't make phone calls,\n\n1:37:22.920 --> 1:37:25.720\n they send texts or something like that.\n\n1:37:25.720 --> 1:37:29.520\n So there's an up and down in what people do.\n\n1:37:29.520 --> 1:37:34.120\n People think nothing of having correspondence,\n\n1:37:34.120 --> 1:37:36.560\n regular meetings, video, whatever,\n\n1:37:36.560 --> 1:37:38.680\n with friends or family or whatever\n\n1:37:38.680 --> 1:37:40.400\n in any other part of the world,\n\n1:37:40.400 --> 1:37:43.100\n and they don't think about that at all.\n\n1:37:43.100 --> 1:37:47.140\n And so that's just the communication aspect of it.\n\n1:37:49.120 --> 1:37:51.000\n Do you think that brings us closer together\n\n1:37:51.000 --> 1:37:53.760\n or does it make us,\n\n1:37:53.760 --> 1:37:57.900\n does it take us away from the closeness\n\n1:37:57.900 --> 1:37:59.140\n of human to human contact?\n\n1:37:59.140 --> 1:38:02.820\n I think it depends a lot on all kinds of things.\n\n1:38:02.820 --> 1:38:05.820\n So I trade mail with my brother and sister in Canada\n\n1:38:05.820 --> 1:38:08.820\n much more often than I used to talk to them on the phone.\n\n1:38:08.820 --> 1:38:10.700\n So probably every two or three days,\n\n1:38:10.700 --> 1:38:13.500\n I get something or send something to them.\n\n1:38:14.380 --> 1:38:16.940\n Whereas 20 years ago,\n\n1:38:16.940 --> 1:38:19.260\n I probably wouldn't have talked to them\n\n1:38:19.260 --> 1:38:20.600\n on the phone nearly as much.\n\n1:38:20.600 --> 1:38:23.060\n So in that sense, that's brought my brother and sister\n\n1:38:23.060 --> 1:38:24.020\n and I closer together.\n\n1:38:24.020 --> 1:38:25.860\n That's a good thing.\n\n1:38:25.860 --> 1:38:28.660\n I watch the kids on campus\n\n1:38:28.660 --> 1:38:30.980\n and they're mostly walking around with their heads down,\n\n1:38:30.980 --> 1:38:32.260\n fooling with their phones\n\n1:38:32.260 --> 1:38:34.900\n to the point where I have to duck them.\n\n1:38:34.900 --> 1:38:39.460\n I don't know that that has brought them closer together\n\n1:38:39.460 --> 1:38:40.500\n in some ways.\n\n1:38:40.500 --> 1:38:43.740\n There's sociological research that says people are,\n\n1:38:43.740 --> 1:38:46.220\n in fact, not as close together as they used to be.\n\n1:38:46.220 --> 1:38:47.620\n I don't know where that's really true,\n\n1:38:47.620 --> 1:38:50.780\n but I can see potential downsides\n\n1:38:50.780 --> 1:38:53.220\n and kids where you think,\n\n1:38:53.220 --> 1:38:56.780\n come on, wake up and smell the coffee or whatever.\n\n1:38:56.780 --> 1:38:57.620\n That's right.\n\n1:38:57.620 --> 1:39:00.380\n But if you look at, again, nobody can predict the future,\n\n1:39:00.380 --> 1:39:02.620\n but are you excited?\n\n1:39:02.620 --> 1:39:04.780\n Kind of touched this a little bit with AI,\n\n1:39:04.780 --> 1:39:08.740\n but are you excited by the future in the next 10, 20 years\n\n1:39:08.740 --> 1:39:11.540\n that computing will bring?\n\n1:39:11.540 --> 1:39:15.700\n You were there when there was no computers really.\n\n1:39:15.700 --> 1:39:19.420\n And now computers are everywhere all over the world\n\n1:39:19.420 --> 1:39:23.060\n and Africa and Asia and just every person,\n\n1:39:23.060 --> 1:39:25.580\n almost every person in the world has a device.\n\n1:39:25.580 --> 1:39:29.300\n So are you hopeful, optimistic about that future?\n\n1:39:30.740 --> 1:39:32.420\n It's mixed, if the truth be told.\n\n1:39:32.420 --> 1:39:34.140\n I mean, I think there are some things about that\n\n1:39:34.140 --> 1:39:34.980\n that are good.\n\n1:39:34.980 --> 1:39:36.740\n I think there's the potential for people\n\n1:39:36.740 --> 1:39:39.140\n to improve their lives all over the place\n\n1:39:39.140 --> 1:39:40.940\n and that's obviously good.\n\n1:39:40.940 --> 1:39:44.260\n And at the same time, at least in the short run,\n\n1:39:44.260 --> 1:39:45.900\n you can see lots and lots of bad\n\n1:39:45.900 --> 1:39:49.420\n as people become more tribalistic or parochial\n\n1:39:49.420 --> 1:39:51.780\n in their interests and it's an enormous amount\n\n1:39:51.780 --> 1:39:54.820\n more us than them and people are using computers\n\n1:39:54.820 --> 1:39:58.060\n in all kinds of ways to mislead or misrepresent\n\n1:39:58.060 --> 1:39:59.900\n or flat out lie about what's going on\n\n1:39:59.900 --> 1:40:02.300\n and that is affecting politics locally\n\n1:40:02.300 --> 1:40:04.200\n and I think everywhere in the world.\n\n1:40:05.580 --> 1:40:08.900\n Yeah, the long term effect on political systems\n\n1:40:08.900 --> 1:40:10.860\n and so on is who knows.\n\n1:40:10.860 --> 1:40:11.860\n Who knows indeed.\n\n1:40:11.860 --> 1:40:16.860\n The people now have a voice which is a powerful thing.\n\n1:40:18.620 --> 1:40:21.020\n People who are oppressed have a voice\n\n1:40:21.020 --> 1:40:24.060\n but also everybody has a voice\n\n1:40:24.060 --> 1:40:25.580\n and the chaos that emerges from that\n\n1:40:25.580 --> 1:40:26.820\n is fascinating to watch.\n\n1:40:26.820 --> 1:40:29.180\n Yeah, yeah, it's kind of scary.\n\n1:40:30.260 --> 1:40:33.700\n If you can go back and relive a moment in your life,\n\n1:40:33.700 --> 1:40:37.520\n one that made you truly happy outside of family\n\n1:40:37.520 --> 1:40:40.060\n or was profoundly transformative,\n\n1:40:40.060 --> 1:40:44.340\n is there a moment or moments that jump out at you\n\n1:40:44.340 --> 1:40:45.180\n from memory?\n\n1:40:46.140 --> 1:40:48.040\n I don't think specific moments.\n\n1:40:48.040 --> 1:40:50.340\n I think there were lots and lots and lots of good times\n\n1:40:50.340 --> 1:40:52.500\n at Bell Labs where you would build something\n\n1:40:52.500 --> 1:40:55.820\n and it worked.\n\n1:40:55.820 --> 1:40:56.740\n Did you say it worked?\n\n1:40:56.740 --> 1:40:57.940\n So the moment it worked.\n\n1:40:57.940 --> 1:41:00.300\n Yeah, and somebody used it and they said,\n\n1:41:00.300 --> 1:41:01.260\n gee, that's neat.\n\n1:41:01.260 --> 1:41:04.640\n Those kinds of things happened quite often\n\n1:41:04.640 --> 1:41:09.260\n in that sort of golden era in the 70s when Unix was young\n\n1:41:09.260 --> 1:41:11.420\n and there was all this low hanging fruit\n\n1:41:11.420 --> 1:41:13.420\n and interesting things to work on\n\n1:41:13.420 --> 1:41:16.140\n and a group of people who kind of,\n\n1:41:16.140 --> 1:41:18.900\n we were all together in this and if you did something,\n\n1:41:18.900 --> 1:41:20.580\n they would try it out for you.\n\n1:41:20.580 --> 1:41:22.820\n And I think that was in some sense,\n\n1:41:22.820 --> 1:41:24.500\n a really, really good time.\n\n1:41:24.500 --> 1:41:27.460\n And AUK was, was AUK an example of that?\n\n1:41:27.460 --> 1:41:29.400\n That when you built it and people used it?\n\n1:41:29.400 --> 1:41:30.420\n Yeah, absolutely.\n\n1:41:30.420 --> 1:41:32.700\n And now millions of people use it.\n\n1:41:32.700 --> 1:41:34.540\n And all your stupid mistakes are right there\n\n1:41:34.540 --> 1:41:36.500\n for them to look at, right?\n\n1:41:36.500 --> 1:41:37.460\n So it's mixed.\n\n1:41:37.460 --> 1:41:39.140\n Yeah, it's terrifying, vulnerable\n\n1:41:39.140 --> 1:41:42.020\n but it's beautiful because it does have a positive impact\n\n1:41:42.020 --> 1:41:43.840\n on so, so many people.\n\n1:41:43.840 --> 1:41:47.220\n So I think there's no better way to end it.\n\n1:41:47.220 --> 1:41:49.420\n Brian, thank you so much for talking to us, it was an honor.\n\n1:41:49.420 --> 1:41:51.260\n Okay, my pleasure.\n\n1:41:51.260 --> 1:41:52.080\n Good fun.\n\n1:41:52.080 --> 1:41:55.340\n Thank you for listening to this conversation\n\n1:41:55.340 --> 1:41:58.500\n with Brian Kernighan and thank you to our sponsors,\n\n1:41:58.500 --> 1:42:02.380\n 8 Sleep Mattress and Raycon Earbuds.\n\n1:42:02.380 --> 1:42:05.100\n Please consider supporting this podcast\n\n1:42:05.100 --> 1:42:10.100\n by going to 8sleep.com slash Lex and to buyraycon.com\n\n1:42:10.820 --> 1:42:14.520\n slash Lex, click the links, buy the stuff.\n\n1:42:14.520 --> 1:42:16.760\n These both are amazing products.\n\n1:42:16.760 --> 1:42:19.300\n It really is the best way to support this podcast\n\n1:42:19.300 --> 1:42:21.140\n and the journey I'm on.\n\n1:42:21.140 --> 1:42:24.700\n It's how they know I sent you and increases the chance\n\n1:42:24.700 --> 1:42:27.660\n that they'll actually support this podcast in the future.\n\n1:42:27.660 --> 1:42:30.260\n If you enjoy this thing, subscribe on YouTube,\n\n1:42:30.260 --> 1:42:32.620\n review it with 5 Stars and Apple Podcast,\n\n1:42:32.620 --> 1:42:35.940\n support it on Patreon or connect with me on Twitter\n\n1:42:35.940 --> 1:42:40.060\n at Lex Friedman, spelled somehow miraculously\n\n1:42:40.060 --> 1:42:44.100\n without the letter E, just F R I D M A N\n\n1:42:44.100 --> 1:42:46.600\n because when we immigrated to this country,\n\n1:42:46.600 --> 1:42:49.020\n we were not so good at spelling.\n\n1:42:49.020 --> 1:42:51.340\n And now let me leave you with some words\n\n1:42:51.340 --> 1:42:56.200\n from Brian Kernighan, don't comment bad code, rewrite it.\n\n1:42:56.200 --> 1:43:01.200\n Thank you for listening and hope to see you next time.\n\n"
}