{
  "title": "Chris Lattner: The Future of Computing and Programming Languages | Lex Fridman Podcast #131",
  "id": "nWTvXbQHwWs",
  "transcript": "WEBVTT\n\n00:00.000 --> 00:02.640\n The following is a conversation with Chris Latner,\n\n00:02.640 --> 00:04.680\n his second time on the podcast.\n\n00:04.680 --> 00:06.600\n He's one of the most brilliant engineers\n\n00:06.600 --> 00:08.780\n in modern computing, having created\n\n00:08.780 --> 00:11.460\n LLVM compiler infrastructure project,\n\n00:11.460 --> 00:14.640\n the Clang compiler, the Swift programming language,\n\n00:14.640 --> 00:17.640\n a lot of key contributions to TensorFlow and TPUs\n\n00:17.640 --> 00:19.040\n as part of Google.\n\n00:19.040 --> 00:23.500\n He served as vice president of autopilot software at Tesla,\n\n00:23.500 --> 00:26.180\n was a software innovator and leader at Apple,\n\n00:26.180 --> 00:29.320\n and now is at SciFive as senior vice president\n\n00:29.320 --> 00:32.500\n of platform engineering, looking to revolutionize\n\n00:32.500 --> 00:36.560\n chip design to make it faster, better, and cheaper.\n\n00:36.560 --> 00:39.180\n Quick mention of each sponsor, followed by some thoughts\n\n00:39.180 --> 00:40.900\n related to the episode.\n\n00:40.900 --> 00:43.480\n First sponsor is Blinkist, an app that summarizes\n\n00:43.480 --> 00:45.380\n key ideas from thousands of books.\n\n00:45.380 --> 00:48.020\n I use it almost every day to learn new things\n\n00:48.020 --> 00:52.280\n or to pick which books I want to read or listen to next.\n\n00:52.280 --> 00:55.860\n Second is Neuro, the maker of functional sugar free gum\n\n00:55.860 --> 00:58.520\n and mints that I use to supercharge my mind\n\n00:58.520 --> 01:01.620\n with caffeine, altheanine, and B vitamins.\n\n01:01.620 --> 01:05.940\n Third is Masterclass, online courses from the best people\n\n01:05.940 --> 01:08.360\n in the world on each of the topics covered,\n\n01:08.360 --> 01:11.140\n from rockets, to game design, to poker,\n\n01:11.140 --> 01:13.920\n to writing, and to guitar.\n\n01:13.920 --> 01:16.960\n And finally, Cash App, the app I use to send money\n\n01:16.960 --> 01:21.780\n to friends for food, drinks, and unfortunately, lost bets.\n\n01:21.780 --> 01:23.740\n Please check out the sponsors in the description\n\n01:23.740 --> 01:27.320\n to get a discount and to support this podcast.\n\n01:27.320 --> 01:29.800\n As a side note, let me say that Chris has been\n\n01:29.800 --> 01:32.560\n an inspiration to me on a human level\n\n01:32.560 --> 01:35.240\n because he is so damn good as an engineer\n\n01:35.240 --> 01:38.600\n and leader of engineers, and yet he's able to stay humble,\n\n01:38.600 --> 01:41.040\n especially humble enough to hear the voices\n\n01:41.040 --> 01:43.800\n of disagreement and to learn from them.\n\n01:43.800 --> 01:46.080\n He was supportive of me and this podcast\n\n01:46.080 --> 01:49.520\n from the early days, and for that, I'm forever grateful.\n\n01:49.520 --> 01:52.280\n To be honest, most of my life, no one really believed\n\n01:52.280 --> 01:53.920\n that I would amount to much.\n\n01:53.920 --> 01:56.500\n So when another human being looks at me,\n\n01:56.500 --> 01:58.920\n it makes me feel like I might be someone special,\n\n01:58.920 --> 02:00.840\n it can be truly inspiring.\n\n02:00.840 --> 02:02.780\n That's a lesson for educators.\n\n02:02.780 --> 02:05.640\n The weird kid in the corner with a dream\n\n02:05.640 --> 02:08.160\n is someone who might need your love and support\n\n02:08.160 --> 02:10.080\n in order for that dream to flourish.\n\n02:10.920 --> 02:13.320\n If you enjoy this thing, subscribe on YouTube,\n\n02:13.320 --> 02:15.480\n review it with five stars on Apple Podcast,\n\n02:15.480 --> 02:17.960\n follow on Spotify, support on Patreon,\n\n02:17.960 --> 02:21.320\n or connect with me on Twitter at Lex Friedman.\n\n02:21.320 --> 02:24.780\n And now, here's my conversation with Chris Latner.\n\n02:24.780 --> 02:28.960\n What are the strongest qualities of Steve Jobs,\n\n02:28.960 --> 02:32.960\n Elon Musk, and the great and powerful Jeff Dean\n\n02:32.960 --> 02:36.000\n since you've gotten the chance to work with each?\n\n02:36.000 --> 02:38.560\n You're starting with an easy question there.\n\n02:38.560 --> 02:40.680\n These are three very different people.\n\n02:40.680 --> 02:43.840\n I guess you could do maybe a pairwise comparison\n\n02:43.840 --> 02:45.720\n between them instead of a group comparison.\n\n02:45.720 --> 02:48.200\n So if you look at Steve Jobs and Elon,\n\n02:48.200 --> 02:51.000\n I worked a lot more with Elon than I did with Steve.\n\n02:51.000 --> 02:52.360\n They have a lot of commonality.\n\n02:52.360 --> 02:55.400\n They're both visionary in their own way.\n\n02:55.400 --> 02:57.600\n They're both very demanding in their own way.\n\n02:58.680 --> 03:02.400\n My sense is Steve is much more human factor focused\n\n03:02.400 --> 03:04.620\n where Elon is more technology focused.\n\n03:04.620 --> 03:05.960\n What does human factor mean?\n\n03:05.960 --> 03:08.440\n Steve's trying to build things that feel good,\n\n03:08.440 --> 03:11.560\n that people love, that affect people's lives, how they live.\n\n03:11.560 --> 03:14.640\n He's looking into the future a little bit\n\n03:14.640 --> 03:17.760\n in terms of what people want.\n\n03:17.760 --> 03:20.240\n Where I think that Elon focuses more on\n\n03:20.240 --> 03:22.360\n learning how exponentials work and predicting\n\n03:22.360 --> 03:24.080\n the development of those.\n\n03:24.080 --> 03:26.240\n Steve worked with a lot of engineers.\n\n03:26.240 --> 03:29.480\n That was one of the things that are reading the biography.\n\n03:29.480 --> 03:33.280\n How can a designer essentially talk to engineers\n\n03:33.280 --> 03:35.580\n and get their respect?\n\n03:35.580 --> 03:37.760\n I think, so I did not work very closely with Steve.\n\n03:37.760 --> 03:38.600\n I'm not an expert at all.\n\n03:38.600 --> 03:41.840\n My sense is that he pushed people really hard,\n\n03:41.840 --> 03:44.420\n but then when he got an explanation that made sense to him,\n\n03:44.420 --> 03:45.720\n then he would let go.\n\n03:45.720 --> 03:49.200\n And he did actually have a lot of respect for engineering,\n\n03:49.200 --> 03:51.480\n but he also knew when to push.\n\n03:51.480 --> 03:54.160\n And when you can read people well,\n\n03:54.160 --> 03:56.880\n you can know when they're holding back\n\n03:56.880 --> 03:58.440\n and when you can get a little bit more out of them.\n\n03:58.440 --> 04:00.340\n And I think he was very good at that.\n\n04:01.200 --> 04:03.240\n I mean, if you compare the other folks,\n\n04:03.240 --> 04:05.180\n so Jeff Dean, right?\n\n04:05.180 --> 04:06.280\n Jeff Dean's an amazing guy.\n\n04:06.280 --> 04:09.060\n He's super smart, as are the other guys.\n\n04:10.440 --> 04:13.820\n Jeff is a really, really, really nice guy, well meaning.\n\n04:13.820 --> 04:15.280\n He's a classic Googler.\n\n04:15.280 --> 04:17.720\n He wants people to be happy.\n\n04:17.720 --> 04:19.760\n He combines it with brilliance\n\n04:19.760 --> 04:22.580\n so he can pull people together in a really great way.\n\n04:22.580 --> 04:24.640\n He's definitely not a CEO type.\n\n04:24.640 --> 04:28.040\n I don't think he would even want to be that.\n\n04:28.040 --> 04:29.280\n Do you know if he still programs?\n\n04:29.280 --> 04:30.560\n Oh yeah, he definitely programs.\n\n04:30.560 --> 04:32.840\n Jeff is an amazing engineer today, right?\n\n04:32.840 --> 04:34.080\n And that has never changed.\n\n04:34.080 --> 04:38.040\n So it's really hard to compare Jeff to either of those two.\n\n04:40.360 --> 04:43.680\n I think that Jeff leads through technology\n\n04:43.680 --> 04:45.800\n and building it himself and then pulling people in\n\n04:45.800 --> 04:46.800\n and inspiring them.\n\n04:46.800 --> 04:50.080\n And so I think that that's one of the amazing things\n\n04:50.080 --> 04:50.920\n about Jeff.\n\n04:50.920 --> 04:53.240\n But each of these people, with their pros and cons,\n\n04:53.240 --> 04:55.040\n all are really inspirational\n\n04:55.040 --> 04:56.800\n and have achieved amazing things.\n\n04:56.800 --> 05:00.760\n So I've been very fortunate to get to work with these guys.\n\n05:00.760 --> 05:03.880\n For yourself, you've led large teams,\n\n05:03.880 --> 05:06.240\n you've done so many incredible,\n\n05:06.240 --> 05:08.440\n difficult technical challenges.\n\n05:08.440 --> 05:10.940\n Is there something you've picked up from them\n\n05:10.940 --> 05:12.560\n about how to lead?\n\n05:12.560 --> 05:14.700\n Yeah, so I mean, I think leadership is really hard.\n\n05:14.700 --> 05:17.240\n It really depends on what you're looking for there.\n\n05:17.240 --> 05:20.240\n I think you really need to know what you're talking about.\n\n05:20.240 --> 05:23.040\n So being grounded on the product, on the technology,\n\n05:23.040 --> 05:26.360\n on the business, on the mission is really important.\n\n05:28.360 --> 05:29.880\n Understanding what people are looking for,\n\n05:29.880 --> 05:30.800\n why they're there.\n\n05:30.800 --> 05:32.440\n One of the most amazing things about Tesla\n\n05:32.440 --> 05:34.680\n is the unifying vision, right?\n\n05:34.680 --> 05:37.280\n People are there because they believe in clean energy\n\n05:37.280 --> 05:39.700\n and electrification, all these kinds of things.\n\n05:39.700 --> 05:42.700\n The other is to understand what really motivates people,\n\n05:42.700 --> 05:43.860\n how to get the best people,\n\n05:43.860 --> 05:46.820\n how to build a plan that actually can be executed, right?\n\n05:46.820 --> 05:48.420\n There's so many different aspects of leadership\n\n05:48.420 --> 05:51.420\n and it really depends on the time, the place, the problems.\n\n05:52.820 --> 05:54.820\n There's a lot of issues that don't need to be solved.\n\n05:54.820 --> 05:57.780\n And so if you focus on the right things and prioritize well,\n\n05:57.780 --> 05:59.380\n that can really help move things.\n\n05:59.380 --> 06:01.140\n Two interesting things you mentioned.\n\n06:01.140 --> 06:03.940\n One is you really have to know what you're talking about.\n\n06:03.940 --> 06:08.940\n How you've worked on your business,\n\n06:08.940 --> 06:12.260\n you've worked on a lot of very challenging technical things.\n\n06:12.260 --> 06:17.260\n So I kind of assume you were born technically savvy,\n\n06:18.000 --> 06:20.760\n but assuming that's not the case,\n\n06:20.760 --> 06:24.980\n how did you develop technical expertise?\n\n06:24.980 --> 06:27.380\n Like even at Google you worked on,\n\n06:27.380 --> 06:28.980\n I don't know how many projects,\n\n06:28.980 --> 06:32.260\n but really challenging, very varied.\n\n06:32.260 --> 06:34.660\n Compilers, TPUs, hardware, cloud stuff,\n\n06:34.660 --> 06:36.420\n bunch of different things.\n\n06:36.420 --> 06:37.780\n The thing that I've become comfortable\n\n06:37.780 --> 06:42.300\n as I've more comfortable with as I've gained experience\n\n06:42.300 --> 06:45.100\n is being okay with not knowing.\n\n06:45.980 --> 06:49.100\n And so a major part of leadership is actually,\n\n06:49.100 --> 06:50.860\n it's not about having the right answer,\n\n06:50.860 --> 06:52.860\n it's about getting the right answer.\n\n06:52.860 --> 06:56.340\n And so if you're working in a team of amazing people, right?\n\n06:56.340 --> 06:58.740\n And many of these places, many of these companies\n\n06:58.740 --> 07:00.320\n all have amazing people.\n\n07:00.320 --> 07:02.100\n It's the question of how do you get people together?\n\n07:02.100 --> 07:04.140\n How do you build trust?\n\n07:04.140 --> 07:05.900\n How do you get people to open up?\n\n07:05.900 --> 07:10.000\n How do you get people to be vulnerable sometimes\n\n07:10.000 --> 07:11.760\n with an idea that maybe isn't good enough,\n\n07:11.760 --> 07:13.880\n but it's the start of something beautiful?\n\n07:13.880 --> 07:17.380\n How do you provide an environment\n\n07:17.380 --> 07:18.820\n where you're not just like top down,\n\n07:18.820 --> 07:21.100\n thou shalt do the thing that I tell you to do, right?\n\n07:21.100 --> 07:23.720\n But you're encouraging people to be part of the solution\n\n07:23.720 --> 07:26.420\n and providing a safe space\n\n07:26.420 --> 07:27.900\n where if you're not doing the right thing,\n\n07:27.900 --> 07:29.660\n they're willing to tell you about it, right?\n\n07:29.660 --> 07:31.420\n So you're asking dumb questions?\n\n07:31.420 --> 07:33.520\n Yeah, dumb questions are my specialty, yeah.\n\n07:33.520 --> 07:35.820\n Well, so I've been in the hardware realm recently\n\n07:35.820 --> 07:39.060\n and I don't know much at all about how chips are designed.\n\n07:39.060 --> 07:40.060\n I know a lot about using them.\n\n07:40.060 --> 07:41.100\n I know some of the principles\n\n07:41.100 --> 07:43.260\n and the art's technical level of this,\n\n07:43.260 --> 07:47.220\n but it turns out that if you ask a lot of dumb questions,\n\n07:47.220 --> 07:48.940\n you get smarter really, really quick.\n\n07:48.940 --> 07:51.040\n And when you're surrounded by people that want to teach\n\n07:51.040 --> 07:54.060\n and learn themselves, it can be a beautiful thing.\n\n07:56.100 --> 07:58.460\n So let's talk about programming languages, if it's okay.\n\n07:58.460 --> 07:59.300\n Sure, sure.\n\n07:59.300 --> 08:01.460\n At the highest absurd philosophical level,\n\n08:01.460 --> 08:02.300\n because I...\n\n08:02.300 --> 08:03.380\n Don't get romantic on me, Lex.\n\n08:03.380 --> 08:08.380\n I will forever get romantic and torture you, I apologize.\n\n08:09.980 --> 08:14.140\n Why do programming languages even matter?\n\n08:14.140 --> 08:15.700\n Okay, well, thank you very much.\n\n08:15.700 --> 08:17.420\n You're saying why should you care\n\n08:17.420 --> 08:18.620\n about any one programming language\n\n08:18.620 --> 08:20.940\n or why do we care about programming computers or?\n\n08:20.940 --> 08:25.180\n No, why do we care about programming language design,\n\n08:25.180 --> 08:27.960\n creating effective programming languages,\n\n08:30.060 --> 08:32.620\n choosing one programming languages\n\n08:32.620 --> 08:34.580\n such as another programming language,\n\n08:34.580 --> 08:37.820\n why we keep struggling and improving\n\n08:37.820 --> 08:39.820\n through the evolution of these programming languages.\n\n08:39.820 --> 08:40.660\n Sure, sure, sure.\n\n08:40.660 --> 08:42.100\n Okay, so I mean, I think you have to come back\n\n08:42.100 --> 08:43.660\n to what are we trying to do here, right?\n\n08:43.660 --> 08:47.120\n So we have these beasts called computers\n\n08:47.120 --> 08:48.820\n that are very good at specific kinds of things\n\n08:48.820 --> 08:52.020\n and we think it's useful to have them do it for us, right?\n\n08:52.020 --> 08:55.540\n Now you have this question of how best to express that\n\n08:55.540 --> 08:57.180\n because you have a human brain still\n\n08:57.180 --> 08:58.860\n that has an idea in its head\n\n08:58.860 --> 09:00.580\n and you want to achieve something, right?\n\n09:00.580 --> 09:03.220\n So, well, there's lots of ways of doing this.\n\n09:03.220 --> 09:04.740\n You can go directly to the machine\n\n09:04.740 --> 09:06.020\n and speak assembly language\n\n09:06.020 --> 09:07.660\n and then you can express directly\n\n09:07.660 --> 09:09.820\n what the computer understands, that's fine.\n\n09:10.740 --> 09:12.840\n You can then have higher and higher and higher levels\n\n09:12.840 --> 09:14.900\n of abstraction up until machine learning\n\n09:14.900 --> 09:18.060\n and you're designing a neural net to do the work for you.\n\n09:18.060 --> 09:21.260\n The question is where along this way do you want to stop\n\n09:21.260 --> 09:23.480\n and what benefits do you get out of doing so?\n\n09:23.480 --> 09:25.300\n And so programming languages in general,\n\n09:25.300 --> 09:30.300\n you have C, you have Fortran, Java and Ada, Pascal, Swift,\n\n09:31.260 --> 09:33.360\n you have lots of different things.\n\n09:33.360 --> 09:34.340\n They'll have different trade offs\n\n09:34.340 --> 09:36.540\n and they're tackling different parts of the problems.\n\n09:36.540 --> 09:39.940\n Now, one of the things that most programming languages do\n\n09:39.940 --> 09:40.820\n is they're trying to make it\n\n09:40.820 --> 09:42.780\n so that you have pretty basic things\n\n09:42.780 --> 09:45.080\n like portability across different hardware.\n\n09:45.080 --> 09:47.660\n So you've got, I'm gonna run on an Intel PC,\n\n09:47.660 --> 09:49.220\n I'm gonna run on a RISC 5 PC,\n\n09:49.220 --> 09:53.500\n I'm gonna run on a ARM phone or something like that, fine.\n\n09:53.500 --> 09:55.580\n I wanna write one program and have it portable.\n\n09:55.580 --> 09:57.780\n And this is something that assembly doesn't do.\n\n09:57.780 --> 09:59.060\n Now, when you start looking\n\n09:59.060 --> 10:00.900\n at the space of programming languages,\n\n10:00.900 --> 10:02.460\n this is where I think it's fun\n\n10:02.460 --> 10:06.180\n because programming languages all have trade offs\n\n10:06.180 --> 10:07.940\n and most people will walk up to them\n\n10:07.940 --> 10:11.000\n and they look at the surface level of syntax and say,\n\n10:11.000 --> 10:13.860\n oh, I like curly braces or I like tabs\n\n10:13.860 --> 10:17.180\n or I like semi colons or not or whatever, right?\n\n10:17.180 --> 10:21.300\n Subjective, fairly subjective, very shallow things.\n\n10:21.300 --> 10:23.180\n But programming languages when done right\n\n10:23.180 --> 10:24.620\n can actually be very powerful.\n\n10:24.620 --> 10:29.380\n And the benefit they bring is expression.\n\n10:30.220 --> 10:32.580\n Okay, and if you look at programming languages,\n\n10:32.580 --> 10:34.420\n there's really kind of two different levels to them.\n\n10:34.420 --> 10:37.940\n One is the down in the dirt, nuts and bolts\n\n10:37.940 --> 10:39.380\n of how do you get the computer to be efficient,\n\n10:39.380 --> 10:40.660\n stuff like that, how they work,\n\n10:40.660 --> 10:43.520\n type systems, compiler stuff, things like that.\n\n10:43.520 --> 10:45.020\n The other is the UI.\n\n10:45.860 --> 10:47.220\n And the UI for programming language\n\n10:47.220 --> 10:48.620\n is really a design problem\n\n10:48.620 --> 10:50.620\n and a lot of people don't think about it that way.\n\n10:50.620 --> 10:53.660\n And the UI, you mean all that stuff with the braces and?\n\n10:53.660 --> 10:55.980\n Yeah, all that stuff's the UI and what it is\n\n10:55.980 --> 10:58.020\n and UI means user interface.\n\n10:58.020 --> 11:00.380\n And so what's really going on is\n\n11:00.380 --> 11:03.220\n it's the interface between the guts and the human.\n\n11:04.340 --> 11:05.860\n And humans are hard, right?\n\n11:05.860 --> 11:09.500\n Humans have feelings, they have things they like,\n\n11:09.500 --> 11:10.700\n they have things they don't like.\n\n11:10.700 --> 11:12.700\n And a lot of people treat programming languages\n\n11:12.700 --> 11:16.300\n as though humans are just kind of abstract creatures\n\n11:16.300 --> 11:17.520\n that cannot be predicted.\n\n11:17.520 --> 11:20.740\n But it turns out that actually there is better and worse.\n\n11:21.620 --> 11:24.960\n Like people can tell when a programming language is good\n\n11:24.960 --> 11:26.860\n or when it was an accident, right?\n\n11:26.860 --> 11:29.340\n And one of the things with Swift in particular\n\n11:29.340 --> 11:30.980\n is that a tremendous amount of time\n\n11:30.980 --> 11:33.260\n by a tremendous number of people\n\n11:33.260 --> 11:36.660\n have been put into really polishing and making it feel good.\n\n11:36.660 --> 11:39.080\n But it also has really good nuts and bolts underneath it.\n\n11:39.080 --> 11:42.480\n You said that Swift makes a lot of people feel good.\n\n11:42.480 --> 11:45.500\n How do you get to that point?\n\n11:45.500 --> 11:50.500\n So how do you predict that tens of thousands,\n\n11:51.660 --> 11:53.620\n hundreds of thousands of people are going to enjoy\n\n11:53.620 --> 11:57.180\n using this user experience of this programming language?\n\n11:57.180 --> 11:59.540\n Well, you can look at it in terms of better and worse, right?\n\n11:59.540 --> 12:01.340\n So if you have to write lots of boilerplate\n\n12:01.340 --> 12:03.540\n or something like that, you will feel unproductive.\n\n12:03.540 --> 12:05.060\n And so that's a bad thing.\n\n12:05.060 --> 12:06.700\n You can look at it in terms of safety.\n\n12:06.700 --> 12:08.140\n If like C for example,\n\n12:08.140 --> 12:10.060\n is what's called a memory unsafe language.\n\n12:10.060 --> 12:11.580\n And so you get dangling pointers\n\n12:11.580 --> 12:13.300\n and you get all these kinds of bugs\n\n12:13.300 --> 12:15.020\n that then you have spent tons of time debugging\n\n12:15.020 --> 12:17.740\n and it's a real pain in the butt and you feel unproductive.\n\n12:17.740 --> 12:19.940\n And so by subtracting these things from the experience,\n\n12:19.940 --> 12:22.620\n you get happier people.\n\n12:22.620 --> 12:25.360\n But again, keep interrupting.\n\n12:25.360 --> 12:27.620\n I'm sorry, but so hard to deal with.\n\n12:29.180 --> 12:31.820\n If you look at the people that are most productive\n\n12:31.820 --> 12:36.820\n on Stack Overflow, they have a set of priorities\n\n12:37.440 --> 12:39.860\n that may not always correlate perfectly\n\n12:39.860 --> 12:43.640\n with the experience of the majority of users.\n\n12:43.640 --> 12:46.260\n If you look at the most upvoted,\n\n12:46.260 --> 12:49.100\n quote unquote, correct answer on Stack Overflow,\n\n12:49.100 --> 12:54.100\n it usually really sort of prioritizes\n\n12:55.460 --> 13:00.460\n like safe code, proper code, stable code,\n\n13:00.820 --> 13:01.860\n you know, that kind of stuff.\n\n13:01.860 --> 13:02.980\n As opposed to like,\n\n13:02.980 --> 13:07.060\n if I wanna use go to statements in my basic, right?\n\n13:08.660 --> 13:09.860\n I wanna use go to statements.\n\n13:09.860 --> 13:12.700\n Like what if 99% of people wanna use go to statements?\n\n13:12.700 --> 13:16.620\n So you use completely improper, you know, unsafe syntax.\n\n13:16.620 --> 13:17.940\n I don't think that people actually,\n\n13:17.940 --> 13:19.460\n like if you boil it down and you get below\n\n13:19.460 --> 13:21.180\n the surface level, people don't actually care\n\n13:21.180 --> 13:24.180\n about go tos or if statements or things like this.\n\n13:24.180 --> 13:26.780\n They care about achieving a goal, right?\n\n13:26.780 --> 13:30.020\n So the real question is I wanna set up a web server\n\n13:30.020 --> 13:32.300\n and I wanna do a thing, whatever.\n\n13:32.300 --> 13:34.300\n Like how quickly can I achieve that, right?\n\n13:34.300 --> 13:36.460\n And so from a programming language perspective,\n\n13:36.460 --> 13:39.060\n there's really two things that matter there.\n\n13:39.060 --> 13:41.980\n One is what libraries exist\n\n13:41.980 --> 13:44.460\n and then how quickly can you put it together\n\n13:44.460 --> 13:47.260\n and what are the tools around that look like, right?\n\n13:47.260 --> 13:49.740\n And when you wanna build a library that's missing,\n\n13:49.740 --> 13:50.580\n what do you do?\n\n13:50.580 --> 13:53.280\n Okay, now this is where you see huge divergence\n\n13:53.280 --> 13:55.820\n in the force between worlds, okay?\n\n13:55.820 --> 13:57.340\n And so you look at Python, for example.\n\n13:57.340 --> 13:59.220\n Python is really good at assembling things,\n\n13:59.220 --> 14:02.500\n but it's not so great at building all the libraries.\n\n14:02.500 --> 14:04.340\n And so what you get because of performance reasons,\n\n14:04.340 --> 14:05.580\n other things like this,\n\n14:05.580 --> 14:09.260\n is you get Python layered on top of C, for example,\n\n14:09.260 --> 14:11.540\n and that means that doing certain kinds of things\n\n14:11.540 --> 14:13.380\n well, it doesn't really make sense to do in Python.\n\n14:13.380 --> 14:15.580\n Instead you do it in C and then you wrap it\n\n14:15.580 --> 14:17.660\n and then you have, you're living in two worlds\n\n14:17.660 --> 14:19.300\n and two worlds never is really great\n\n14:19.300 --> 14:21.900\n because tooling and the debugger doesn't work right\n\n14:21.900 --> 14:23.800\n and like all these kinds of things.\n\n14:23.800 --> 14:25.940\n Can you clarify a little bit what you mean\n\n14:25.940 --> 14:28.580\n by Python is not good at building libraries,\n\n14:28.580 --> 14:30.460\n meaning it doesn't make it conducive.\n\n14:30.460 --> 14:31.540\n Certain kinds of libraries.\n\n14:31.540 --> 14:34.860\n No, but just the actual meaning of the sentence,\n\n14:35.900 --> 14:38.400\n meaning like it's not conducive to developers\n\n14:38.400 --> 14:40.520\n to come in and add libraries\n\n14:40.520 --> 14:44.780\n or is it the duality of the,\n\n14:44.780 --> 14:48.100\n it's a dance between Python and C and...\n\n14:48.100 --> 14:49.460\n Well, so Python's amazing.\n\n14:49.460 --> 14:50.420\n Python's a great language.\n\n14:50.420 --> 14:53.420\n I did not mean to say that Python is bad for libraries.\n\n14:53.420 --> 14:56.820\n What I meant to say is there are libraries\n\n14:56.820 --> 15:00.440\n that Python's really good at that you can write in Python,\n\n15:00.440 --> 15:01.280\n but there are other things,\n\n15:01.280 --> 15:03.600\n like if you wanna build a machine learning framework,\n\n15:03.600 --> 15:05.020\n you're not gonna build a machine learning framework\n\n15:05.020 --> 15:07.380\n in Python because of performance, for example,\n\n15:07.380 --> 15:10.180\n or you want GPU acceleration or things like this.\n\n15:10.180 --> 15:13.260\n Instead, what you do is you write a bunch of C\n\n15:13.260 --> 15:15.300\n or C++ code or something like that,\n\n15:15.300 --> 15:18.460\n and then you talk to it from Python, right?\n\n15:18.460 --> 15:21.100\n And so this is because of decisions\n\n15:21.100 --> 15:23.140\n that were made in the Python design\n\n15:23.140 --> 15:27.140\n and those decisions have other counterbalancing forces.\n\n15:27.140 --> 15:29.880\n But the trick when you start looking at this\n\n15:29.880 --> 15:31.340\n from a programming language perspective,\n\n15:31.340 --> 15:33.220\n you start to say, okay, cool.\n\n15:33.220 --> 15:36.380\n How do I build this catalog of libraries\n\n15:36.380 --> 15:37.860\n that are really powerful?\n\n15:37.860 --> 15:40.520\n And how do I make it so that then they can be assembled\n\n15:40.520 --> 15:42.100\n into ways that feel good\n\n15:42.100 --> 15:44.020\n and they generally work the first time?\n\n15:44.020 --> 15:46.900\n Because when you're talking about building a thing,\n\n15:46.900 --> 15:50.220\n you have to include the debugging, the fixing,\n\n15:50.220 --> 15:51.900\n the turnaround cycle, the development cycle,\n\n15:51.900 --> 15:52.980\n all that kind of stuff\n\n15:53.940 --> 15:56.040\n into the process of building the thing.\n\n15:56.040 --> 15:58.300\n It's not just about pounding out the code.\n\n15:58.300 --> 16:01.300\n And so this is where things like catching bugs\n\n16:01.300 --> 16:04.220\n at compile time is valuable, for example.\n\n16:04.220 --> 16:07.600\n But if you dive into the details in this,\n\n16:07.600 --> 16:10.580\n Swift, for example, has certain things like value semantics,\n\n16:10.580 --> 16:11.980\n which is this fancy way of saying\n\n16:11.980 --> 16:16.440\n that when you treat a variable like a value,\n\n16:18.460 --> 16:21.460\n it acts like a mathematical object would.\n\n16:21.460 --> 16:25.180\n Okay, so you have used PyTorch a little bit.\n\n16:25.180 --> 16:26.620\n In PyTorch, you have tensors.\n\n16:26.620 --> 16:31.620\n Tensors are n dimensional grid of numbers, very simple.\n\n16:31.940 --> 16:34.660\n You can do plus and other operators on them.\n\n16:34.660 --> 16:35.840\n It's all totally fine.\n\n16:35.840 --> 16:38.180\n But why do you need to clone a tensor sometimes?\n\n16:39.140 --> 16:40.820\n Have you ever run into that?\n\n16:40.820 --> 16:41.660\n Yeah.\n\n16:41.660 --> 16:42.780\n Okay, and so why is that?\n\n16:42.780 --> 16:43.900\n Why do you need to clone a tensor?\n\n16:43.900 --> 16:46.820\n It's the usual object thing that's in Python.\n\n16:46.820 --> 16:49.300\n So in Python, and just like with Java\n\n16:49.300 --> 16:51.540\n and many other languages, this isn't unique to Python.\n\n16:51.540 --> 16:53.740\n In Python, it has a thing called reference semantics,\n\n16:53.740 --> 16:55.700\n which is the nerdy way of explaining this.\n\n16:55.700 --> 16:58.060\n And what that means is you actually have a pointer\n\n16:58.060 --> 17:01.080\n do a thing instead of the thing, okay?\n\n17:01.080 --> 17:05.220\n Now, this is due to a bunch of implementation details\n\n17:05.220 --> 17:06.780\n that you don't want to go into.\n\n17:06.780 --> 17:09.540\n But in Swift, you have this thing called value semantics.\n\n17:09.540 --> 17:12.140\n And so when you have a tensor in Swift, it is a value.\n\n17:12.140 --> 17:15.060\n If you copy it, it looks like you have a unique copy.\n\n17:15.060 --> 17:16.780\n And if you go change one of those copies,\n\n17:16.780 --> 17:19.340\n then it doesn't update the other one\n\n17:19.340 --> 17:21.420\n because you just made a copy of this thing, right?\n\n17:21.420 --> 17:24.300\n So that's like highly error prone\n\n17:24.300 --> 17:29.180\n in at least computer science, math centric disciplines\n\n17:29.180 --> 17:33.520\n about Python, that like the thing you would expect\n\n17:33.520 --> 17:35.420\n to behave like math.\n\n17:35.420 --> 17:38.260\n Like math, it doesn't behave like math.\n\n17:38.260 --> 17:41.660\n And in fact, quietly it doesn't behave like math\n\n17:41.660 --> 17:43.220\n and then can ruin the entirety of your math thing.\n\n17:43.220 --> 17:44.060\n Exactly.\n\n17:44.060 --> 17:45.980\n Well, and then it puts you in debugging land again.\n\n17:45.980 --> 17:46.820\n Yeah.\n\n17:46.820 --> 17:48.580\n Right now, you just want to get something done\n\n17:48.580 --> 17:51.500\n and you're like, wait a second, where do I need to put clone?\n\n17:51.500 --> 17:54.180\n And what level of the stack, which is very complicated,\n\n17:54.180 --> 17:56.780\n which I thought I was reusing somebody's library\n\n17:56.780 --> 17:57.860\n and now I need to understand it\n\n17:57.860 --> 17:59.620\n to know where to clone a thing, right?\n\n17:59.620 --> 18:01.280\n And hard to debug, by the way.\n\n18:01.280 --> 18:02.120\n Exactly, right.\n\n18:02.120 --> 18:04.340\n And so this is where programming languages really matter.\n\n18:04.340 --> 18:06.300\n Right, and so in Swift having value semantics\n\n18:06.300 --> 18:10.300\n so that both you get the benefit of math,\n\n18:10.300 --> 18:12.340\n working like math, right?\n\n18:12.340 --> 18:15.120\n But also the efficiency that comes with certain advantages\n\n18:15.120 --> 18:17.340\n there, certain implementation details there\n\n18:17.340 --> 18:18.860\n really benefit you as a programmer, right?\n\n18:18.860 --> 18:20.620\n Can you clarify the value semantics?\n\n18:20.620 --> 18:22.900\n Like how do you know that a thing should be treated\n\n18:22.900 --> 18:23.740\n like a value?\n\n18:23.740 --> 18:27.740\n Yeah, so Swift has a pretty strong culture\n\n18:27.740 --> 18:30.420\n and good language support for defining values.\n\n18:30.420 --> 18:31.960\n And so if you have an array,\n\n18:31.960 --> 18:34.860\n so tensors are one example that the machine learning folks\n\n18:34.860 --> 18:36.500\n are very used to.\n\n18:36.500 --> 18:38.280\n Just think about arrays, same thing,\n\n18:38.280 --> 18:41.640\n where you have an array, you create an array,\n\n18:41.640 --> 18:43.900\n you put two or three or four things into it,\n\n18:43.900 --> 18:46.940\n and then you pass it off to another function.\n\n18:46.940 --> 18:51.380\n What happens if that function adds some more things to it?\n\n18:51.380 --> 18:54.300\n Well, you'll see it on the side that you pass it in, right?\n\n18:54.300 --> 18:56.680\n This is called reference semantics.\n\n18:56.680 --> 19:01.220\n Now, what if you pass an array off to a function,\n\n19:01.220 --> 19:02.860\n it scrolls it away in some dictionary\n\n19:02.860 --> 19:04.880\n or some other data structure somewhere, right?\n\n19:04.880 --> 19:07.980\n Well, it thought that you just handed it that array,\n\n19:07.980 --> 19:10.780\n then you return back and that reference to that array\n\n19:10.780 --> 19:12.820\n still exists in the caller,\n\n19:12.820 --> 19:15.780\n and they go and put more stuff in it, right?\n\n19:15.780 --> 19:17.860\n The person you handed it off to\n\n19:17.860 --> 19:20.260\n may have thought they had the only reference to that,\n\n19:20.260 --> 19:22.860\n and so they didn't know that this was gonna change\n\n19:22.860 --> 19:23.940\n underneath the covers.\n\n19:23.940 --> 19:26.220\n And so this is where you end up having to do clone.\n\n19:26.220 --> 19:27.820\n So like I was passed a thing,\n\n19:27.820 --> 19:30.240\n I'm not sure if I have the only version of it,\n\n19:30.240 --> 19:32.260\n so now I have to clone it.\n\n19:32.260 --> 19:34.680\n So what value semantics does is it allows you to say,\n\n19:34.680 --> 19:38.380\n hey, I have a, so in Swift, it defaults to value semantics.\n\n19:38.380 --> 19:40.260\n Oh, so it defaults to value semantics,\n\n19:40.260 --> 19:42.460\n and then because most things\n\n19:42.460 --> 19:44.100\n should end up being like values,\n\n19:44.100 --> 19:46.100\n then it makes sense for that to be the default.\n\n19:46.100 --> 19:47.240\n And one of the important things about that\n\n19:47.240 --> 19:48.740\n is that arrays and dictionaries\n\n19:48.740 --> 19:49.940\n and all these other collections\n\n19:49.940 --> 19:51.300\n that are aggregations of other things\n\n19:51.300 --> 19:53.020\n also have value semantics.\n\n19:53.020 --> 19:55.060\n And so when you pass this around\n\n19:55.060 --> 19:56.680\n to different parts of your program,\n\n19:56.680 --> 19:59.180\n you don't have to do these defensive copies.\n\n19:59.180 --> 20:01.260\n And so this is great for two sides, right?\n\n20:01.260 --> 20:04.220\n It's great because you define away the bug,\n\n20:04.220 --> 20:05.980\n which is a big deal for productivity,\n\n20:05.980 --> 20:08.220\n the number one thing most people care about,\n\n20:08.220 --> 20:09.740\n but it's also good for performance\n\n20:09.740 --> 20:11.580\n because when you're doing a clone,\n\n20:11.580 --> 20:13.460\n so you pass the array down to the thing,\n\n20:13.460 --> 20:15.420\n it's like, I don't know if anybody else has it,\n\n20:15.420 --> 20:16.620\n I have to clone it.\n\n20:16.620 --> 20:18.460\n Well, you just did a copy of a bunch of data.\n\n20:18.460 --> 20:19.940\n It could be big.\n\n20:19.940 --> 20:21.980\n And then it could be that the thing that called you\n\n20:21.980 --> 20:24.020\n is not keeping track of the old thing.\n\n20:24.020 --> 20:25.700\n So you just made a copy of it,\n\n20:25.700 --> 20:27.800\n and you may not have had to.\n\n20:27.800 --> 20:30.180\n And so the way the value semantics work in Swift\n\n20:30.180 --> 20:32.060\n is it uses this thing called copy on write,\n\n20:32.060 --> 20:35.500\n which means that you get the benefit of safety\n\n20:35.500 --> 20:36.420\n and performance.\n\n20:36.420 --> 20:38.340\n And it has another special trick\n\n20:38.340 --> 20:41.180\n because if you think certain languages like Java,\n\n20:41.180 --> 20:43.940\n for example, they have immutable strings.\n\n20:43.940 --> 20:44.940\n And so what they're trying to do\n\n20:44.940 --> 20:46.400\n is they provide value semantics\n\n20:46.400 --> 20:48.980\n by having pure immutability.\n\n20:48.980 --> 20:51.060\n Functional languages have pure immutability\n\n20:51.060 --> 20:52.300\n in lots of different places,\n\n20:52.300 --> 20:53.960\n and this provides a much safer model\n\n20:53.960 --> 20:56.140\n and it provides value semantics.\n\n20:56.140 --> 20:58.380\n The problem with this is if you have immutability,\n\n20:58.380 --> 20:59.500\n everything is expensive.\n\n20:59.500 --> 21:00.980\n Everything requires a copy.\n\n21:02.420 --> 21:05.420\n For example, in Java, if you have a string X\n\n21:05.420 --> 21:07.900\n and a string Y, you append them together,\n\n21:07.900 --> 21:11.060\n we have to allocate a new string to hold X, Y.\n\n21:12.180 --> 21:13.720\n If they're immutable.\n\n21:13.720 --> 21:16.900\n Well, strings in Java are immutable.\n\n21:16.900 --> 21:19.580\n And if there's optimizations for short ones,\n\n21:19.580 --> 21:22.820\n it's complicated, but generally think about them\n\n21:22.820 --> 21:24.580\n as a separate allocation.\n\n21:24.580 --> 21:26.620\n And so when you append them together,\n\n21:26.620 --> 21:28.580\n you have to go allocate a third thing\n\n21:28.580 --> 21:29.660\n because somebody might have a pointer\n\n21:29.660 --> 21:31.060\n to either of the other ones, right?\n\n21:31.060 --> 21:32.060\n And you can't go change them.\n\n21:32.060 --> 21:34.700\n So you have to go allocate a third thing.\n\n21:34.700 --> 21:36.740\n Because of the beauty of how the Swift value semantics\n\n21:36.740 --> 21:38.780\n system works out, if you have a string in Swift\n\n21:38.780 --> 21:40.980\n and you say, hey, put in X, right?\n\n21:40.980 --> 21:43.720\n And they say, append on Y, Z, W,\n\n21:44.980 --> 21:47.500\n it knows that there's only one reference to that.\n\n21:47.500 --> 21:49.300\n And so it can do an in place update.\n\n21:50.220 --> 21:53.420\n And so you're not allocating tons of stuff on the side.\n\n21:53.420 --> 21:54.620\n You don't have all those problems.\n\n21:54.620 --> 21:56.040\n When you pass it off,\n\n21:56.040 --> 21:57.520\n you can know you have the only reference.\n\n21:57.520 --> 21:59.340\n If you pass it off to multiple different people,\n\n21:59.340 --> 22:02.620\n but nobody changes it, they can all share the same thing.\n\n22:02.620 --> 22:05.780\n So you get a lot of the benefit of purely immutable design.\n\n22:05.780 --> 22:07.640\n And so you get a really nice sweet spot\n\n22:07.640 --> 22:09.300\n that I haven't seen in other languages.\n\n22:09.300 --> 22:10.540\n Yeah, that's interesting.\n\n22:10.540 --> 22:15.540\n I thought there was going to be a philosophical narrative\n\n22:15.780 --> 22:19.420\n here that you're gonna have to pay a cost for it.\n\n22:19.420 --> 22:24.420\n Cause it sounds like, I think value semantics\n\n22:24.500 --> 22:27.440\n is beneficial for easing of debugging\n\n22:27.440 --> 22:30.980\n or minimizing the risk of errors,\n\n22:30.980 --> 22:34.220\n like bringing the errors closer to the source,\n\n22:35.780 --> 22:38.180\n bringing the symptom of the error closer\n\n22:38.180 --> 22:40.840\n to the source of the error, however you say that.\n\n22:40.840 --> 22:44.980\n But you're saying there's not a performance cost either\n\n22:44.980 --> 22:46.300\n if you implement it correctly.\n\n22:46.300 --> 22:48.300\n Well, so there's trade offs with everything.\n\n22:48.300 --> 22:51.860\n And so if you are doing very low level stuff,\n\n22:51.860 --> 22:53.180\n then sometimes you can notice a cost,\n\n22:53.180 --> 22:54.880\n but then what you're doing is you're saying,\n\n22:54.880 --> 22:56.540\n what is the right default?\n\n22:56.540 --> 22:59.100\n So coming back to user interface,\n\n22:59.100 --> 23:00.740\n when you talk about programming languages,\n\n23:00.740 --> 23:03.000\n one of the major things that Swift does\n\n23:03.000 --> 23:04.500\n that makes people love it,\n\n23:04.500 --> 23:08.220\n that is not obvious when it comes to designing a language\n\n23:08.220 --> 23:11.460\n is this UI principle of progressive disclosure\n\n23:11.460 --> 23:12.980\n of complexity.\n\n23:12.980 --> 23:16.700\n Okay, so Swift, like many languages is very powerful.\n\n23:16.700 --> 23:18.420\n The question is, when do you have to learn\n\n23:18.420 --> 23:19.500\n the power as a user?\n\n23:20.820 --> 23:22.980\n So Swift, like Python, allows you to start with like,\n\n23:22.980 --> 23:24.940\n print hello world, right?\n\n23:24.940 --> 23:26.920\n Certain other languages start with like,\n\n23:26.920 --> 23:29.020\n public static void main class,\n\n23:30.580 --> 23:32.140\n like all the ceremony, right?\n\n23:32.140 --> 23:34.620\n And so you go to teach a new person,\n\n23:34.620 --> 23:36.780\n hey, welcome to this new thing.\n\n23:36.780 --> 23:40.300\n Let's talk about public access control classes.\n\n23:40.300 --> 23:41.140\n Wait, what's that?\n\n23:41.140 --> 23:44.740\n String system.out.println, like packages,\n\n23:44.740 --> 23:46.700\n like, God, right?\n\n23:46.700 --> 23:48.700\n And so instead, if you take this and you say,\n\n23:48.700 --> 23:51.740\n hey, we need packages, modules,\n\n23:51.740 --> 23:54.220\n we need powerful things like classes,\n\n23:54.220 --> 23:57.380\n we need data structures, we need like all these things.\n\n23:57.380 --> 23:59.420\n The question is, how do you factor the complexity?\n\n23:59.420 --> 24:02.820\n And how do you make it so that the normal case scenario\n\n24:02.820 --> 24:05.620\n is you're dealing with things that work the right way\n\n24:05.620 --> 24:07.940\n in the right way, give you good performance\n\n24:07.940 --> 24:11.140\n by default, but then as a power user,\n\n24:11.140 --> 24:12.340\n if you want to dive down to it,\n\n24:12.340 --> 24:15.140\n you have full C performance, full control\n\n24:15.140 --> 24:15.980\n over low level pointers.\n\n24:15.980 --> 24:18.340\n You can call malloc if you want to call malloc.\n\n24:18.340 --> 24:20.780\n This is not recommended on the first page of every tutorial,\n\n24:20.780 --> 24:22.300\n but it's actually really important\n\n24:22.300 --> 24:23.780\n when you want to get work done, right?\n\n24:23.780 --> 24:27.460\n And so being able to have that is really the design\n\n24:27.460 --> 24:28.820\n in programming language design,\n\n24:28.820 --> 24:31.300\n and design is really, really hard.\n\n24:31.300 --> 24:34.940\n It's something that I think a lot of people kind of,\n\n24:34.940 --> 24:37.900\n outside of UI, again, a lot of people just think\n\n24:37.900 --> 24:40.940\n is subjective, like there's nothing,\n\n24:40.940 --> 24:43.620\n you know, it's just like curly braces or whatever.\n\n24:43.620 --> 24:45.340\n It's just like somebody's preference,\n\n24:45.340 --> 24:48.740\n but actually good design is something that you can feel.\n\n24:48.740 --> 24:52.100\n And how many people are involved with good design?\n\n24:52.100 --> 24:54.860\n So if we looked at Swift, but look at historically,\n\n24:54.860 --> 24:57.340\n I mean, this might touch like,\n\n24:57.340 --> 24:59.700\n it's almost like a Steve Jobs question too,\n\n24:59.700 --> 25:04.100\n like how much dictatorial decision making is required\n\n25:04.100 --> 25:09.100\n versus collaborative, and we'll talk about\n\n25:09.100 --> 25:11.700\n how all that can go wrong or right, but.\n\n25:11.700 --> 25:14.340\n Yeah, well, Swift, so I can't speak to in general,\n\n25:14.340 --> 25:15.540\n all design everywhere.\n\n25:15.540 --> 25:19.740\n So the way it works with Swift is that there's a core team,\n\n25:19.740 --> 25:22.460\n and so a core team is six or seven people ish,\n\n25:22.460 --> 25:25.020\n something like that, that is people that have been working\n\n25:25.020 --> 25:27.100\n with Swift since very early days, and so.\n\n25:27.100 --> 25:30.060\n And by early days is not that long ago.\n\n25:30.060 --> 25:33.580\n Okay, yeah, so it became public in 2014,\n\n25:33.580 --> 25:35.500\n so it's been six years public now,\n\n25:35.500 --> 25:38.820\n but so that's enough time that there's a story arc there.\n\n25:38.820 --> 25:41.940\n Okay, yeah, and there's mistakes have been made\n\n25:41.940 --> 25:43.700\n that then get fixed, and you learn something,\n\n25:43.700 --> 25:46.980\n and then you, you know, and so what the core team does\n\n25:46.980 --> 25:50.420\n is it provides continuity, and so you wanna have a,\n\n25:50.420 --> 25:54.020\n okay, well, there's a big hole that we wanna fill.\n\n25:54.020 --> 25:56.900\n We know we wanna fill it, so don't do other things\n\n25:56.900 --> 25:59.940\n that invade that space until we fill the hole, right?\n\n25:59.940 --> 26:01.100\n There's a boulder that's missing here,\n\n26:01.100 --> 26:03.060\n we wanna do, we will do that boulder,\n\n26:03.060 --> 26:06.100\n even though it's not today, keep out of that space.\n\n26:06.100 --> 26:10.340\n And the whole team remembers the myth of the boulder\n\n26:10.340 --> 26:11.180\n that's there.\n\n26:11.180 --> 26:12.540\n Yeah, yeah, there's a general sense\n\n26:12.540 --> 26:14.460\n of what the future looks like in broad strokes,\n\n26:14.460 --> 26:16.460\n and a shared understanding of that,\n\n26:16.460 --> 26:18.780\n combined with a shared understanding of what has happened\n\n26:18.780 --> 26:22.100\n in the past that worked out well and didn't work out well.\n\n26:22.100 --> 26:24.260\n The next level out is you have the,\n\n26:24.260 --> 26:25.820\n what's called the Swift evolution community,\n\n26:25.820 --> 26:27.700\n and you've got, in that case, hundreds of people\n\n26:27.700 --> 26:30.980\n that really care passionately about the way Swift evolves,\n\n26:30.980 --> 26:33.900\n and that's like an amazing thing to, again,\n\n26:33.900 --> 26:35.540\n the core team doesn't necessarily need to come up\n\n26:35.540 --> 26:36.820\n with all the good ideas.\n\n26:36.820 --> 26:38.060\n You got hundreds of people out there\n\n26:38.060 --> 26:39.020\n that care about something,\n\n26:39.020 --> 26:41.100\n and they come up with really good ideas too,\n\n26:41.100 --> 26:45.180\n and that provides this rock tumbler for ideas.\n\n26:45.180 --> 26:48.780\n And so the evolution process is,\n\n26:48.780 --> 26:50.380\n a lot of people in a discourse forum,\n\n26:50.380 --> 26:52.100\n they're like hashing it out and trying to talk about,\n\n26:52.100 --> 26:54.100\n okay, well, should we go left or right,\n\n26:54.100 --> 26:55.700\n or if we did this, what would be good?\n\n26:55.700 --> 26:57.700\n And here you're talking about hundreds of people,\n\n26:57.700 --> 27:00.380\n so you're not gonna get consensus, necessarily,\n\n27:00.380 --> 27:04.620\n not obvious consensus, and so there's a proposal process\n\n27:04.620 --> 27:07.660\n that then allows the core team and the community\n\n27:07.660 --> 27:10.020\n to work this out, and what the core team does\n\n27:10.020 --> 27:12.820\n is it aims to get consensus out of the community\n\n27:12.820 --> 27:17.420\n and provide guardrails, but also provide long term,\n\n27:17.420 --> 27:20.380\n make sure we're going the right direction kind of things.\n\n27:20.380 --> 27:23.540\n So does that group represent like the,\n\n27:23.540 --> 27:27.420\n how much people will love the user interface?\n\n27:27.420 --> 27:29.420\n Like, do you think they're able to capture that?\n\n27:29.420 --> 27:31.020\n Well, I mean, it's something we talk about a lot,\n\n27:31.020 --> 27:32.340\n it's something we care about.\n\n27:32.340 --> 27:34.780\n How well we do that's up for debate,\n\n27:34.780 --> 27:36.780\n but I think that we've done pretty well so far.\n\n27:36.780 --> 27:38.540\n Is the beginner in mind?\n\n27:38.540 --> 27:39.380\n Yeah. Like, because you said\n\n27:39.380 --> 27:40.780\n the progressive disclosure complexity.\n\n27:40.780 --> 27:44.180\n Yeah, so we care a lot about that,\n\n27:44.180 --> 27:46.420\n a lot about power, a lot about efficiency,\n\n27:46.420 --> 27:48.700\n a lot about, there are many factors to good design,\n\n27:48.700 --> 27:50.100\n and you have to figure out a way\n\n27:50.100 --> 27:53.300\n to kind of work your way through that, and.\n\n27:53.300 --> 27:57.540\n So if you think about, like the language I love is Lisp,\n\n27:57.540 --> 27:59.340\n probably still because I use Emacs,\n\n27:59.340 --> 28:02.180\n but I haven't done anything, any serious work in Lisp,\n\n28:02.180 --> 28:05.020\n but it has a ridiculous amount of parentheses.\n\n28:05.020 --> 28:06.540\n Yeah.\n\n28:06.540 --> 28:11.540\n I've also, you know, with Java and C++, the braces,\n\n28:14.300 --> 28:17.500\n you know, I like, I enjoyed the comfort\n\n28:17.500 --> 28:20.580\n of being between braces, you know?\n\n28:20.580 --> 28:21.420\n Yeah, yeah, well, let's talk.\n\n28:21.420 --> 28:23.140\n And then Python is, sorry to interrupt,\n\n28:23.140 --> 28:25.740\n just like, and last thing to me, as a designer,\n\n28:25.740 --> 28:28.740\n if I was a language designer, God forbid,\n\n28:28.740 --> 28:33.740\n is I would be very surprised that Python with no braces\n\n28:34.020 --> 28:38.220\n would nevertheless somehow be comforting also.\n\n28:38.220 --> 28:40.620\n So like, I could see arguments for all of this.\n\n28:40.620 --> 28:41.940\n But look at this, this is evidence\n\n28:41.940 --> 28:44.260\n that it's not about braces versus tabs.\n\n28:44.260 --> 28:47.020\n Right, exactly, you're good, that's a good point.\n\n28:47.020 --> 28:50.020\n Right, so like, you know, there's evidence that.\n\n28:50.020 --> 28:52.380\n But see, like, it's one of the most argued about things.\n\n28:52.380 --> 28:54.140\n Oh yeah, of course, just like tabs and spaces,\n\n28:54.140 --> 28:57.180\n which it doesn't, I mean, there's one obvious right answer,\n\n28:57.180 --> 28:59.140\n but it doesn't actually matter.\n\n28:59.140 --> 28:59.980\n What's that?\n\n28:59.980 --> 29:01.780\n Let's not, like, come on, we're friends.\n\n29:01.780 --> 29:03.460\n Like, come on, what are you trying to do to me here?\n\n29:03.460 --> 29:05.500\n People are gonna, yeah, half the people are gonna tune out.\n\n29:05.500 --> 29:09.420\n Yeah, so these, so you're able to identify things\n\n29:09.420 --> 29:12.620\n that don't really matter for the experience.\n\n29:12.620 --> 29:14.780\n Well, no, no, no, it's always a really hard,\n\n29:14.780 --> 29:16.900\n so the easy decisions are easy, right?\n\n29:16.900 --> 29:19.540\n I mean, fine, those are not the interesting ones.\n\n29:19.540 --> 29:21.780\n The hard ones are the ones that are most interesting, right?\n\n29:21.780 --> 29:23.580\n The hard ones are the places where,\n\n29:23.580 --> 29:27.020\n hey, we wanna do a thing, everybody agrees we should do it,\n\n29:27.020 --> 29:28.900\n there's one proposal on the table,\n\n29:28.900 --> 29:31.580\n but it has all these bad things associated with it.\n\n29:31.580 --> 29:33.740\n Well, okay, what are we gonna do about that?\n\n29:33.740 --> 29:34.980\n Do we just take it?\n\n29:34.980 --> 29:36.260\n Do we delay it?\n\n29:36.260 --> 29:38.500\n Do we say, hey, well, maybe there's this other feature\n\n29:38.500 --> 29:41.500\n that if we do that first, this will work out better.\n\n29:41.500 --> 29:44.060\n How does this, if we do this,\n\n29:44.060 --> 29:46.180\n are we paying ourselves into a corner, right?\n\n29:46.180 --> 29:47.340\n And so this is where, again,\n\n29:47.340 --> 29:48.580\n you're having that core team of people\n\n29:48.580 --> 29:51.660\n that has some continuity and has perspective,\n\n29:51.660 --> 29:53.620\n has some of the historical understanding,\n\n29:53.620 --> 29:56.100\n is really valuable because you get,\n\n29:56.100 --> 29:57.180\n it's not just like one brain,\n\n29:57.180 --> 29:59.220\n you get the power of multiple people coming together\n\n29:59.220 --> 30:00.100\n to make good decisions,\n\n30:00.100 --> 30:02.500\n and then you get the best out of all these people,\n\n30:02.500 --> 30:06.300\n and you also can harness the community around it.\n\n30:06.300 --> 30:09.380\n And what about the decision of whether in Python\n\n30:09.380 --> 30:14.140\n having one type or having strict typing?\n\n30:14.140 --> 30:15.100\n Yeah, okay.\n\n30:15.100 --> 30:16.060\n Yeah, let's talk about this.\n\n30:16.060 --> 30:19.580\n So I like how you put that, by the way.\n\n30:19.580 --> 30:21.900\n So many people would say that Python doesn't have types.\n\n30:21.900 --> 30:22.900\n Doesn't have types, yeah.\n\n30:22.900 --> 30:23.740\n But you're right.\n\n30:23.740 --> 30:26.660\n I haven't listened to you enough to where,\n\n30:26.660 --> 30:29.940\n I'm a fan of yours and I've listened to way too many\n\n30:29.940 --> 30:32.460\n podcasts and videos of you talking about this stuff.\n\n30:32.460 --> 30:34.780\n Oh yeah, so I would argue that Python has one type.\n\n30:34.780 --> 30:38.180\n And so like when you import Python into Swift,\n\n30:38.180 --> 30:39.780\n which by the way works really well,\n\n30:39.780 --> 30:41.820\n you have everything comes in as a Python object.\n\n30:41.820 --> 30:43.980\n Now here are their trade offs because\n\n30:46.220 --> 30:47.460\n it depends on what you're optimizing for.\n\n30:47.460 --> 30:49.300\n And Python is a super successful language\n\n30:49.300 --> 30:51.060\n for a really good reason.\n\n30:51.060 --> 30:52.740\n Because it has one type,\n\n30:52.740 --> 30:55.340\n you get duck typing for free and things like this.\n\n30:55.340 --> 30:56.940\n But also you're pushing,\n\n30:56.940 --> 31:00.580\n you're making it very easy to pound out code on one hand,\n\n31:00.580 --> 31:03.580\n but you're also making it very easy to introduce\n\n31:03.580 --> 31:05.260\n complicated bugs that you have to debug.\n\n31:05.260 --> 31:08.180\n And you pass a string into something that expects an integer\n\n31:08.180 --> 31:10.220\n and it doesn't immediately die.\n\n31:10.220 --> 31:12.060\n It goes all the way down the stack trace\n\n31:12.060 --> 31:13.460\n and you find yourself in the middle of some code\n\n31:13.460 --> 31:14.900\n that you really didn't want to know anything about.\n\n31:14.900 --> 31:16.420\n And it blows up and you're just saying,\n\n31:16.420 --> 31:18.180\n well, what did I do wrong, right?\n\n31:18.180 --> 31:21.740\n And so types are good and bad and they have trade offs.\n\n31:21.740 --> 31:23.620\n They're good for performance and certain other things\n\n31:23.620 --> 31:24.740\n depending on where you're coming from,\n\n31:24.740 --> 31:26.340\n but it's all about trade offs.\n\n31:26.340 --> 31:28.580\n And so this is what design is, right?\n\n31:28.580 --> 31:30.220\n Design is about weighing trade offs\n\n31:30.220 --> 31:32.580\n and trying to understand the ramifications\n\n31:32.580 --> 31:34.300\n of the things that you're weighing,\n\n31:34.300 --> 31:37.300\n like types or not, or one type or many types.\n\n31:38.660 --> 31:39.820\n But also within many types,\n\n31:39.820 --> 31:41.740\n how powerful do you make that type system\n\n31:41.740 --> 31:44.500\n is another very complicated question\n\n31:44.500 --> 31:45.380\n with lots of trade offs.\n\n31:45.380 --> 31:47.540\n It's very interesting by the way,\n\n31:47.540 --> 31:52.540\n but that's like one dimension and there's a bunch\n\n31:52.620 --> 31:55.260\n of other dimensions, JIT compiled versus static compiled,\n\n31:55.260 --> 31:57.820\n garbage collected versus reference counted\n\n31:57.820 --> 32:00.900\n versus manual memory management versus,\n\n32:00.900 --> 32:02.980\n like in like all these different trade offs\n\n32:02.980 --> 32:03.820\n and how you balance them\n\n32:03.820 --> 32:05.580\n are what make a program language good.\n\n32:05.580 --> 32:06.820\n Concurrency.\n\n32:06.820 --> 32:07.660\n Yeah.\n\n32:07.660 --> 32:09.860\n So in all those things, I guess,\n\n32:09.860 --> 32:11.300\n when you're designing the language,\n\n32:11.300 --> 32:13.020\n you also have to think of how that's gonna get\n\n32:13.020 --> 32:15.220\n all compiled down to.\n\n32:15.220 --> 32:17.420\n If you care about performance, yeah.\n\n32:17.420 --> 32:18.780\n Well, and go back to Lisp, right?\n\n32:18.780 --> 32:20.940\n So Lisp also, I would say JavaScript\n\n32:20.940 --> 32:24.100\n is another example of a very simple language, right?\n\n32:24.100 --> 32:27.220\n And so one of the, so I also love Lisp.\n\n32:27.220 --> 32:29.780\n I don't use it as much as maybe you do or you did.\n\n32:29.780 --> 32:32.500\n No, I think we're both, everyone who loves Lisp,\n\n32:32.500 --> 32:35.140\n it's like, you love, it's like, I don't know,\n\n32:35.140 --> 32:36.260\n I love Frank Sinatra,\n\n32:36.260 --> 32:39.180\n but like how often do I seriously listen to Frank Sinatra?\n\n32:39.180 --> 32:40.020\n Sure, sure.\n\n32:40.020 --> 32:42.780\n But you look at that or you look at JavaScript,\n\n32:42.780 --> 32:44.100\n which is another very different,\n\n32:44.100 --> 32:45.980\n but relatively simple language.\n\n32:45.980 --> 32:47.740\n And there are certain things that don't exist\n\n32:47.740 --> 32:49.140\n in the language,\n\n32:49.140 --> 32:51.900\n but there is inherent complexity to the problems\n\n32:51.900 --> 32:53.140\n that we're trying to model.\n\n32:53.140 --> 32:54.660\n And so what happens to the complexity?\n\n32:54.660 --> 32:57.220\n In the case of both of them, for example,\n\n32:57.220 --> 33:00.100\n you say, well, what about large scale software development?\n\n33:00.100 --> 33:02.380\n Okay, well, you need something like packages.\n\n33:02.380 --> 33:05.780\n Neither language has a language affordance for packages.\n\n33:05.780 --> 33:07.420\n And so what you get is patterns.\n\n33:07.420 --> 33:08.700\n You get things like NPN.\n\n33:08.700 --> 33:12.060\n You get things like these ecosystems that get built around.\n\n33:12.060 --> 33:15.140\n And I'm a believer that if you don't model\n\n33:15.140 --> 33:17.740\n at least the most important inherent complexity\n\n33:17.740 --> 33:18.740\n in the language,\n\n33:18.740 --> 33:19.620\n then what ends up happening\n\n33:19.620 --> 33:21.740\n is that complexity gets pushed elsewhere.\n\n33:22.740 --> 33:24.100\n And when it gets pushed elsewhere,\n\n33:24.100 --> 33:26.580\n sometimes that's great because often building things\n\n33:26.580 --> 33:28.900\n as libraries is very flexible and very powerful\n\n33:28.900 --> 33:30.700\n and allows you to evolve and things like that.\n\n33:30.700 --> 33:34.020\n But often it leads to a lot of unnecessary divergence\n\n33:34.020 --> 33:35.580\n in the force and fragmentation.\n\n33:35.580 --> 33:39.540\n And when that happens, you just get kind of a mess.\n\n33:39.540 --> 33:42.940\n And so the question is, how do you balance that?\n\n33:42.940 --> 33:44.260\n Don't put too much stuff in the language\n\n33:44.260 --> 33:45.220\n because that's really expensive\n\n33:45.220 --> 33:46.740\n and it makes things complicated.\n\n33:46.740 --> 33:49.620\n But how do you model enough of the inherent complexity\n\n33:49.620 --> 33:52.380\n of the problem that you provide the framework\n\n33:52.380 --> 33:54.860\n and the structure for people to think about?\n\n33:54.860 --> 33:57.220\n Well, so the key thing to think about\n\n33:57.220 --> 33:59.060\n with programming languages,\n\n33:59.060 --> 34:01.340\n and you think about what a programming language is therefore,\n\n34:01.340 --> 34:04.220\n is it's about making a human more productive, right?\n\n34:04.220 --> 34:07.100\n And so there's an old, I think it's Steve Jobs quote\n\n34:07.100 --> 34:10.420\n about it's a bicycle for the mind, right?\n\n34:10.420 --> 34:13.020\n You can definitely walk,\n\n34:13.020 --> 34:15.260\n but you'll get there a lot faster\n\n34:15.260 --> 34:17.540\n if you can bicycle on your way.\n\n34:17.540 --> 34:18.380\n And...\n\n34:18.380 --> 34:20.140\n A programming language is a bicycle for the mind?\n\n34:20.140 --> 34:20.980\n Yeah.\n\n34:20.980 --> 34:22.140\n Is it basically, wow,\n\n34:22.140 --> 34:23.900\n that's really interesting way to think about it.\n\n34:23.900 --> 34:25.540\n By raising the level of abstraction,\n\n34:25.540 --> 34:27.380\n now you can fit more things in your head.\n\n34:27.380 --> 34:30.100\n By being able to just directly leverage somebody's library,\n\n34:30.100 --> 34:33.420\n you can now get something done quickly.\n\n34:33.420 --> 34:36.180\n In the case of Swift, Swift UI is this new framework\n\n34:36.180 --> 34:39.780\n that Apple has released recently for doing UI programming.\n\n34:39.780 --> 34:42.980\n And it has this declarative programming model,\n\n34:42.980 --> 34:45.660\n which defines away entire classes of bugs.\n\n34:45.660 --> 34:48.820\n It builds on value semantics and many other nice Swift things.\n\n34:48.820 --> 34:51.620\n And what this does is it allows you to just get way more done\n\n34:51.620 --> 34:53.260\n with way less code.\n\n34:53.260 --> 34:56.580\n And now your productivity as a developer is much higher,\n\n34:56.580 --> 34:57.420\n right?\n\n34:57.420 --> 34:59.420\n And so that's really what programming languages\n\n34:59.420 --> 35:00.260\n should be about,\n\n35:00.260 --> 35:01.780\n is it's not about tabs versus spaces\n\n35:01.780 --> 35:03.300\n or curly braces or whatever.\n\n35:03.300 --> 35:05.380\n It's about how productive do you make the person.\n\n35:05.380 --> 35:08.980\n And you can only see that when you have libraries\n\n35:08.980 --> 35:11.060\n that were built with the right intention\n\n35:11.060 --> 35:13.740\n that the language was designed for.\n\n35:13.740 --> 35:16.620\n And with Swift, I think we're still a little bit early,\n\n35:16.620 --> 35:19.460\n but Swift UI and many other things that are coming out now\n\n35:19.460 --> 35:20.300\n are really showing that.\n\n35:20.300 --> 35:22.500\n And I think that they're opening people's eyes.\n\n35:22.500 --> 35:25.180\n It's kind of interesting to think about like how\n\n35:26.300 --> 35:29.620\n that the knowledge of something,\n\n35:29.620 --> 35:31.620\n of how good the bicycle is,\n\n35:31.620 --> 35:33.740\n how people learn about that.\n\n35:33.740 --> 35:36.020\n So I've used C++,\n\n35:36.020 --> 35:38.980\n now this is not going to be a trash talking session\n\n35:38.980 --> 35:41.820\n about C++, but I used C++ for a really long time.\n\n35:41.820 --> 35:45.100\n You can go there if you want, I have the scars.\n\n35:45.100 --> 35:49.580\n I feel like I spent many years without realizing\n\n35:49.580 --> 35:51.500\n like there's languages that could,\n\n35:51.500 --> 35:56.500\n for my particular lifestyle, brain style, thinking style,\n\n35:56.820 --> 36:00.340\n there's languages that could make me a lot more productive\n\n36:00.340 --> 36:04.340\n in the debugging stage, in just the development stage\n\n36:04.340 --> 36:05.940\n and thinking like the bicycle for the mind\n\n36:05.940 --> 36:07.740\n that I can fit more stuff into my...\n\n36:07.740 --> 36:09.220\n Python's a great example of that, right?\n\n36:09.220 --> 36:10.940\n I mean, a machine learning framework in Python\n\n36:10.940 --> 36:12.260\n is a great example of that.\n\n36:12.260 --> 36:14.660\n It's just very high abstraction level.\n\n36:14.660 --> 36:15.860\n And so you can be thinking about things\n\n36:15.860 --> 36:19.020\n on a like very high level algorithmic level\n\n36:19.020 --> 36:20.420\n instead of thinking about, okay, well,\n\n36:20.420 --> 36:23.780\n am I copying this tensor to a GPU or not, right?\n\n36:23.780 --> 36:25.500\n It's not what you want to be thinking about.\n\n36:25.500 --> 36:26.940\n And as I was telling you, I mean,\n\n36:26.940 --> 36:28.380\n I guess the question I had is,\n\n36:29.740 --> 36:31.740\n how does a person like me or in general people\n\n36:31.740 --> 36:36.740\n discover more productive languages?\n\n36:36.860 --> 36:39.940\n Like how I was, as I've been telling you offline,\n\n36:39.940 --> 36:43.220\n I've been looking for like a project to work on in Swift\n\n36:43.220 --> 36:45.540\n so I can really try it out.\n\n36:45.540 --> 36:48.580\n I mean, my intuition was like doing a hello world\n\n36:48.580 --> 36:50.420\n is not going to get me there\n\n36:50.420 --> 36:54.100\n to get me to experience the power of language.\n\n36:54.100 --> 36:55.900\n You need a few weeks to change your metabolism.\n\n36:55.900 --> 36:58.260\n Exactly, beautifully put.\n\n36:59.500 --> 37:01.500\n That's one of the problems with people with diets,\n\n37:01.500 --> 37:05.260\n like I'm actually currently, to go in parallel,\n\n37:05.260 --> 37:07.780\n but in a small tangent is I've been recently\n\n37:07.780 --> 37:10.260\n eating only meat, okay?\n\n37:10.260 --> 37:13.140\n And okay, so most people are like,\n\n37:14.940 --> 37:16.820\n they think that's horribly unhealthy or whatever,\n\n37:16.820 --> 37:20.540\n you have like a million, whatever the science is,\n\n37:20.540 --> 37:22.460\n it just doesn't sound right.\n\n37:22.460 --> 37:24.060\n Well, so back when I was in college,\n\n37:24.060 --> 37:26.460\n we did the Atkins diet, that was a thing.\n\n37:26.460 --> 37:30.620\n Similar, but you have to always give these things a chance.\n\n37:30.620 --> 37:33.220\n I mean, with dieting, I was not dieting,\n\n37:33.220 --> 37:35.660\n but it's just the things that you like.\n\n37:35.660 --> 37:38.060\n If I eat, personally, if I eat meat,\n\n37:38.060 --> 37:40.140\n just everything, I can be super focused\n\n37:40.140 --> 37:41.980\n or more focused than usual.\n\n37:42.900 --> 37:43.940\n I just feel great.\n\n37:43.940 --> 37:46.260\n I mean, I've been running a lot,\n\n37:46.260 --> 37:47.940\n doing pushups and pull ups and so on.\n\n37:47.940 --> 37:50.620\n I mean, Python is similar in that sense for me.\n\n37:50.620 --> 37:51.980\n Where are you going with this?\n\n37:53.540 --> 37:57.300\n I mean, literally, I just felt I had like a stupid smile\n\n37:57.300 --> 38:00.740\n on my face when I first started using Python.\n\n38:00.740 --> 38:02.900\n I could code up really quick things.\n\n38:02.900 --> 38:05.700\n Like I would see the world,\n\n38:05.700 --> 38:07.740\n I would be empowered to write a script\n\n38:07.740 --> 38:11.780\n to do some basic data processing,\n\n38:11.780 --> 38:14.180\n to rename files on my computer.\n\n38:14.180 --> 38:16.260\n Like Perl didn't do that for me,\n\n38:18.780 --> 38:19.620\n a little bit.\n\n38:19.620 --> 38:22.540\n And again, none of these are about which is best\n\n38:22.540 --> 38:23.380\n or something like that,\n\n38:23.380 --> 38:25.020\n but there's definitely better and worse here.\n\n38:25.020 --> 38:26.060\n But it clicks, right?\n\n38:26.060 --> 38:27.580\n Well, yeah.\n\n38:27.580 --> 38:29.300\n If you look at Perl, for example,\n\n38:29.300 --> 38:32.660\n you get bogged down in scalars versus arrays\n\n38:32.660 --> 38:34.340\n versus hashes versus type globs\n\n38:34.340 --> 38:35.700\n and like all that kind of stuff.\n\n38:35.700 --> 38:38.780\n And Python's like, yeah, let's not do this.\n\n38:38.780 --> 38:39.940\n And some of it is debugging.\n\n38:39.940 --> 38:41.500\n Like everyone has different priorities.\n\n38:41.500 --> 38:44.940\n But for me, it's, can I create systems for myself\n\n38:44.940 --> 38:47.820\n that empower me to debug quickly?\n\n38:47.820 --> 38:50.380\n Like I've always been a big fan,\n\n38:50.380 --> 38:52.060\n even just crude like asserts,\n\n38:52.060 --> 38:57.060\n like always stating things that should be true,\n\n38:57.220 --> 38:59.780\n which in Python, I found in myself doing more\n\n38:59.780 --> 39:02.340\n because of type, all these kinds of stuff.\n\n39:02.340 --> 39:04.540\n Well, you could think of types in a programming language\n\n39:04.540 --> 39:05.860\n as being kind of assert.\n\n39:05.860 --> 39:06.700\n Yeah.\n\n39:06.700 --> 39:08.900\n They could check the compile time, right?\n\n39:08.900 --> 39:10.980\n So how do you learn a new thing?\n\n39:10.980 --> 39:13.900\n Well, so this, or how do people learn new things, right?\n\n39:13.900 --> 39:15.260\n This is hard.\n\n39:15.260 --> 39:17.140\n People don't like to change.\n\n39:17.140 --> 39:19.300\n People generally don't like change around them either.\n\n39:19.300 --> 39:22.860\n And so we're all very slow to adapt and change.\n\n39:22.860 --> 39:25.460\n And usually there's a catalyst that's required\n\n39:25.460 --> 39:27.980\n to force yourself over this.\n\n39:27.980 --> 39:29.980\n So for learning a programming language,\n\n39:29.980 --> 39:32.700\n it really comes down to finding an excuse,\n\n39:32.700 --> 39:36.300\n like build a thing that the language is actually good for,\n\n39:36.300 --> 39:37.980\n that the ecosystem's ready for.\n\n39:38.820 --> 39:42.980\n And so if you were to write an iOS app, for example,\n\n39:42.980 --> 39:44.220\n that'd be the easy case.\n\n39:44.220 --> 39:46.700\n Obviously you would use Swift for that, right?\n\n39:46.700 --> 39:47.540\n There are other...\n\n39:47.540 --> 39:48.380\n Android.\n\n39:48.380 --> 39:50.540\n So Swift runs on Android.\n\n39:50.540 --> 39:51.380\n Oh, does it?\n\n39:51.380 --> 39:52.220\n Oh yeah.\n\n39:52.220 --> 39:53.060\n Yeah, Swift runs in lots of places.\n\n39:53.060 --> 39:54.700\n How does that work?\n\n39:54.700 --> 39:55.540\n So...\n\n39:55.540 --> 39:58.580\n Okay, so Swift is built on top of LLVM.\n\n39:58.580 --> 40:00.420\n LLVM runs everywhere.\n\n40:00.420 --> 40:03.180\n LLVM, for example, builds the Android kernel.\n\n40:03.180 --> 40:04.180\n Oh, okay.\n\n40:04.180 --> 40:05.020\n So yeah.\n\n40:05.020 --> 40:06.780\n I didn't realize this.\n\n40:06.780 --> 40:09.900\n Yeah, so Swift is very portable, runs on Windows.\n\n40:09.900 --> 40:12.580\n There's, it runs on lots of different things.\n\n40:12.580 --> 40:15.540\n And Swift, sorry to interrupt, Swift UI,\n\n40:15.540 --> 40:17.900\n and then there's a thing called UI Kit.\n\n40:17.900 --> 40:21.060\n So can I build an app with Swift?\n\n40:21.060 --> 40:22.180\n Well, so that's the thing,\n\n40:22.180 --> 40:23.860\n is the ecosystem is what matters there.\n\n40:23.860 --> 40:27.060\n So Swift UI and UI Kit are Apple technologies.\n\n40:27.060 --> 40:27.900\n Okay, got it.\n\n40:27.900 --> 40:28.740\n And so they happen to,\n\n40:28.740 --> 40:30.540\n like Swift UI happens to be written in Swift,\n\n40:30.540 --> 40:32.900\n but it's an Apple proprietary framework\n\n40:32.900 --> 40:35.580\n that Apple loves and wants to keep on its platform,\n\n40:35.580 --> 40:36.900\n which makes total sense.\n\n40:36.900 --> 40:39.660\n You go to Android and you don't have that library, right?\n\n40:39.660 --> 40:42.900\n And so Android has a different ecosystem of things\n\n40:42.900 --> 40:44.100\n that hasn't been built out\n\n40:44.100 --> 40:45.420\n and doesn't work as well with Swift.\n\n40:45.420 --> 40:48.900\n And so you can totally use Swift to do like arithmetic\n\n40:48.900 --> 40:49.740\n and things like this,\n\n40:49.740 --> 40:51.740\n but building UI with Swift on Android\n\n40:51.740 --> 40:54.620\n is not a great experience right now.\n\n40:54.620 --> 40:58.780\n So if I wanted to learn Swift, what's the,\n\n40:58.780 --> 41:01.860\n I mean, the one practical different version of that\n\n41:01.860 --> 41:05.580\n is Swift for TensorFlow, for example.\n\n41:05.580 --> 41:08.420\n And one of the inspiring things for me\n\n41:08.420 --> 41:10.460\n with both TensorFlow and PyTorch\n\n41:10.460 --> 41:13.100\n is how quickly the community can like switch\n\n41:13.100 --> 41:16.820\n from different libraries, like you could see\n\n41:16.820 --> 41:19.700\n some of the communities switching to PyTorch now,\n\n41:19.700 --> 41:21.940\n but it's very easy to see.\n\n41:21.940 --> 41:24.500\n And then TensorFlow is really stepping up its game.\n\n41:24.500 --> 41:26.140\n And then there's no reason why,\n\n41:26.140 --> 41:27.860\n I think the way it works is basically\n\n41:27.860 --> 41:29.580\n it has to be one GitHub repo,\n\n41:29.580 --> 41:31.500\n like one paper steps up.\n\n41:31.500 --> 41:32.340\n It gets people excited.\n\n41:32.340 --> 41:33.740\n It gets people excited and they're like,\n\n41:33.740 --> 41:37.180\n ah, I have to learn this Swift for,\n\n41:37.180 --> 41:39.500\n what's Swift again?\n\n41:39.500 --> 41:41.220\n And then they learn and they fall in love with it.\n\n41:41.220 --> 41:43.100\n I mean, that's what happened, PyTorch has it.\n\n41:43.100 --> 41:44.420\n There has to be a reason, a catalyst.\n\n41:44.420 --> 41:45.260\n Yeah.\n\n41:45.260 --> 41:48.700\n And so, and there, I mean, people don't like change,\n\n41:48.700 --> 41:50.420\n but it turns out that once you've worked\n\n41:50.420 --> 41:52.660\n with one or two programming languages,\n\n41:52.660 --> 41:54.100\n the basics are pretty similar.\n\n41:54.100 --> 41:55.740\n And so one of the fun things\n\n41:55.740 --> 41:57.340\n about learning programming languages,\n\n41:57.340 --> 41:59.860\n even maybe Lisp, I don't know if you agree with this,\n\n41:59.860 --> 42:01.380\n is that when you start doing that,\n\n42:01.380 --> 42:02.940\n you start learning new things.\n\n42:04.020 --> 42:05.660\n Cause you have a new way to do things\n\n42:05.660 --> 42:06.820\n and you're forced to do them.\n\n42:06.820 --> 42:09.260\n And that forces you to explore\n\n42:09.260 --> 42:10.300\n and it puts you in learning mode.\n\n42:10.300 --> 42:11.340\n And when you get in learning mode,\n\n42:11.340 --> 42:12.740\n your mind kind of opens a little bit\n\n42:12.740 --> 42:15.260\n and you can see things in a new way,\n\n42:15.260 --> 42:17.020\n even when you go back to the old place.\n\n42:17.020 --> 42:17.860\n Right.\n\n42:17.860 --> 42:19.900\n Yeah, it's totally, well Lisp is functional.\n\n42:19.900 --> 42:21.140\n Yeah.\n\n42:21.140 --> 42:23.580\n But yeah, I wish there was a kind of window,\n\n42:23.580 --> 42:26.060\n maybe you can tell me if there is, there you go.\n\n42:26.060 --> 42:28.260\n This is a question to ask,\n\n42:28.260 --> 42:29.660\n what is the most beautiful feature\n\n42:29.660 --> 42:30.940\n in a programming language?\n\n42:30.940 --> 42:33.260\n Before I ask it, let me say like with Python,\n\n42:33.260 --> 42:36.660\n I remember I saw Lisp comprehensions.\n\n42:36.660 --> 42:37.500\n Yeah.\n\n42:37.500 --> 42:40.820\n Was like, when I like really took it in.\n\n42:40.820 --> 42:41.940\n Yeah.\n\n42:41.940 --> 42:43.700\n I don't know, I just loved it.\n\n42:43.700 --> 42:47.500\n It was like fun to do, like it was fun to do that kind of,\n\n42:49.820 --> 42:52.820\n something about it to be able to filter through a list\n\n42:52.820 --> 42:56.260\n and to create a new list all in a single line was elegant.\n\n42:56.260 --> 42:58.220\n I could all get into my head\n\n42:58.220 --> 43:01.900\n and it just made me fall in love with the language.\n\n43:01.900 --> 43:02.740\n Yeah.\n\n43:02.740 --> 43:04.860\n So is there, let me ask you a question.\n\n43:04.860 --> 43:07.620\n Is there, what do you use the most beautiful feature\n\n43:07.620 --> 43:11.780\n in a programming languages that you've ever encountered\n\n43:11.780 --> 43:15.140\n in Swift maybe and then outside of Swift?\n\n43:15.140 --> 43:17.460\n I think the thing that I like the most\n\n43:17.460 --> 43:18.860\n from a programming language.\n\n43:18.860 --> 43:21.260\n So I think the thing you have to think about\n\n43:21.260 --> 43:23.580\n with the programming language, again, what is the goal?\n\n43:23.580 --> 43:27.140\n You're trying to get people to get things done quickly.\n\n43:27.140 --> 43:30.500\n And so you need libraries, you need high quality libraries\n\n43:30.500 --> 43:32.620\n and then you need a user base around them\n\n43:32.620 --> 43:35.020\n that can assemble them and do cool things with them, right?\n\n43:35.020 --> 43:36.180\n And so to me, the question is\n\n43:36.180 --> 43:38.260\n what enables high quality libraries?\n\n43:39.860 --> 43:40.700\n Okay.\n\n43:40.700 --> 43:41.540\n Yeah.\n\n43:41.540 --> 43:43.380\n And there's a huge divide in the world\n\n43:43.380 --> 43:48.300\n between libraries who enable high quality libraries\n\n43:48.300 --> 43:52.780\n versus the ones that put special stuff in the language.\n\n43:52.780 --> 43:56.740\n So programming languages that enable high quality libraries?\n\n43:56.740 --> 43:57.580\n Got it.\n\n43:57.580 --> 44:00.860\n So, and what I mean by that is expressive libraries\n\n44:00.860 --> 44:03.700\n that then feel like a natural integrated part\n\n44:03.700 --> 44:05.580\n of the language itself.\n\n44:05.580 --> 44:09.860\n So an example of this in Swift is that int and float\n\n44:09.860 --> 44:12.100\n and also array and string, things like this,\n\n44:12.100 --> 44:13.740\n these are all part of the library.\n\n44:13.740 --> 44:16.180\n Like int is not hard coded into Swift.\n\n44:17.420 --> 44:19.060\n And so what that means is that\n\n44:19.060 --> 44:21.340\n because int is just a library thing\n\n44:21.340 --> 44:22.580\n defined in the standard library,\n\n44:22.580 --> 44:24.660\n along with strings and arrays and all the other things\n\n44:24.660 --> 44:26.180\n that come with the standard library.\n\n44:27.180 --> 44:29.220\n Well, hopefully you do like int,\n\n44:29.220 --> 44:31.980\n but anything that any language features\n\n44:31.980 --> 44:33.940\n that you needed to define int,\n\n44:33.940 --> 44:36.100\n you can also use in your own types.\n\n44:36.100 --> 44:39.540\n So if you wanted to find a quaternion\n\n44:39.540 --> 44:41.420\n or something like this, right?\n\n44:41.420 --> 44:43.580\n Well, it doesn't come in the standard library.\n\n44:43.580 --> 44:45.660\n There's a very special set of people\n\n44:45.660 --> 44:47.180\n that care a lot about this,\n\n44:47.180 --> 44:49.420\n but those people are also important.\n\n44:49.420 --> 44:51.100\n It's not about classism, right?\n\n44:51.100 --> 44:53.500\n It's not about the people who care about ints and floats\n\n44:53.500 --> 44:55.780\n are more important than the people who care about quaternions.\n\n44:55.780 --> 44:56.940\n And so to me, the beautiful things\n\n44:56.940 --> 44:58.980\n about programming languages is when you allow\n\n44:58.980 --> 45:02.300\n those communities to build high quality libraries,\n\n45:02.300 --> 45:03.140\n they feel native.\n\n45:03.140 --> 45:05.820\n They feel like they're built into the compiler\n\n45:05.820 --> 45:06.900\n without having to be.\n\n45:08.020 --> 45:11.140\n What does it mean for the int to be part\n\n45:11.140 --> 45:13.220\n of not hard coded in?\n\n45:13.220 --> 45:18.220\n So is it like how, so what is an int?\n\n45:18.580 --> 45:20.820\n Okay, int is just a integer.\n\n45:20.820 --> 45:23.540\n In this case, it's like a 64 bit integer\n\n45:23.540 --> 45:24.620\n or something like this.\n\n45:24.620 --> 45:28.100\n But so like the 64 bit is hard coded or no?\n\n45:28.100 --> 45:29.380\n No, none of that's hard coded.\n\n45:29.380 --> 45:32.140\n So int, if you go look at how it's implemented,\n\n45:32.140 --> 45:34.740\n it's just a struct in Swift.\n\n45:34.740 --> 45:35.860\n And so it's a struct.\n\n45:35.860 --> 45:37.460\n And then how do you add two structs?\n\n45:37.460 --> 45:38.660\n Well, you define plus.\n\n45:39.620 --> 45:41.780\n And so you can define plus on int.\n\n45:41.780 --> 45:43.540\n Well, you can define plus on your thing too.\n\n45:43.540 --> 45:46.660\n You can define, int is an odd method\n\n45:46.660 --> 45:47.780\n or something like that on it.\n\n45:47.780 --> 45:50.420\n And so yeah, you can add methods on the things.\n\n45:50.420 --> 45:51.340\n Yeah.\n\n45:51.340 --> 45:55.380\n So you can define operators, like how it behaves.\n\n45:55.380 --> 45:57.500\n That's just beautiful when there's something\n\n45:57.500 --> 46:00.420\n about the language which enables others\n\n46:00.420 --> 46:05.340\n to create libraries which are not hacky.\n\n46:05.340 --> 46:07.180\n Yeah, they feel native.\n\n46:07.180 --> 46:10.860\n And so one of the best examples of this is Lisp, right?\n\n46:10.860 --> 46:13.780\n Because in Lisp, like all the libraries\n\n46:13.780 --> 46:15.420\n are basically part of the language, right?\n\n46:15.420 --> 46:17.500\n You write, turn, rewrite systems and things like this.\n\n46:17.500 --> 46:18.340\n And so.\n\n46:18.340 --> 46:20.780\n Can you as a counter example provide\n\n46:20.780 --> 46:23.820\n what makes it difficult to write a library that's native?\n\n46:23.820 --> 46:25.500\n Is it the Python C?\n\n46:25.500 --> 46:29.020\n Well, so one example, I'll give you two examples.\n\n46:29.020 --> 46:31.580\n Java and C++, there's Java and C.\n\n46:33.060 --> 46:35.780\n They both allow you to define your own types,\n\n46:35.780 --> 46:38.420\n but int is hard code in the language.\n\n46:38.420 --> 46:39.340\n Okay, well, why?\n\n46:39.340 --> 46:41.620\n Well, in Java, for example, coming back\n\n46:41.620 --> 46:44.180\n to this whole reference semantic value semantic thing,\n\n46:45.180 --> 46:47.420\n int gets passed around by value.\n\n46:48.860 --> 46:49.700\n Yeah.\n\n46:49.700 --> 46:53.740\n But if you make like a pair or something like that,\n\n46:53.740 --> 46:56.860\n a complex number, right, it's a class in Java.\n\n46:56.860 --> 46:59.900\n And now it gets passed around by reference, by pointer.\n\n46:59.900 --> 47:02.620\n And so now you lose value semantics, right?\n\n47:02.620 --> 47:04.980\n You lost math, okay.\n\n47:04.980 --> 47:06.860\n Well, that's not great, right?\n\n47:06.860 --> 47:08.140\n If you can do something with int,\n\n47:08.140 --> 47:10.460\n why can't I do it with my type, right?\n\n47:10.460 --> 47:15.340\n So that's the negative side of the thing I find beautiful\n\n47:15.340 --> 47:17.340\n is when you can solve that,\n\n47:17.340 --> 47:19.260\n when you can have full expressivity,\n\n47:19.260 --> 47:21.700\n where you as a user of the language\n\n47:21.700 --> 47:24.180\n have as much or almost as much power\n\n47:24.180 --> 47:25.500\n as the people who implemented\n\n47:25.500 --> 47:27.300\n all the standard built in stuff,\n\n47:27.300 --> 47:28.500\n because what that enables\n\n47:28.500 --> 47:31.460\n is that enables truly beautiful libraries.\n\n47:31.460 --> 47:32.620\n You know, it's kind of weird\n\n47:32.620 --> 47:34.900\n because I've gotten used to that.\n\n47:36.260 --> 47:37.860\n That's one, I guess, other aspect\n\n47:37.860 --> 47:39.100\n of program language design.\n\n47:39.100 --> 47:41.140\n You have to think, you know,\n\n47:41.140 --> 47:43.500\n the old first principles thinking,\n\n47:43.500 --> 47:45.580\n like, why are we doing it this way?\n\n47:45.580 --> 47:47.900\n By the way, I mean, I remember,\n\n47:47.900 --> 47:50.900\n because I was thinking about the walrus operator\n\n47:50.900 --> 47:53.260\n and I'll ask you about it later,\n\n47:53.260 --> 47:57.700\n but it hit me that like the equal sign for assignment.\n\n47:57.700 --> 47:58.780\n Yeah.\n\n47:58.780 --> 48:00.820\n Like, why are we using the equal sign for assignment?\n\n48:00.820 --> 48:02.500\n It's wrong, yeah.\n\n48:02.500 --> 48:04.500\n And that's not the only solution, right?\n\n48:04.500 --> 48:05.420\n So if you look at Pascal,\n\n48:05.420 --> 48:07.740\n they use colon equals for assignment\n\n48:07.740 --> 48:11.420\n and equals for equality.\n\n48:11.420 --> 48:12.980\n And they use like less than greater than\n\n48:12.980 --> 48:14.580\n instead of the not equal thing.\n\n48:14.580 --> 48:15.420\n Yeah.\n\n48:15.420 --> 48:16.380\n Like, there are other answers here.\n\n48:16.380 --> 48:19.900\n So, but like, and yeah, like I ask you all,\n\n48:19.900 --> 48:24.860\n but how do you then decide to break convention\n\n48:24.860 --> 48:29.700\n to say, you know what, everybody's doing it wrong.\n\n48:29.700 --> 48:30.980\n We're gonna do it right.\n\n48:30.980 --> 48:31.980\n Yeah.\n\n48:31.980 --> 48:33.740\n So it's like an ROI,\n\n48:33.740 --> 48:35.460\n like return on investment trade off, right?\n\n48:35.460 --> 48:37.340\n So if you do something weird,\n\n48:37.340 --> 48:39.820\n let's just say like not like colon equal\n\n48:39.820 --> 48:40.940\n instead of equal for assignment,\n\n48:40.940 --> 48:44.900\n that would be weird with today's aesthetic, right?\n\n48:44.900 --> 48:47.460\n And so you'd say, cool, this is theoretically better,\n\n48:47.460 --> 48:49.620\n but is it better in which ways?\n\n48:49.620 --> 48:50.700\n Like, what do I get out of that?\n\n48:50.700 --> 48:52.340\n Do I define away class of bugs?\n\n48:52.340 --> 48:54.260\n Well, one of the class of bugs that C has\n\n48:54.260 --> 48:55.860\n is that you can use like, you know,\n\n48:55.860 --> 49:00.860\n if X equals without equals equals X equals Y, right?\n\n49:01.740 --> 49:05.220\n Well, turns out you can solve that problem in lots of ways.\n\n49:05.220 --> 49:07.620\n Clang, for example, GCC, all these compilers\n\n49:07.620 --> 49:10.740\n will detect that as a likely bug, produce a warning.\n\n49:10.740 --> 49:11.580\n Do they?\n\n49:11.580 --> 49:12.420\n Yeah.\n\n49:12.420 --> 49:13.260\n I feel like they didn't.\n\n49:13.260 --> 49:14.100\n Oh, Clang does.\n\n49:14.100 --> 49:14.940\n They didn't.\n\n49:14.940 --> 49:15.900\n GCC didn't.\n\n49:15.900 --> 49:17.820\n It's like one of the important things\n\n49:17.820 --> 49:19.820\n about programming language design is like,\n\n49:19.820 --> 49:22.940\n you're literally creating suffering in the world.\n\n49:22.940 --> 49:23.780\n Okay.\n\n49:23.780 --> 49:27.820\n Like, I feel like, I mean, one way to see it\n\n49:27.820 --> 49:29.140\n is the bicycle for the mind,\n\n49:29.140 --> 49:32.140\n but the other way is to like minimizing suffering.\n\n49:32.140 --> 49:33.580\n Well, you have to decide if it's worth it, right?\n\n49:33.580 --> 49:35.460\n And so let's come back to that.\n\n49:35.460 --> 49:36.300\n Okay.\n\n49:36.300 --> 49:38.300\n But if you look at this, and again,\n\n49:38.300 --> 49:40.020\n this is where there's a lot of detail\n\n49:40.020 --> 49:41.740\n that goes into each of these things.\n\n49:42.700 --> 49:45.060\n Equal and C returns a value.\n\n49:46.700 --> 49:47.540\n Yep.\n\n49:47.540 --> 49:48.860\n Is it messed up?\n\n49:48.860 --> 49:51.060\n That allows you to say X equals Y equals Z,\n\n49:51.060 --> 49:52.380\n like that works in C.\n\n49:52.380 --> 49:53.380\n Yeah.\n\n49:53.380 --> 49:54.580\n Is it messed up?\n\n49:54.580 --> 49:57.460\n You know, most people think it's messed up, I think.\n\n49:57.460 --> 50:00.700\n It is very, by messed up, what I mean is\n\n50:00.700 --> 50:03.460\n it is very rarely used for good,\n\n50:03.460 --> 50:05.460\n and it's often used for bugs.\n\n50:05.460 --> 50:06.300\n Yeah.\n\n50:06.300 --> 50:07.140\n Right, and so.\n\n50:07.140 --> 50:09.340\n That's a good definition of messed up, yeah.\n\n50:09.340 --> 50:12.060\n You could use, you know, in hindsight,\n\n50:12.060 --> 50:13.500\n this was not such a great idea, right?\n\n50:13.500 --> 50:14.340\n No.\n\n50:14.340 --> 50:16.100\n One of the things with Swift that is really powerful\n\n50:16.100 --> 50:18.420\n and one of the reasons it's actually good\n\n50:18.420 --> 50:20.260\n versus it being full of good ideas\n\n50:20.260 --> 50:23.420\n is that when we launched Swift 1,\n\n50:23.420 --> 50:26.020\n we announced that it was public,\n\n50:26.020 --> 50:27.900\n people could use it, people could build apps,\n\n50:27.900 --> 50:30.940\n but it was gonna change and break, okay?\n\n50:30.940 --> 50:33.220\n When Swift 2 came out, we said, hey, it's open source,\n\n50:33.220 --> 50:34.460\n and there's this open process\n\n50:34.460 --> 50:37.900\n which people can help evolve and direct the language.\n\n50:37.900 --> 50:40.140\n So the community at large, like Swift users,\n\n50:40.140 --> 50:43.100\n can now help shape the language as it is.\n\n50:43.100 --> 50:46.140\n And what happened as part of that process is\n\n50:46.140 --> 50:49.540\n a lot of really bad mistakes got taken out.\n\n50:49.540 --> 50:53.180\n So for example, Swift used to have the C style plus plus\n\n50:53.180 --> 50:55.020\n and minus minus operators.\n\n50:55.020 --> 50:56.580\n Like, what does it mean when you put it before\n\n50:56.580 --> 50:59.340\n versus after, right?\n\n50:59.340 --> 51:02.620\n Well, that got cargo culted from C into Swift early on.\n\n51:02.620 --> 51:03.740\n What's cargo culted?\n\n51:03.740 --> 51:05.300\n Cargo culted means brought forward\n\n51:05.300 --> 51:07.740\n without really considering it.\n\n51:07.740 --> 51:08.580\n Okay.\n\n51:08.580 --> 51:12.060\n This is maybe not the most PC term, but.\n\n51:12.060 --> 51:13.580\n You have to look it up in Urban Dictionary, yeah.\n\n51:13.580 --> 51:17.500\n Yeah, so it got pulled into C without,\n\n51:17.500 --> 51:18.580\n or it got pulled into Swift\n\n51:18.580 --> 51:20.500\n without very good consideration.\n\n51:20.500 --> 51:22.180\n And we went through this process,\n\n51:22.180 --> 51:23.700\n and one of the first things got ripped out\n\n51:23.700 --> 51:25.580\n was plus plus and minus minus,\n\n51:25.580 --> 51:27.740\n because they lead to confusion.\n\n51:27.740 --> 51:31.580\n They have very low value over saying x plus equals one,\n\n51:31.580 --> 51:34.180\n and x plus equals one is way more clear.\n\n51:34.180 --> 51:36.980\n And so when you're optimizing for teachability and clarity\n\n51:36.980 --> 51:39.540\n and bugs and this multidimensional space\n\n51:39.540 --> 51:40.980\n that you're looking at,\n\n51:40.980 --> 51:42.300\n things like that really matter.\n\n51:42.300 --> 51:45.500\n And so being first principles on where you're coming from\n\n51:45.500 --> 51:46.460\n and what you're trying to achieve\n\n51:46.460 --> 51:50.100\n and being anchored on the objective is really important.\n\n51:50.100 --> 51:53.260\n Well, let me ask you about the most,\n\n51:54.460 --> 51:58.140\n sort of this podcast isn't about information,\n\n51:58.140 --> 51:59.300\n it's about drama.\n\n51:59.300 --> 52:00.140\n Okay.\n\n52:00.140 --> 52:01.300\n Let me talk to you about some drama.\n\n52:01.300 --> 52:06.300\n So you mentioned Pascal and colon equals,\n\n52:06.300 --> 52:08.980\n there's something that's called the Walrus operator.\n\n52:08.980 --> 52:09.820\n Okay.\n\n52:09.820 --> 52:14.820\n And Python in Python 3.8 added the Walrus operator.\n\n52:15.580 --> 52:17.580\n And the reason I think it's interesting\n\n52:19.100 --> 52:21.340\n is not just because of the feature,\n\n52:21.340 --> 52:23.420\n it has the same kind of expression feature\n\n52:23.420 --> 52:25.180\n you can mention to see that it returns\n\n52:25.180 --> 52:27.060\n the value of the assignment.\n\n52:27.060 --> 52:29.620\n And then maybe you can comment on that in general,\n\n52:29.620 --> 52:31.180\n but on the other side of it,\n\n52:31.180 --> 52:36.180\n it's also the thing that toppled the dictator.\n\n52:36.540 --> 52:39.220\n So it finally drove Guido\n\n52:39.220 --> 52:42.820\n to step down from BDFL, the toxicity of the community.\n\n52:42.820 --> 52:46.300\n So maybe what do you think about the Walrus operator\n\n52:46.300 --> 52:47.140\n in Python?\n\n52:47.140 --> 52:50.020\n Is there an equivalent thing in Swift\n\n52:50.020 --> 52:54.180\n that really stress tested the community?\n\n52:54.180 --> 52:56.620\n And then on the flip side,\n\n52:56.620 --> 52:58.700\n what do you think about Guido stepping down over it?\n\n52:58.700 --> 53:01.180\n Yeah, well, if I look past the details\n\n53:01.180 --> 53:02.380\n of the Walrus operator,\n\n53:02.380 --> 53:04.180\n one of the things that makes it most polarizing\n\n53:04.180 --> 53:05.720\n is that it's syntactic sugar.\n\n53:06.900 --> 53:07.740\n Okay.\n\n53:07.740 --> 53:09.140\n What do you mean by syntactic sugar?\n\n53:09.140 --> 53:10.540\n It means you can take something\n\n53:10.540 --> 53:11.780\n that already exists in the language\n\n53:11.780 --> 53:14.420\n and you can express it in a more concise way.\n\n53:14.420 --> 53:15.980\n So, okay, I'm going to play dollars advocate.\n\n53:15.980 --> 53:17.780\n So this is great.\n\n53:18.780 --> 53:21.580\n Is that a objective or subjective statement?\n\n53:21.580 --> 53:24.420\n Like, can you argue that basically anything\n\n53:24.420 --> 53:26.340\n isn't syntactic sugar or not?\n\n53:27.460 --> 53:30.340\n No, not everything is syntactic sugar.\n\n53:30.340 --> 53:32.740\n So for example, the type system,\n\n53:32.740 --> 53:35.680\n like can you have classes versus,\n\n53:35.680 --> 53:37.960\n like, do you have types or not, right?\n\n53:37.960 --> 53:40.040\n So one type versus many types\n\n53:40.040 --> 53:42.600\n is not something that affects syntactic sugar.\n\n53:42.600 --> 53:43.760\n And so if you say,\n\n53:43.760 --> 53:46.040\n I want to have the ability to define types,\n\n53:46.040 --> 53:47.840\n I have to have all this like language mechanics\n\n53:47.840 --> 53:49.080\n to define classes.\n\n53:49.080 --> 53:51.200\n And oh, now I have to have inheritance.\n\n53:51.200 --> 53:52.880\n And I have like, I have all this stuff\n\n53:52.880 --> 53:54.920\n that's just making the language more complicated.\n\n53:54.920 --> 53:57.000\n That's not about sugaring it.\n\n53:58.440 --> 54:00.080\n Swift has the sugar.\n\n54:00.080 --> 54:02.040\n So like Swift has this thing called if let,\n\n54:02.040 --> 54:04.640\n and it has a lot of different types\n\n54:04.640 --> 54:06.520\n and it has various operators\n\n54:06.520 --> 54:10.480\n that are used to concisify specific use cases.\n\n54:10.480 --> 54:12.840\n So the problem with syntactic sugar,\n\n54:12.840 --> 54:14.000\n when you're talking about,\n\n54:14.000 --> 54:16.240\n hey, I have a thing that takes a lot to write\n\n54:16.240 --> 54:17.660\n and I have a new way to write it.\n\n54:17.660 --> 54:19.880\n You have this like horrible trade off,\n\n54:19.880 --> 54:22.340\n which becomes almost completely subjective,\n\n54:22.340 --> 54:26.280\n which is how often does this happen and does it matter?\n\n54:26.280 --> 54:28.480\n And one of the things that is true about human psychology,\n\n54:28.480 --> 54:29.780\n particularly when you're talking about introducing\n\n54:29.780 --> 54:34.240\n a new thing is that people overestimate\n\n54:34.240 --> 54:36.120\n the burden of learning something.\n\n54:36.120 --> 54:38.840\n And so it looks foreign when you haven't gotten used to it.\n\n54:38.840 --> 54:40.360\n But if it was there from the beginning,\n\n54:40.360 --> 54:42.000\n of course it's just part of Python.\n\n54:42.000 --> 54:45.080\n Like unquestionably, like this is just the thing I know.\n\n54:45.080 --> 54:47.640\n And it's not a new thing that you're worried about learning.\n\n54:47.640 --> 54:49.400\n It's just part of the deal.\n\n54:49.400 --> 54:54.240\n Now with Guido, I don't know Guido well.\n\n54:55.480 --> 54:56.920\n Yeah, have you passed cross much?\n\n54:56.920 --> 54:58.180\n Yeah, I've met him a couple of times,\n\n54:58.180 --> 55:00.000\n but I don't know Guido well.\n\n55:00.000 --> 55:03.280\n But the sense that I got out of that whole dynamic\n\n55:03.280 --> 55:04.720\n was that he had put the,\n\n55:04.720 --> 55:08.840\n not just the decision maker weight on his shoulders,\n\n55:08.840 --> 55:11.960\n but it was so tied to his personal identity\n\n55:11.960 --> 55:15.060\n that he took it personally and he felt the need\n\n55:15.060 --> 55:16.560\n and he kind of put himself in the situation\n\n55:16.560 --> 55:18.200\n of being the person,\n\n55:18.200 --> 55:20.960\n instead of building a base of support around him.\n\n55:20.960 --> 55:23.960\n I mean, this is probably not quite literally true,\n\n55:23.960 --> 55:28.960\n but by too much concentrated on him, right?\n\n55:29.560 --> 55:31.360\n And that can wear you down.\n\n55:31.360 --> 55:33.800\n Well, yeah, particularly because people then say,\n\n55:33.800 --> 55:35.400\n Guido, you're a horrible person.\n\n55:35.400 --> 55:37.600\n I hate this thing, blah, blah, blah, blah, blah, blah, blah.\n\n55:37.600 --> 55:40.040\n And sure, it's like maybe 1% of the community\n\n55:40.040 --> 55:43.560\n that's doing that, but Python's got a big community.\n\n55:43.560 --> 55:46.640\n And 1% of millions of people is a lot of hate mail.\n\n55:46.640 --> 55:49.480\n And that just from human factor will just wear on you.\n\n55:49.480 --> 55:52.600\n Well, to clarify, it looked from just what I saw\n\n55:52.600 --> 55:53.920\n in the messaging for the,\n\n55:53.920 --> 55:55.800\n let's not look at the million Python users,\n\n55:55.800 --> 55:58.380\n but at the Python core developers,\n\n55:58.380 --> 56:01.880\n it feels like the majority, the big majority\n\n56:01.880 --> 56:03.680\n on a vote were opposed to it.\n\n56:03.680 --> 56:06.840\n Okay, I'm not that close to it, so I don't know.\n\n56:06.840 --> 56:09.220\n Okay, so the situation is like literally,\n\n56:10.920 --> 56:13.120\n yeah, I mean, the majority of the core developers\n\n56:13.120 --> 56:13.960\n are against it.\n\n56:13.960 --> 56:14.780\n Were opposed to it.\n\n56:14.780 --> 56:19.780\n So, and they weren't even like against it.\n\n56:20.920 --> 56:23.080\n It was, there was a few, well, they were against it,\n\n56:23.080 --> 56:27.800\n but the against it wasn't like, this is a bad idea.\n\n56:27.800 --> 56:31.240\n They were more like, we don't see why this is a good idea.\n\n56:31.240 --> 56:35.160\n And what that results in is there's a stalling feeling,\n\n56:35.160 --> 56:37.980\n like you just slow things down.\n\n56:37.980 --> 56:41.600\n Now, from my perspective, that you could argue this,\n\n56:41.600 --> 56:44.600\n and I think it's very interesting\n\n56:44.600 --> 56:47.600\n if we look at politics today and the way Congress works,\n\n56:47.600 --> 56:49.560\n it's slowed down everything.\n\n56:49.560 --> 56:50.400\n It's a dampener.\n\n56:50.400 --> 56:51.880\n Yeah, it's a dampener, but like,\n\n56:51.880 --> 56:53.660\n that's a dangerous thing too,\n\n56:53.660 --> 56:57.480\n because if it dampens things like, you know,\n\n56:57.480 --> 56:58.680\n if the dampening results.\n\n56:58.680 --> 56:59.520\n What are you talking about?\n\n56:59.520 --> 57:00.520\n Like, it's a low pass filter,\n\n57:00.520 --> 57:02.320\n but if you need billions of dollars\n\n57:02.320 --> 57:05.080\n injected into the economy or trillions of dollars,\n\n57:05.080 --> 57:06.840\n then suddenly stuff happens, right?\n\n57:06.840 --> 57:07.680\n And so.\n\n57:07.680 --> 57:09.360\n For sure.\n\n57:09.360 --> 57:10.460\n So you're talking about.\n\n57:10.460 --> 57:11.980\n I'm not defending our political situation,\n\n57:11.980 --> 57:13.320\n just to be clear.\n\n57:13.320 --> 57:16.480\n But you're talking about like a global pandemic.\n\n57:16.480 --> 57:17.320\n Well.\n\n57:17.320 --> 57:20.560\n I was hoping we could fix like the healthcare system\n\n57:20.560 --> 57:22.960\n and the education system, like, you know.\n\n57:22.960 --> 57:24.720\n I'm not a politics person.\n\n57:24.720 --> 57:26.240\n I don't know.\n\n57:26.240 --> 57:28.120\n When it comes to languages,\n\n57:28.120 --> 57:30.760\n the community's kind of right in terms of,\n\n57:30.760 --> 57:33.200\n it's a very high burden to add something to a language.\n\n57:33.200 --> 57:34.400\n So as soon as you add something,\n\n57:34.400 --> 57:35.720\n you have a community of people building on it\n\n57:35.720 --> 57:38.080\n and you can't remove it, okay?\n\n57:38.080 --> 57:39.620\n And if there's a community of people\n\n57:39.620 --> 57:41.620\n that feel really uncomfortable with it,\n\n57:41.620 --> 57:45.600\n then taking it slow, I think, is an important thing to do.\n\n57:45.600 --> 57:48.080\n And there's no rush, particularly if it was something\n\n57:48.080 --> 57:50.360\n that's 25 years old and is very established.\n\n57:50.360 --> 57:53.540\n And, you know, it's not like coming into its own.\n\n57:54.360 --> 57:55.840\n What about features?\n\n57:55.840 --> 57:58.800\n Well, so I think that the issue with Guido\n\n57:58.800 --> 58:00.360\n is that maybe this is a case\n\n58:00.360 --> 58:02.720\n where he realized it had outgrown him\n\n58:03.600 --> 58:06.240\n and it went from being the language.\n\n58:06.240 --> 58:09.660\n So Python, I mean, Guido's amazing,\n\n58:09.660 --> 58:12.260\n but Python isn't about Guido anymore.\n\n58:12.260 --> 58:13.520\n It's about the users.\n\n58:13.520 --> 58:15.320\n And to a certain extent, the users own it.\n\n58:15.320 --> 58:19.720\n And, you know, Guido spent years of his life,\n\n58:19.720 --> 58:22.880\n a significant fraction of his career on Python.\n\n58:22.880 --> 58:24.720\n And from his perspective, I imagine he's like,\n\n58:24.720 --> 58:25.800\n well, this is my thing.\n\n58:25.800 --> 58:28.240\n I should be able to do the thing I think is right.\n\n58:28.240 --> 58:30.360\n But you can also understand the users\n\n58:30.360 --> 58:33.140\n where they feel like, you know, this is my thing.\n\n58:33.140 --> 58:38.140\n I use this, like, and I don't know, it's a hard thing.\n\n58:38.320 --> 58:41.400\n But what, if we could talk about leadership in this,\n\n58:41.400 --> 58:42.540\n because it's so interesting to me.\n\n58:42.540 --> 58:44.440\n I'm gonna make, I'm gonna work.\n\n58:44.440 --> 58:45.520\n Hopefully somebody makes it.\n\n58:45.520 --> 58:47.720\n If not, I'll make it a Walrus Operator shirt,\n\n58:47.720 --> 58:50.380\n because I think it represents, to me,\n\n58:50.380 --> 58:52.480\n maybe it's my Russian roots or something.\n\n58:52.480 --> 58:56.100\n But, you know, it's the burden of leadership.\n\n58:56.100 --> 58:59.220\n Like, I feel like to push back,\n\n59:01.000 --> 59:02.980\n I feel like progress can only,\n\n59:02.980 --> 59:06.220\n like most difficult decisions, just like you said,\n\n59:06.220 --> 59:09.100\n there'll be a lot of divisiveness over,\n\n59:09.100 --> 59:11.240\n especially in a passionate community.\n\n59:12.180 --> 59:14.540\n It just feels like leaders need to take\n\n59:14.540 --> 59:19.540\n those risky decisions that if you like listen,\n\n59:19.540 --> 59:23.020\n that with some nonzero probability,\n\n59:23.020 --> 59:26.100\n maybe even a high probability would be the wrong decision.\n\n59:26.100 --> 59:29.260\n But they have to use their gut and make that decision.\n\n59:29.260 --> 59:30.940\n Well, this is like one of the things\n\n59:30.940 --> 59:34.180\n where you see amazing founders.\n\n59:34.180 --> 59:36.220\n The founders understand exactly what's happened\n\n59:36.220 --> 59:39.100\n and how the company got there and are willing to say,\n\n59:39.100 --> 59:42.780\n we have been doing thing X the last 20 years,\n\n59:42.780 --> 59:45.460\n but today we're gonna do thing Y.\n\n59:45.460 --> 59:47.380\n And they make a major pivot for the whole company.\n\n59:47.380 --> 59:48.580\n The company lines up behind them,\n\n59:48.580 --> 59:50.540\n they move and it's the right thing.\n\n59:50.540 --> 59:52.380\n But then when the founder dies,\n\n59:52.380 --> 59:57.060\n the successor doesn't always feel that agency\n\n59:57.060 --> 59:59.140\n to be able to make those kinds of decisions.\n\n59:59.140 --> 1:00:00.040\n Even though they're a CEO,\n\n1:00:00.040 --> 1:00:02.140\n they could theoretically do whatever.\n\n1:00:02.140 --> 1:00:04.460\n There's two reasons for that, in my opinion,\n\n1:00:04.460 --> 1:00:07.340\n or in many cases, it's always different.\n\n1:00:07.340 --> 1:00:09.760\n But one of which is they weren't there\n\n1:00:09.760 --> 1:00:11.620\n for all the decisions that were made.\n\n1:00:11.620 --> 1:00:13.360\n And so they don't know the principles\n\n1:00:13.360 --> 1:00:15.340\n in which those decisions were made.\n\n1:00:15.340 --> 1:00:17.620\n And once the principles change,\n\n1:00:17.620 --> 1:00:20.740\n you should be obligated to change what you're doing\n\n1:00:20.740 --> 1:00:22.700\n and change direction, right?\n\n1:00:22.700 --> 1:00:25.860\n And so if you don't know how you got to where you are,\n\n1:00:25.860 --> 1:00:27.400\n it just seems like gospel\n\n1:00:27.400 --> 1:00:29.820\n and you're not gonna question it.\n\n1:00:29.820 --> 1:00:30.740\n You may not understand\n\n1:00:30.740 --> 1:00:32.420\n that it really is the right thing to do,\n\n1:00:32.420 --> 1:00:33.460\n so you just may not see it.\n\n1:00:33.460 --> 1:00:34.300\n That's so brilliant.\n\n1:00:34.300 --> 1:00:35.940\n I never thought of it that way.\n\n1:00:35.940 --> 1:00:38.660\n Like it's so much higher burden\n\n1:00:38.660 --> 1:00:40.400\n when as a leader you step into a thing\n\n1:00:40.400 --> 1:00:41.740\n that's already worked for a long time.\n\n1:00:41.740 --> 1:00:42.560\n Yeah, yeah.\n\n1:00:42.560 --> 1:00:44.100\n Well, and if you change it and it doesn't work out,\n\n1:00:44.100 --> 1:00:46.340\n now you're the person who screwed it up.\n\n1:00:46.340 --> 1:00:47.660\n People always second guess it.\n\n1:00:47.660 --> 1:00:48.500\n Yeah.\n\n1:00:48.500 --> 1:00:49.340\n And the second thing is that\n\n1:00:49.340 --> 1:00:51.140\n even if you decide to make a change,\n\n1:00:51.140 --> 1:00:53.540\n even if you're theoretically in charge,\n\n1:00:53.540 --> 1:00:57.480\n you're just a person that thinks they're in charge.\n\n1:00:57.480 --> 1:00:58.860\n Meanwhile, you have to motivate the troops.\n\n1:00:58.860 --> 1:00:59.700\n You have to explain it to them\n\n1:00:59.700 --> 1:01:00.540\n in terms they'll understand.\n\n1:01:00.540 --> 1:01:02.180\n You have to get them to buy into it and believe in it,\n\n1:01:02.180 --> 1:01:03.620\n because if they don't,\n\n1:01:03.620 --> 1:01:05.940\n then they're not gonna be able to make the turn\n\n1:01:05.940 --> 1:01:08.460\n even if you tell them their bonuses are gonna be curtailed.\n\n1:01:08.460 --> 1:01:10.700\n They're just not gonna like buy into it, you know?\n\n1:01:10.700 --> 1:01:12.980\n And so there's only so much power you have as a leader,\n\n1:01:12.980 --> 1:01:16.400\n and you have to understand what those limitations are.\n\n1:01:16.400 --> 1:01:18.220\n Are you still BDFL?\n\n1:01:18.220 --> 1:01:20.300\n You've been a BDFL of some stuff.\n\n1:01:21.540 --> 1:01:23.540\n You're very heavy on the B,\n\n1:01:24.660 --> 1:01:27.900\n the benevolent, benevolent dictator for life.\n\n1:01:27.900 --> 1:01:29.180\n I guess LLVM?\n\n1:01:29.180 --> 1:01:32.560\n Yeah, so I still lead the LLVM world.\n\n1:01:32.560 --> 1:01:34.380\n I mean, what's the role of,\n\n1:01:35.460 --> 1:01:38.460\n so then on Swift you said that there's a group of people.\n\n1:01:38.460 --> 1:01:41.660\n Yeah, so if you contrast Python with Swift, right,\n\n1:01:41.660 --> 1:01:43.420\n one of the reasons,\n\n1:01:43.420 --> 1:01:45.620\n so everybody on the core team takes the role\n\n1:01:45.620 --> 1:01:47.580\n really seriously, and I think we all really care\n\n1:01:47.580 --> 1:01:49.220\n about where Swift goes,\n\n1:01:49.220 --> 1:01:52.940\n but you're almost delegating the final decision making\n\n1:01:52.940 --> 1:01:54.940\n to the wisdom of the group,\n\n1:01:54.940 --> 1:01:56.660\n and so it doesn't become personal.\n\n1:01:57.580 --> 1:01:59.620\n And also, when you're talking with the community,\n\n1:01:59.620 --> 1:02:02.060\n so yeah, some people are very annoyed\n\n1:02:02.060 --> 1:02:04.300\n as certain decisions get made.\n\n1:02:04.300 --> 1:02:06.260\n There's a certain faith in the process,\n\n1:02:06.260 --> 1:02:08.100\n because it's a very transparent process,\n\n1:02:08.100 --> 1:02:09.940\n and when a decision gets made,\n\n1:02:09.940 --> 1:02:12.180\n a full rationale is provided, things like this.\n\n1:02:12.180 --> 1:02:14.420\n These are almost defense mechanisms\n\n1:02:14.420 --> 1:02:16.500\n to help both guide future discussions\n\n1:02:16.500 --> 1:02:18.820\n and provide case law, kind of like Supreme Court does\n\n1:02:18.820 --> 1:02:20.980\n about this decision was made for this reason,\n\n1:02:20.980 --> 1:02:21.900\n and here's the rationale\n\n1:02:21.900 --> 1:02:24.120\n and what we want to see more of or less of.\n\n1:02:25.540 --> 1:02:27.600\n But it's also a way to provide a defense mechanism,\n\n1:02:27.600 --> 1:02:28.980\n so that when somebody's griping about it,\n\n1:02:28.980 --> 1:02:31.980\n they're not saying that person did the wrong thing.\n\n1:02:31.980 --> 1:02:33.980\n They're saying, well, this thing sucks,\n\n1:02:33.980 --> 1:02:38.540\n and later they move on and they get over it.\n\n1:02:38.540 --> 1:02:40.140\n Yeah, the analogy of the Supreme Court,\n\n1:02:40.140 --> 1:02:42.660\n I think, is really good.\n\n1:02:42.660 --> 1:02:45.700\n But then, okay, not to get personal on the SWIFT team,\n\n1:02:45.700 --> 1:02:50.020\n but it just seems like it's impossible\n\n1:02:50.020 --> 1:02:52.820\n for division not to emerge.\n\n1:02:52.820 --> 1:02:55.340\n Well, each of the humans on the SWIFT Core Team,\n\n1:02:55.340 --> 1:02:56.980\n for example, are different,\n\n1:02:56.980 --> 1:02:58.380\n and the membership of the SWIFT Core Team\n\n1:02:58.380 --> 1:03:02.340\n changes slowly over time, which is, I think, a healthy thing.\n\n1:03:02.340 --> 1:03:04.020\n And so each of these different humans\n\n1:03:04.020 --> 1:03:05.220\n have different opinions.\n\n1:03:05.220 --> 1:03:09.380\n Trust me, it's not a singular consciousness\n\n1:03:09.380 --> 1:03:11.000\n by any stretch of the imagination.\n\n1:03:11.000 --> 1:03:12.840\n You've got three major organizations,\n\n1:03:12.840 --> 1:03:14.580\n including Apple, Google, and SciFive,\n\n1:03:14.580 --> 1:03:16.380\n all kind of working together.\n\n1:03:16.380 --> 1:03:20.180\n And it's a small group of people, but you need high trust.\n\n1:03:20.180 --> 1:03:21.940\n You need, again, it comes back to the principles\n\n1:03:21.940 --> 1:03:23.360\n of what you're trying to achieve\n\n1:03:23.360 --> 1:03:27.480\n and understanding what you're optimizing for.\n\n1:03:27.480 --> 1:03:30.500\n And I think that starting with strong principles\n\n1:03:30.500 --> 1:03:32.300\n and working towards decisions\n\n1:03:32.300 --> 1:03:36.300\n is always a good way to both make wise decisions in general\n\n1:03:36.300 --> 1:03:37.940\n but then be able to communicate them to people\n\n1:03:37.940 --> 1:03:39.300\n so that they can buy into them.\n\n1:03:39.300 --> 1:03:41.420\n And that is hard.\n\n1:03:41.420 --> 1:03:42.700\n And so you mentioned LLVM.\n\n1:03:42.700 --> 1:03:46.780\n LLVM is gonna be 20 years old this December,\n\n1:03:46.780 --> 1:03:49.500\n so it's showing its own age.\n\n1:03:49.500 --> 1:03:53.580\n Do you have like a dragon cake plan?\n\n1:03:53.580 --> 1:03:54.740\n No, I should definitely do that.\n\n1:03:54.740 --> 1:03:57.820\n Yeah, if we can have a pandemic cake.\n\n1:03:57.820 --> 1:03:58.980\n Pandemic cake.\n\n1:03:58.980 --> 1:04:00.380\n Everybody gets a slice of cake\n\n1:04:00.380 --> 1:04:02.220\n and it gets sent through email.\n\n1:04:04.300 --> 1:04:08.140\n But LLVM has had tons of its own challenges\n\n1:04:08.140 --> 1:04:09.160\n over time too, right?\n\n1:04:09.160 --> 1:04:12.620\n And one of the challenges that the LLVM community has,\n\n1:04:12.620 --> 1:04:15.220\n in my opinion, is that it has a whole bunch of people\n\n1:04:15.220 --> 1:04:19.060\n that have been working on LLVM for 10 years, right?\n\n1:04:19.060 --> 1:04:20.900\n Because this happens somehow.\n\n1:04:20.900 --> 1:04:22.780\n And LLVM has always been one way,\n\n1:04:22.780 --> 1:04:25.060\n but it needs to be a different way, right?\n\n1:04:25.060 --> 1:04:26.620\n And they've worked on it for like 10 years.\n\n1:04:26.620 --> 1:04:28.540\n It's a long time to work on something.\n\n1:04:28.540 --> 1:04:32.140\n And you suddenly can't see the faults\n\n1:04:32.140 --> 1:04:33.460\n in the thing that you're working on.\n\n1:04:33.460 --> 1:04:35.780\n And LLVM has lots of problems and we need to address them\n\n1:04:35.780 --> 1:04:36.700\n and we need to make it better.\n\n1:04:36.700 --> 1:04:37.700\n And if we don't make it better,\n\n1:04:37.700 --> 1:04:40.220\n then somebody else will come up with a better idea, right?\n\n1:04:40.220 --> 1:04:42.500\n And so it's just kind of of that age\n\n1:04:42.500 --> 1:04:45.060\n where the community is like in danger\n\n1:04:45.060 --> 1:04:46.580\n of getting too calcified.\n\n1:04:46.580 --> 1:04:50.420\n And so I'm happy to see new projects joining\n\n1:04:50.420 --> 1:04:51.980\n and new things mixing it up.\n\n1:04:51.980 --> 1:04:54.520\n Fortran is now a new thing in the LLVM community,\n\n1:04:54.520 --> 1:04:56.300\n which is hilarious and good.\n\n1:04:56.300 --> 1:04:58.980\n I've been trying to find, on a little tangent,\n\n1:04:58.980 --> 1:05:02.340\n find people who program in Cobalt or Fortran,\n\n1:05:02.340 --> 1:05:06.460\n Fortran especially, to talk to, they're hard to find.\n\n1:05:06.460 --> 1:05:09.820\n Yeah, look to the scientific community.\n\n1:05:09.820 --> 1:05:11.660\n They still use Fortran quite a bit.\n\n1:05:11.660 --> 1:05:14.260\n Well, interesting thing you kind of mentioned with LLVM,\n\n1:05:14.260 --> 1:05:16.980\n or just in general, that as something evolves,\n\n1:05:16.980 --> 1:05:19.700\n you're not able to see the faults.\n\n1:05:19.700 --> 1:05:23.100\n So do you fall in love with the thing over time?\n\n1:05:23.100 --> 1:05:24.580\n Or do you start hating everything\n\n1:05:24.580 --> 1:05:26.300\n about the thing over time?\n\n1:05:26.300 --> 1:05:31.020\n Well, so my personal folly is that I see,\n\n1:05:31.020 --> 1:05:33.460\n maybe not all, but many of the faults,\n\n1:05:33.460 --> 1:05:35.580\n and they grate on me, and I don't have time to go fix them.\n\n1:05:35.580 --> 1:05:37.540\n Yeah, and they get magnified over time.\n\n1:05:37.540 --> 1:05:38.900\n Well, and they may not get magnified,\n\n1:05:38.900 --> 1:05:39.740\n but they never get fixed.\n\n1:05:39.740 --> 1:05:41.300\n And it's like sand underneath,\n\n1:05:41.300 --> 1:05:43.540\n you know, it's just like grating against you.\n\n1:05:43.540 --> 1:05:45.820\n And it's like sand underneath your fingernails or something.\n\n1:05:45.820 --> 1:05:46.880\n It's just like, you know it's there,\n\n1:05:46.880 --> 1:05:48.180\n you can't get rid of it.\n\n1:05:49.660 --> 1:05:52.980\n And so the problem is that if other people don't see it,\n\n1:05:52.980 --> 1:05:56.860\n like I don't have time to go write the code\n\n1:05:56.860 --> 1:05:58.420\n and fix it anymore,\n\n1:05:58.420 --> 1:06:01.420\n but then people are resistant to change.\n\n1:06:01.420 --> 1:06:03.020\n And so you say, hey, we should go fix this thing.\n\n1:06:03.020 --> 1:06:05.260\n They're like, oh yeah, that sounds risky.\n\n1:06:05.260 --> 1:06:07.180\n It's like, well, is it the right thing or not?\n\n1:06:07.180 --> 1:06:10.180\n Are the challenges the group dynamics,\n\n1:06:10.180 --> 1:06:11.620\n or is it also just technical?\n\n1:06:11.620 --> 1:06:14.260\n I mean, some of these features like,\n\n1:06:14.260 --> 1:06:17.180\n I think as an observer, it's almost like a fan\n\n1:06:17.180 --> 1:06:21.220\n in the, you know, as a spectator of the whole thing,\n\n1:06:21.220 --> 1:06:23.820\n I don't often think about, you know,\n\n1:06:23.820 --> 1:06:24.980\n some things might actually be\n\n1:06:24.980 --> 1:06:27.540\n technically difficult to implement.\n\n1:06:27.540 --> 1:06:30.040\n An example of this is we built this new compiler framework\n\n1:06:30.040 --> 1:06:31.300\n called MLIR.\n\n1:06:31.300 --> 1:06:32.140\n Yes.\n\n1:06:32.140 --> 1:06:34.180\n MLIR is a whole new framework.\n\n1:06:34.180 --> 1:06:37.300\n It's not, many people think it's about machine learning.\n\n1:06:37.300 --> 1:06:39.140\n The ML stands for multi level\n\n1:06:39.140 --> 1:06:41.380\n because compiler people can't name things very well,\n\n1:06:41.380 --> 1:06:42.220\n I guess.\n\n1:06:42.220 --> 1:06:45.240\n Do we dig into what MLIR is?\n\n1:06:45.240 --> 1:06:47.700\n Yeah, so when you look at compilers,\n\n1:06:47.700 --> 1:06:51.700\n compilers have historically been solutions for a given space.\n\n1:06:51.700 --> 1:06:56.540\n So LLVM is a, it's really good for dealing with CPUs,\n\n1:06:56.540 --> 1:06:58.100\n let's just say, at a high level.\n\n1:06:58.100 --> 1:07:01.620\n You look at Java, Java has a JVM.\n\n1:07:01.620 --> 1:07:04.300\n The JVM is very good for garbage collected languages\n\n1:07:04.300 --> 1:07:05.540\n that need dynamic compilation,\n\n1:07:05.540 --> 1:07:08.380\n and it's very optimized for a specific space.\n\n1:07:08.380 --> 1:07:09.980\n And so hotspot is one of the compilers\n\n1:07:09.980 --> 1:07:11.000\n that gets used in that space,\n\n1:07:11.000 --> 1:07:14.060\n and that compiler is really good at that kind of stuff.\n\n1:07:14.060 --> 1:07:16.740\n Usually when you build these domain specific compilers,\n\n1:07:16.740 --> 1:07:19.620\n you end up building the whole thing from scratch\n\n1:07:19.620 --> 1:07:20.540\n for each domain.\n\n1:07:22.220 --> 1:07:23.380\n What's a domain?\n\n1:07:23.380 --> 1:07:26.660\n So what's the scope of a domain?\n\n1:07:26.660 --> 1:07:29.160\n Well, so here I would say, like, if you look at Swift,\n\n1:07:29.160 --> 1:07:31.940\n there's several different parts to the Swift compiler,\n\n1:07:31.940 --> 1:07:36.100\n one of which is covered by the LLVM part of it.\n\n1:07:36.100 --> 1:07:39.420\n There's also a high level piece that's specific to Swift,\n\n1:07:39.420 --> 1:07:41.540\n and there's a huge amount of redundancy\n\n1:07:41.540 --> 1:07:44.060\n between those two different infrastructures\n\n1:07:44.060 --> 1:07:46.380\n and a lot of re implemented stuff\n\n1:07:46.380 --> 1:07:48.300\n that is similar but different.\n\n1:07:48.300 --> 1:07:49.980\n What does LLVM define?\n\n1:07:49.980 --> 1:07:53.020\n LLVM is effectively an infrastructure.\n\n1:07:53.020 --> 1:07:55.140\n So you can mix and match it in different ways.\n\n1:07:55.140 --> 1:07:56.060\n It's built out of libraries.\n\n1:07:56.060 --> 1:07:57.620\n You can use it for different things,\n\n1:07:57.620 --> 1:07:59.820\n but it's really good at CPUs and GPUs.\n\n1:07:59.820 --> 1:08:02.500\n CPUs and like the tip of the iceberg on GPUs.\n\n1:08:02.500 --> 1:08:04.340\n It's not really great at GPUs.\n\n1:08:04.340 --> 1:08:05.660\n Okay.\n\n1:08:05.660 --> 1:08:07.860\n But it turns out. A bunch of languages that.\n\n1:08:07.860 --> 1:08:10.100\n That then use it to talk to CPUs.\n\n1:08:10.100 --> 1:08:11.060\n Got it.\n\n1:08:11.060 --> 1:08:13.100\n And so it turns out there's a lot of hardware out there\n\n1:08:13.100 --> 1:08:14.820\n that is custom accelerators.\n\n1:08:14.820 --> 1:08:16.140\n So machine learning, for example.\n\n1:08:16.140 --> 1:08:18.780\n There are a lot of matrix multiply accelerators\n\n1:08:18.780 --> 1:08:20.580\n and things like this.\n\n1:08:20.580 --> 1:08:22.820\n There's a whole world of hardware synthesis.\n\n1:08:22.820 --> 1:08:26.620\n So we're using MLIR to build circuits.\n\n1:08:26.620 --> 1:08:27.460\n Okay.\n\n1:08:27.460 --> 1:08:30.860\n And so you're compiling for a domain of transistors.\n\n1:08:30.860 --> 1:08:32.460\n And so what MLIR does is it provides\n\n1:08:32.460 --> 1:08:34.500\n a tremendous amount of compiler infrastructure\n\n1:08:34.500 --> 1:08:37.500\n that allows you to build these domain specific compilers\n\n1:08:37.500 --> 1:08:41.900\n in a much faster way and have the result be good.\n\n1:08:41.900 --> 1:08:44.380\n If we're thinking about the future,\n\n1:08:44.380 --> 1:08:45.980\n now we're talking about like ASICs.\n\n1:08:45.980 --> 1:08:46.900\n So anything.\n\n1:08:46.900 --> 1:08:47.740\n Yeah, yeah.\n\n1:08:47.740 --> 1:08:50.540\n So if we project into the future,\n\n1:08:50.540 --> 1:08:54.500\n it's very possible that the number of these kinds of ASICs,\n\n1:08:54.500 --> 1:08:59.500\n very specific infrastructure architecture things\n\n1:09:02.740 --> 1:09:05.340\n like multiplies exponentially.\n\n1:09:05.340 --> 1:09:06.340\n I hope so.\n\n1:09:06.340 --> 1:09:08.620\n So that's MLIR.\n\n1:09:08.620 --> 1:09:10.780\n So what MLIR does is it allows you\n\n1:09:10.780 --> 1:09:13.260\n to build these compilers very efficiently.\n\n1:09:13.260 --> 1:09:15.820\n Right now, one of the things that coming back\n\n1:09:15.820 --> 1:09:17.980\n to the LLVM thing, and then we'll go to hardware,\n\n1:09:17.980 --> 1:09:22.980\n is LLVM is a specific compiler for a specific domain.\n\n1:09:23.980 --> 1:09:26.860\n MLIR is now this very general, very flexible thing\n\n1:09:26.860 --> 1:09:29.260\n that can solve lots of different kinds of problems.\n\n1:09:29.260 --> 1:09:32.380\n So LLVM is a subset of what MLIR does.\n\n1:09:32.380 --> 1:09:35.340\n So MLIR is, I mean, it's an ambitious project then.\n\n1:09:35.340 --> 1:09:36.980\n Yeah, it's a very ambitious project, yeah.\n\n1:09:36.980 --> 1:09:39.820\n And so to make it even more confusing,\n\n1:09:39.820 --> 1:09:42.420\n MLIR has joined the LLVM Umbrella Project.\n\n1:09:42.420 --> 1:09:44.340\n So it's part of the LLVM family.\n\n1:09:44.340 --> 1:09:45.180\n Right.\n\n1:09:45.180 --> 1:09:47.620\n But where this comes full circle is now folks\n\n1:09:47.620 --> 1:09:49.380\n that work on the LLVM part,\n\n1:09:49.380 --> 1:09:51.980\n the classic part that's 20 years old,\n\n1:09:51.980 --> 1:09:54.100\n aren't aware of all the cool new things\n\n1:09:54.100 --> 1:09:56.140\n that have been done in the new thing,\n\n1:09:56.140 --> 1:09:59.620\n that MLIR was built by me and many other people\n\n1:09:59.620 --> 1:10:01.860\n that knew a lot about LLVM,\n\n1:10:01.860 --> 1:10:05.140\n and so we fixed a lot of the mistakes that lived in LLVM.\n\n1:10:05.140 --> 1:10:07.140\n And so now you have this community dynamic\n\n1:10:07.140 --> 1:10:08.540\n where it's like, well, there's this new thing,\n\n1:10:08.540 --> 1:10:10.340\n but it's not familiar, nobody knows it,\n\n1:10:10.340 --> 1:10:12.820\n it feels like it's new, and so let's not trust it.\n\n1:10:12.820 --> 1:10:13.980\n And so it's just really interesting\n\n1:10:13.980 --> 1:10:16.900\n to see the cultural social dynamic that comes out of that.\n\n1:10:16.900 --> 1:10:19.500\n And I think it's super healthy\n\n1:10:19.500 --> 1:10:21.540\n because we're seeing the ideas percolate\n\n1:10:21.540 --> 1:10:24.020\n and we're seeing the technology diffusion happen\n\n1:10:24.020 --> 1:10:25.260\n as people get more comfortable with it,\n\n1:10:25.260 --> 1:10:27.220\n they start to understand things in their own terms.\n\n1:10:27.220 --> 1:10:28.820\n And this just gets to the,\n\n1:10:28.820 --> 1:10:31.220\n it takes a while for ideas to propagate,\n\n1:10:31.220 --> 1:10:33.980\n even though they may be very different\n\n1:10:33.980 --> 1:10:35.260\n than what people are used to.\n\n1:10:35.260 --> 1:10:37.220\n So maybe let's talk about that a little bit,\n\n1:10:37.220 --> 1:10:38.220\n the world of Asics.\n\n1:10:38.220 --> 1:10:39.060\n Yeah.\n\n1:10:39.060 --> 1:10:44.060\n Actually, you have a new role at SciFive.\n\n1:10:45.420 --> 1:10:47.380\n What's that place about?\n\n1:10:47.380 --> 1:10:50.980\n What is the vision for their vision\n\n1:10:50.980 --> 1:10:52.940\n for, I would say, the future of computer?\n\n1:10:52.940 --> 1:10:55.900\n Yeah, so I lead the engineering and product teams at SciFive.\n\n1:10:55.900 --> 1:10:59.660\n SciFive is a company who was founded\n\n1:10:59.660 --> 1:11:02.580\n with this architecture called RISC5.\n\n1:11:02.580 --> 1:11:04.380\n RISC5 is a new instruction set.\n\n1:11:04.380 --> 1:11:06.300\n Instruction sets are the things inside of your computer\n\n1:11:06.300 --> 1:11:08.420\n that tell it how to run things.\n\n1:11:08.420 --> 1:11:12.020\n X86 from Intel and ARM from the ARM company\n\n1:11:12.020 --> 1:11:13.860\n and things like this are other instruction sets.\n\n1:11:13.860 --> 1:11:15.020\n I've talked to, sorry to interrupt,\n\n1:11:15.020 --> 1:11:15.980\n I've talked to Dave Patterson,\n\n1:11:15.980 --> 1:11:17.980\n who's super excited about RISC5.\n\n1:11:17.980 --> 1:11:18.860\n Dave is awesome.\n\n1:11:18.860 --> 1:11:20.540\n Yeah, he's brilliant, yeah.\n\n1:11:20.540 --> 1:11:23.660\n The RISC5 is distinguished by not being proprietary.\n\n1:11:24.540 --> 1:11:28.820\n And so X86 can only be made by Intel and AMD.\n\n1:11:28.820 --> 1:11:30.380\n ARM can only be made by ARM.\n\n1:11:30.380 --> 1:11:33.340\n They sell licenses to build ARM chips to other companies,\n\n1:11:33.340 --> 1:11:34.180\n things like this.\n\n1:11:34.180 --> 1:11:35.540\n MIPS is another instruction set\n\n1:11:35.540 --> 1:11:38.300\n that is owned by the MIPS company, now Wave.\n\n1:11:38.300 --> 1:11:40.860\n And then it gets licensed out, things like that.\n\n1:11:40.860 --> 1:11:43.340\n And so RISC5 is an open standard\n\n1:11:43.340 --> 1:11:45.140\n that anybody can build chips for.\n\n1:11:45.140 --> 1:11:48.220\n And so SciFive was founded by three of the founders\n\n1:11:48.220 --> 1:11:51.580\n of RISC5 that designed and built it in Berkeley,\n\n1:11:51.580 --> 1:11:52.860\n working with Dave.\n\n1:11:52.860 --> 1:11:55.780\n And so that was the genesis of the company.\n\n1:11:56.780 --> 1:11:59.060\n SciFive today has some of the world's best RISC5 cores\n\n1:11:59.060 --> 1:12:01.420\n and we're selling them and that's really great.\n\n1:12:01.420 --> 1:12:04.020\n They're going to tons of products, it's very exciting.\n\n1:12:04.020 --> 1:12:06.100\n So they're taking this thing that's open source\n\n1:12:06.100 --> 1:12:09.620\n and just trying to be or are the best in the world\n\n1:12:09.620 --> 1:12:10.780\n at building these things.\n\n1:12:10.780 --> 1:12:13.260\n Yeah, so here it's the specifications open source.\n\n1:12:13.260 --> 1:12:15.940\n It's like saying TCP IP is an open standard\n\n1:12:15.940 --> 1:12:18.020\n or C is an open standard,\n\n1:12:18.020 --> 1:12:19.620\n but then you have to build an implementation\n\n1:12:19.620 --> 1:12:20.780\n of the standard.\n\n1:12:20.780 --> 1:12:23.660\n And so SciFive, on the one hand, pushes forward\n\n1:12:23.660 --> 1:12:26.260\n and defined and pushes forward the standard.\n\n1:12:26.260 --> 1:12:28.100\n On the other hand, we have implementations\n\n1:12:28.100 --> 1:12:30.980\n that are best in class for different points in the space,\n\n1:12:30.980 --> 1:12:33.620\n depending on if you want a really tiny CPU\n\n1:12:33.620 --> 1:12:36.980\n or if you want a really big, beefy one that is faster,\n\n1:12:36.980 --> 1:12:38.860\n but it uses more area and things like this.\n\n1:12:38.860 --> 1:12:41.220\n What about the actual manufacturer chips?\n\n1:12:41.220 --> 1:12:43.580\n So like, where does that all fit?\n\n1:12:43.580 --> 1:12:45.340\n I'm going to ask a bunch of dumb questions.\n\n1:12:45.340 --> 1:12:48.180\n That's okay, this is how we learn, right?\n\n1:12:48.180 --> 1:12:52.540\n And so the way this works is that there's generally\n\n1:12:52.540 --> 1:12:55.140\n a separation of the people who designed the circuits\n\n1:12:55.140 --> 1:12:56.900\n and then people who manufacture them.\n\n1:12:56.900 --> 1:13:00.780\n And so you'll hear about fabs like TSMC and Samsung\n\n1:13:00.780 --> 1:13:03.780\n and things like this that actually produce the chips,\n\n1:13:03.780 --> 1:13:05.820\n but they take a design coming in\n\n1:13:05.820 --> 1:13:09.940\n and that design specifies how the,\n\n1:13:09.940 --> 1:13:14.940\n you turn code for the chip into little rectangles\n\n1:13:16.300 --> 1:13:20.260\n that then use photolithography to make mask sets\n\n1:13:20.260 --> 1:13:22.260\n and then burn transistors onto a chip\n\n1:13:22.260 --> 1:13:24.700\n or onto a, onto silicon rather.\n\n1:13:24.700 --> 1:13:28.340\n So, and we're talking about mass manufacturing, so.\n\n1:13:28.340 --> 1:13:29.940\n Yeah, they're talking about making hundreds of millions\n\n1:13:29.940 --> 1:13:31.380\n of parts and things like that, yeah.\n\n1:13:31.380 --> 1:13:33.580\n And so the fab handles the volume production,\n\n1:13:33.580 --> 1:13:34.660\n things like that.\n\n1:13:34.660 --> 1:13:36.380\n But when you look at this problem,\n\n1:13:37.260 --> 1:13:39.740\n the interesting thing about the space when you look at it\n\n1:13:39.740 --> 1:13:44.380\n is that these, the steps that you go from designing a chip\n\n1:13:44.380 --> 1:13:46.300\n and writing the quote unquote code for it\n\n1:13:46.300 --> 1:13:49.220\n and things like Verilog and languages like that,\n\n1:13:49.220 --> 1:13:51.660\n down to what you hand off to the fab\n\n1:13:51.660 --> 1:13:56.260\n is a really well studied, really old problem, okay?\n\n1:13:56.260 --> 1:13:57.580\n Tons of people have worked on it.\n\n1:13:57.580 --> 1:14:00.580\n Lots of smart people have built systems and tools.\n\n1:14:00.580 --> 1:14:03.500\n These tools then have generally gone through acquisitions.\n\n1:14:03.500 --> 1:14:06.180\n And so they've ended up at three different major companies\n\n1:14:06.180 --> 1:14:07.780\n that build and sell these tools.\n\n1:14:07.780 --> 1:14:08.980\n They're called the EDA tools\n\n1:14:08.980 --> 1:14:11.660\n like for electronic design automation.\n\n1:14:11.660 --> 1:14:13.220\n The problem with this is you have huge amounts\n\n1:14:13.220 --> 1:14:17.100\n of fragmentation, you have loose standards\n\n1:14:17.900 --> 1:14:20.060\n and the tools don't really work together.\n\n1:14:20.060 --> 1:14:21.300\n So you have tons of duct tape\n\n1:14:21.300 --> 1:14:24.260\n and you have tons of loss productivity.\n\n1:14:24.260 --> 1:14:26.740\n Now these are, these are tools for designing.\n\n1:14:26.740 --> 1:14:30.260\n So the RISC 5 is a instruction.\n\n1:14:30.260 --> 1:14:32.060\n Like what is RISC 5?\n\n1:14:32.060 --> 1:14:33.260\n Like how deep does it go?\n\n1:14:33.260 --> 1:14:35.940\n How much does it touch the hardware?\n\n1:14:35.940 --> 1:14:38.460\n How much does it define how much of the hardware is?\n\n1:14:38.460 --> 1:14:41.900\n Yeah, so RISC 5 is all about given a CPU.\n\n1:14:41.900 --> 1:14:44.900\n So the processor and your computer,\n\n1:14:44.900 --> 1:14:47.420\n how does the compiler like Swift compiler,\n\n1:14:47.420 --> 1:14:50.500\n the C compiler, things like this, how does it make it work?\n\n1:14:50.500 --> 1:14:52.700\n So it's, what is the assembly code?\n\n1:14:52.700 --> 1:14:54.180\n And so you write RISC 5 assembly\n\n1:14:54.180 --> 1:14:57.060\n instead of XA6 assembly, for example.\n\n1:14:57.060 --> 1:14:58.620\n But it's a set of instructions\n\n1:14:58.620 --> 1:15:00.060\n as opposed to instructions.\n\n1:15:00.060 --> 1:15:03.660\n Why do you say it tells you how the compiler works?\n\n1:15:03.660 --> 1:15:05.380\n Sorry, it's what the compiler talks to.\n\n1:15:05.380 --> 1:15:06.220\n Okay. Yeah.\n\n1:15:06.220 --> 1:15:08.500\n And then the tooling you mentioned\n\n1:15:08.500 --> 1:15:10.700\n that the disparate tools are for what?\n\n1:15:10.700 --> 1:15:13.340\n For when you're building a specific chip.\n\n1:15:13.340 --> 1:15:14.860\n So RISC 5. In hardware.\n\n1:15:14.860 --> 1:15:15.740\n In hardware, yeah.\n\n1:15:15.740 --> 1:15:19.140\n So RISC 5, you can buy a RISC 5 core from SciFive\n\n1:15:19.140 --> 1:15:21.660\n and say, hey, I want to have a certain number of,\n\n1:15:21.660 --> 1:15:23.380\n run a certain number of gigahertz.\n\n1:15:23.380 --> 1:15:24.660\n I want it to be this big.\n\n1:15:24.660 --> 1:15:26.820\n I want it to be, have these features.\n\n1:15:26.820 --> 1:15:29.860\n I want to have like, I want floating point or not,\n\n1:15:29.860 --> 1:15:30.780\n for example.\n\n1:15:31.860 --> 1:15:34.180\n And then what you get is you get a description\n\n1:15:34.180 --> 1:15:36.620\n of a CPU with those characteristics.\n\n1:15:36.620 --> 1:15:38.140\n Now, if you want to make a chip,\n\n1:15:38.140 --> 1:15:39.940\n you want to build like an iPhone chip\n\n1:15:39.940 --> 1:15:41.180\n or something like that, right?\n\n1:15:41.180 --> 1:15:42.740\n You have to take both the CPU,\n\n1:15:42.740 --> 1:15:44.380\n but then you have to talk to memory.\n\n1:15:44.380 --> 1:15:49.300\n You have to have timers, IOs, a GPU, other components.\n\n1:15:49.300 --> 1:15:51.380\n And so you need to pull all those things together\n\n1:15:51.380 --> 1:15:53.900\n into what's called an ASIC,\n\n1:15:53.900 --> 1:15:55.500\n an Application Specific Integrated Circuit.\n\n1:15:55.500 --> 1:15:56.860\n So a custom chip.\n\n1:15:56.860 --> 1:15:58.980\n And then you take that design\n\n1:15:58.980 --> 1:16:00.900\n and then you have to transform it into something\n\n1:16:00.900 --> 1:16:03.980\n that the fabs, like TSMC, for example,\n\n1:16:03.980 --> 1:16:06.740\n know how to take to production.\n\n1:16:06.740 --> 1:16:07.580\n Got it.\n\n1:16:07.580 --> 1:16:08.580\n So, but yeah, okay.\n\n1:16:08.580 --> 1:16:10.620\n And so that process, I will,\n\n1:16:11.820 --> 1:16:15.620\n I can't help but see it as, is a big compiler.\n\n1:16:15.620 --> 1:16:16.940\n Yeah, yeah.\n\n1:16:16.940 --> 1:16:18.860\n It's a whole bunch of compilers written\n\n1:16:18.860 --> 1:16:21.420\n without thinking about it through that lens.\n\n1:16:21.420 --> 1:16:23.700\n Isn't the universe a compiler?\n\n1:16:23.700 --> 1:16:26.820\n Yeah, compilers do two things.\n\n1:16:26.820 --> 1:16:29.140\n They represent things and transform them.\n\n1:16:29.140 --> 1:16:31.780\n And so there's a lot of things that end up being compilers.\n\n1:16:31.780 --> 1:16:34.700\n But this is a space where we're talking about design\n\n1:16:34.700 --> 1:16:37.460\n and usability and the way you think about things,\n\n1:16:37.460 --> 1:16:40.900\n the way things compose correctly, it matters a lot.\n\n1:16:40.900 --> 1:16:43.460\n And so SciFi is investing a lot into that space.\n\n1:16:43.460 --> 1:16:45.900\n And we think that there's a lot of benefit\n\n1:16:45.900 --> 1:16:48.980\n that can be made by allowing people to design chips faster,\n\n1:16:48.980 --> 1:16:52.020\n get them to market quicker and scale out\n\n1:16:52.020 --> 1:16:56.420\n because at the alleged end of Moore's law,\n\n1:16:56.420 --> 1:16:59.300\n you've got this problem of you're not getting\n\n1:16:59.300 --> 1:17:01.980\n free performance just by waiting another year\n\n1:17:01.980 --> 1:17:03.540\n for a faster CPU.\n\n1:17:03.540 --> 1:17:06.540\n And so you have to find performance in other ways.\n\n1:17:06.540 --> 1:17:09.100\n And one of the ways to do that is with custom accelerators\n\n1:17:09.100 --> 1:17:11.460\n and other things and hardware.\n\n1:17:11.460 --> 1:17:16.460\n And so, well, we'll talk a little more about ASICs,\n\n1:17:17.420 --> 1:17:21.980\n but do you see that a lot of people,\n\n1:17:21.980 --> 1:17:25.300\n a lot of companies will try to have\n\n1:17:25.300 --> 1:17:26.980\n different sets of requirements\n\n1:17:26.980 --> 1:17:28.380\n that this whole process to go for?\n\n1:17:28.380 --> 1:17:32.540\n So like almost different car companies might use different\n\n1:17:32.540 --> 1:17:35.660\n and like different PC manufacturers.\n\n1:17:35.660 --> 1:17:40.660\n So is RISC 5 in this whole process,\n\n1:17:40.660 --> 1:17:44.860\n is it potentially the future of all computing devices?\n\n1:17:44.860 --> 1:17:47.460\n Yeah, I think that, so if you look at RISC 5\n\n1:17:47.460 --> 1:17:49.660\n and step back from the Silicon side of things,\n\n1:17:49.660 --> 1:17:51.580\n RISC 5 is an open standard.\n\n1:17:51.580 --> 1:17:53.900\n And one of the things that has happened\n\n1:17:53.900 --> 1:17:55.460\n over the course of decades,\n\n1:17:55.460 --> 1:17:57.820\n if you look over the long arc of computing,\n\n1:17:57.820 --> 1:17:59.220\n somehow became decades old.\n\n1:17:59.220 --> 1:18:00.060\n Yeah.\n\n1:18:00.060 --> 1:18:02.700\n Is that you have companies that come and go\n\n1:18:02.700 --> 1:18:04.900\n and you have instruction sets that come and go.\n\n1:18:04.900 --> 1:18:09.900\n Like one example of this out of many is Sun with Spark.\n\n1:18:09.900 --> 1:18:11.260\n Yeah, it's on one way.\n\n1:18:11.260 --> 1:18:12.980\n Spark still lives on at Fujitsu,\n\n1:18:12.980 --> 1:18:17.340\n but we have HP had this instruction set called PA RISC.\n\n1:18:18.140 --> 1:18:21.020\n So PA RISC was this big server business\n\n1:18:21.020 --> 1:18:22.900\n and had tons of customers.\n\n1:18:22.900 --> 1:18:25.100\n They decided to move to this architecture\n\n1:18:25.100 --> 1:18:27.140\n called Itanium from Intel.\n\n1:18:27.140 --> 1:18:27.980\n Yeah.\n\n1:18:27.980 --> 1:18:29.620\n This didn't work out so well.\n\n1:18:29.620 --> 1:18:30.460\n Yeah.\n\n1:18:30.460 --> 1:18:32.940\n Right, and so you have this issue of\n\n1:18:32.940 --> 1:18:35.380\n you're making many billion dollar investments\n\n1:18:35.380 --> 1:18:38.220\n on instruction sets that are owned by a company.\n\n1:18:38.220 --> 1:18:39.740\n And even companies as big as Intel\n\n1:18:39.740 --> 1:18:42.460\n don't always execute as well as they could.\n\n1:18:42.460 --> 1:18:44.700\n They even have their own issues.\n\n1:18:44.700 --> 1:18:46.700\n HP, for example, decided that it wasn't\n\n1:18:46.700 --> 1:18:48.620\n in their best interest to continue investing in the space\n\n1:18:48.620 --> 1:18:49.700\n because it was very expensive.\n\n1:18:49.700 --> 1:18:52.180\n And so they make technology decisions\n\n1:18:52.180 --> 1:18:54.180\n or they make their own business decisions.\n\n1:18:54.180 --> 1:18:57.860\n And this means that as a customer, what do you do?\n\n1:18:57.860 --> 1:18:59.660\n You've sunk all this time, all this engineering,\n\n1:18:59.660 --> 1:19:01.300\n all this software work, all these,\n\n1:19:01.300 --> 1:19:02.540\n you've built other products around them\n\n1:19:02.540 --> 1:19:05.020\n and now you're stuck, right?\n\n1:19:05.020 --> 1:19:07.580\n What RISC 5 does is provide you more optionality\n\n1:19:07.580 --> 1:19:10.860\n in the space because if you buy an implementation\n\n1:19:10.860 --> 1:19:13.540\n of RISC 5 from SciFive, and you should,\n\n1:19:13.540 --> 1:19:14.380\n they're the best ones.\n\n1:19:14.380 --> 1:19:15.220\n Yeah.\n\n1:19:16.380 --> 1:19:19.460\n But if something bad happens to SciFive in 20 years, right?\n\n1:19:19.460 --> 1:19:21.220\n Well, great, you can turn around\n\n1:19:21.220 --> 1:19:23.300\n and buy a RISC 5 core from somebody else.\n\n1:19:23.300 --> 1:19:25.020\n And there's an ecosystem of people\n\n1:19:25.020 --> 1:19:26.620\n that are all making different RISC 5 cores\n\n1:19:26.620 --> 1:19:29.180\n with different trade offs, which means that\n\n1:19:29.180 --> 1:19:30.620\n if you have more than one requirement,\n\n1:19:30.620 --> 1:19:31.900\n if you have a family of products,\n\n1:19:31.900 --> 1:19:34.700\n you can probably find something in the RISC 5 space\n\n1:19:34.700 --> 1:19:36.020\n that fits your needs.\n\n1:19:36.020 --> 1:19:39.620\n Whereas with, if you're talking about XA6, for example,\n\n1:19:39.620 --> 1:19:41.340\n it's Intel's only gonna bother\n\n1:19:41.340 --> 1:19:45.060\n to make certain classes of devices, right?\n\n1:19:45.060 --> 1:19:47.740\n I see, so maybe a weird question,\n\n1:19:47.740 --> 1:19:52.740\n but like if SciFive is like infinitely successful\n\n1:19:54.820 --> 1:19:58.100\n in the next 20, 30 years, what does the world look like?\n\n1:19:58.100 --> 1:20:01.900\n So like how does the world of computing change?\n\n1:20:01.900 --> 1:20:05.340\n So too much diversity in hardware instruction sets,\n\n1:20:05.340 --> 1:20:06.540\n I think is bad.\n\n1:20:06.540 --> 1:20:08.660\n Like we have a lot of people that are using\n\n1:20:09.700 --> 1:20:10.980\n lots of different instruction sets,\n\n1:20:10.980 --> 1:20:12.260\n particularly in the embedded,\n\n1:20:12.260 --> 1:20:14.340\n the like very tiny microcontroller space,\n\n1:20:14.340 --> 1:20:19.340\n the thing in your toaster that are just weird\n\n1:20:19.580 --> 1:20:21.060\n and different for historical reasons.\n\n1:20:21.060 --> 1:20:23.100\n And so the compilers and the tool chains\n\n1:20:23.100 --> 1:20:27.140\n and the languages on top of them aren't there.\n\n1:20:27.140 --> 1:20:29.220\n And so the developers for that software\n\n1:20:29.220 --> 1:20:31.060\n have to use really weird tools\n\n1:20:31.060 --> 1:20:34.220\n because the ecosystem that supports is not big enough.\n\n1:20:34.220 --> 1:20:35.460\n So I expect that will change, right?\n\n1:20:35.460 --> 1:20:38.060\n People will have better tools and better languages,\n\n1:20:38.060 --> 1:20:39.460\n better features everywhere\n\n1:20:39.460 --> 1:20:42.300\n that then can serve as many different points in the space.\n\n1:20:43.300 --> 1:20:46.300\n And I think RISC5 will progressively\n\n1:20:46.300 --> 1:20:49.420\n eat more of the ecosystem because it can scale up,\n\n1:20:49.420 --> 1:20:51.620\n it can scale down, sideways, left, right.\n\n1:20:51.620 --> 1:20:53.860\n It's very flexible and very well considered\n\n1:20:53.860 --> 1:20:55.500\n and well designed instruction set.\n\n1:20:56.420 --> 1:20:58.820\n I think when you look at SciFive tackling silicon\n\n1:20:58.820 --> 1:21:00.020\n and how people build chips,\n\n1:21:00.020 --> 1:21:03.980\n which is a very different space,\n\n1:21:03.980 --> 1:21:05.180\n that's where you say,\n\n1:21:05.180 --> 1:21:07.540\n I think we'll see a lot more custom chips.\n\n1:21:07.540 --> 1:21:09.820\n And that means that you get much more battery life,\n\n1:21:09.820 --> 1:21:14.820\n you get better tuned solutions for your IoT thingy.\n\n1:21:16.220 --> 1:21:18.260\n You get people that move faster,\n\n1:21:18.260 --> 1:21:20.700\n you get the ability to have faster time to market,\n\n1:21:20.700 --> 1:21:21.540\n for example.\n\n1:21:21.540 --> 1:21:22.620\n So how many custom...\n\n1:21:22.620 --> 1:21:25.020\n So first of all, on the IoT side of things,\n\n1:21:25.020 --> 1:21:29.100\n do you see the number of smart toasters\n\n1:21:29.100 --> 1:21:30.260\n increasing exponentially?\n\n1:21:30.260 --> 1:21:35.260\n So, and if you do,\n\n1:21:35.460 --> 1:21:38.940\n like how much customization per toaster is there?\n\n1:21:38.940 --> 1:21:42.700\n Do all toasters in the world run the same silicon,\n\n1:21:42.700 --> 1:21:44.060\n like the same design,\n\n1:21:44.060 --> 1:21:46.060\n or is it different companies have different design?\n\n1:21:46.060 --> 1:21:49.700\n Like how much customization is possible here?\n\n1:21:49.700 --> 1:21:52.460\n Well, a lot of it comes down to cost, right?\n\n1:21:52.460 --> 1:21:56.100\n And so the way that chips work is you end up paying by the...\n\n1:21:56.100 --> 1:21:58.780\n One of the factors is the size of the chip.\n\n1:21:58.780 --> 1:22:01.380\n And so what ends up happening\n\n1:22:01.380 --> 1:22:03.180\n just from an economic perspective is\n\n1:22:03.180 --> 1:22:06.100\n there's only so many chips that get made in a year\n\n1:22:06.100 --> 1:22:07.340\n of a given design.\n\n1:22:07.340 --> 1:22:10.220\n And so often what customers end up having to do\n\n1:22:10.220 --> 1:22:12.260\n is they end up having to pick up a chip that exists\n\n1:22:12.260 --> 1:22:14.140\n that was built for somebody else\n\n1:22:14.140 --> 1:22:16.500\n so that they can then ship their product.\n\n1:22:16.500 --> 1:22:17.340\n And the reason for that\n\n1:22:17.340 --> 1:22:19.220\n is they don't have the volume of the iPhone.\n\n1:22:19.220 --> 1:22:21.700\n They can't afford to build a custom chip.\n\n1:22:21.700 --> 1:22:23.820\n However, what that means is they're now buying\n\n1:22:23.820 --> 1:22:26.900\n an off the shelf chip that isn't really good,\n\n1:22:26.900 --> 1:22:28.220\n isn't a perfect fit for their needs.\n\n1:22:28.220 --> 1:22:30.060\n And so they're paying a lot of money for it\n\n1:22:30.060 --> 1:22:33.500\n because they're buying silicon that they're not using.\n\n1:22:33.500 --> 1:22:36.580\n Well, if you now reduce the cost of designing the chip,\n\n1:22:36.580 --> 1:22:37.780\n now you get a lot more chips.\n\n1:22:37.780 --> 1:22:39.500\n And the more you reduce it,\n\n1:22:39.500 --> 1:22:42.340\n the easier it is to design chips.\n\n1:22:42.340 --> 1:22:44.340\n The more the world keeps evolving\n\n1:22:44.340 --> 1:22:45.740\n and we get more AI accelerators,\n\n1:22:45.740 --> 1:22:46.740\n we get more other things,\n\n1:22:46.740 --> 1:22:48.780\n we get more standards to talk to,\n\n1:22:48.780 --> 1:22:50.980\n we get 6G, right?\n\n1:22:50.980 --> 1:22:53.180\n You get changes in the world\n\n1:22:53.180 --> 1:22:54.780\n that you wanna be able to talk to these different things.\n\n1:22:54.780 --> 1:22:57.220\n There's more diversity in the cross product of features\n\n1:22:57.220 --> 1:22:58.460\n that people want.\n\n1:22:58.460 --> 1:23:02.140\n And that drives differentiated chips\n\n1:23:02.140 --> 1:23:03.300\n in another direction.\n\n1:23:03.300 --> 1:23:05.620\n And so nobody really knows what the future looks like,\n\n1:23:05.620 --> 1:23:09.780\n but I think that there's a lot of silicon in the future.\n\n1:23:09.780 --> 1:23:11.180\n Speaking of the future,\n\n1:23:11.180 --> 1:23:13.740\n you said Moore's law allegedly is dead.\n\n1:23:13.740 --> 1:23:18.740\n So do you agree with Dave Patterson and many folks\n\n1:23:20.340 --> 1:23:22.100\n that Moore's law is dead?\n\n1:23:22.100 --> 1:23:23.940\n Or do you agree with Jim Keller,\n\n1:23:23.940 --> 1:23:28.620\n who's standing at the helm of the pirate ship\n\n1:23:28.620 --> 1:23:31.620\n saying it's still alive?\n\n1:23:31.620 --> 1:23:32.460\n Yeah.\n\n1:23:32.460 --> 1:23:35.700\n Well, so I agree with what they're saying\n\n1:23:35.700 --> 1:23:37.780\n and different people are interpreting\n\n1:23:37.780 --> 1:23:39.340\n the end of Moore's law in different ways.\n\n1:23:39.340 --> 1:23:40.180\n Yeah.\n\n1:23:40.180 --> 1:23:41.020\n So Jim would say,\n\n1:23:41.020 --> 1:23:44.180\n there's another thousand X left in physics\n\n1:23:44.180 --> 1:23:46.900\n and we can continue to squeeze the stone\n\n1:23:46.900 --> 1:23:50.060\n and make it faster and smaller and smaller geometries\n\n1:23:50.060 --> 1:23:51.380\n and all that kind of stuff.\n\n1:23:52.340 --> 1:23:53.500\n He's right.\n\n1:23:53.500 --> 1:23:55.220\n So Jim is absolutely right\n\n1:23:55.220 --> 1:23:57.820\n that there's a ton of progress left\n\n1:23:57.820 --> 1:23:59.980\n and we're not at the limit of physics yet.\n\n1:24:01.700 --> 1:24:03.980\n That's not really what Moore's law is though.\n\n1:24:04.940 --> 1:24:06.620\n If you look at what Moore's law is,\n\n1:24:06.620 --> 1:24:10.660\n is that it's a very simple evaluation of,\n\n1:24:10.660 --> 1:24:13.580\n okay, well you look at the cost per,\n\n1:24:13.580 --> 1:24:14.980\n I think it was cost per area\n\n1:24:14.980 --> 1:24:17.020\n and the most economic point in that space.\n\n1:24:17.020 --> 1:24:20.020\n And if you go look at the now quite old paper\n\n1:24:20.020 --> 1:24:21.860\n that describes this,\n\n1:24:21.860 --> 1:24:25.460\n Moore's law has a specific economic aspect to it\n\n1:24:25.460 --> 1:24:26.380\n and I think this is something\n\n1:24:26.380 --> 1:24:28.220\n that Dave and others often point out.\n\n1:24:28.220 --> 1:24:30.540\n And so on a technicality, that's right.\n\n1:24:31.380 --> 1:24:33.300\n I look at it from,\n\n1:24:33.300 --> 1:24:34.980\n so I can acknowledge both of those viewpoints.\n\n1:24:34.980 --> 1:24:35.820\n They're both right.\n\n1:24:35.820 --> 1:24:36.660\n They're both right.\n\n1:24:36.660 --> 1:24:39.140\n I'll give you a third wrong viewpoint\n\n1:24:39.140 --> 1:24:40.300\n that may be right in its own way,\n\n1:24:40.300 --> 1:24:43.020\n which is single threaded performance\n\n1:24:44.060 --> 1:24:46.020\n doesn't improve like it used to.\n\n1:24:46.020 --> 1:24:48.460\n And it used to be back when you got a,\n\n1:24:48.460 --> 1:24:50.580\n you know, a Pentium 66 or something\n\n1:24:50.580 --> 1:24:53.820\n and the year before you had a Pentium 33\n\n1:24:53.820 --> 1:24:56.740\n and now it's twice as fast, right?\n\n1:24:56.740 --> 1:25:00.380\n Well, it was twice as fast at doing exactly the same thing.\n\n1:25:00.380 --> 1:25:03.820\n Okay, like literally the same program ran twice as fast.\n\n1:25:03.820 --> 1:25:07.020\n You just wrote a check and waited a year, year and a half.\n\n1:25:07.020 --> 1:25:10.100\n Well, so that's what a lot of people think about Moore's law\n\n1:25:10.100 --> 1:25:11.780\n and I think that is dead.\n\n1:25:11.780 --> 1:25:15.260\n And so what we're seeing instead is we're pushing,\n\n1:25:15.260 --> 1:25:17.260\n we're pushing people to write software in different ways.\n\n1:25:17.260 --> 1:25:19.060\n And so we're pushing people to write CUDA\n\n1:25:19.060 --> 1:25:20.980\n so they can get GPU compute\n\n1:25:20.980 --> 1:25:23.420\n and the thousands of cores on GPU.\n\n1:25:23.420 --> 1:25:26.380\n We're talking about C programmers having to use P threads\n\n1:25:26.380 --> 1:25:27.860\n because they now have, you know,\n\n1:25:27.860 --> 1:25:30.460\n a hundred threads or 50 cores in a machine\n\n1:25:30.460 --> 1:25:31.980\n or something like that.\n\n1:25:31.980 --> 1:25:33.660\n You're now talking about machine learning accelerators\n\n1:25:33.660 --> 1:25:35.100\n that are now domain specific.\n\n1:25:35.100 --> 1:25:38.460\n And when you look at these kinds of use cases,\n\n1:25:38.460 --> 1:25:40.460\n you can still get performance\n\n1:25:40.460 --> 1:25:42.660\n and Jim will come up with cool things\n\n1:25:42.660 --> 1:25:45.780\n that utilize the silicon in new ways for sure,\n\n1:25:45.780 --> 1:25:48.420\n but you're also gonna change the programming model.\n\n1:25:48.420 --> 1:25:49.260\n Right.\n\n1:25:49.260 --> 1:25:50.140\n And now when you start talking about changing\n\n1:25:50.140 --> 1:25:50.980\n the programming model,\n\n1:25:50.980 --> 1:25:53.060\n that's when you come back to languages\n\n1:25:53.060 --> 1:25:54.020\n and things like this too,\n\n1:25:54.020 --> 1:25:58.500\n because often what you see is like you take\n\n1:25:58.500 --> 1:25:59.820\n the C programming language, right?\n\n1:25:59.820 --> 1:26:02.220\n The C programming language is designed for CPUs.\n\n1:26:03.340 --> 1:26:04.980\n And so if you want to talk to a GPU,\n\n1:26:04.980 --> 1:26:08.820\n now you're talking to its cousin CUDA, okay?\n\n1:26:08.820 --> 1:26:11.900\n CUDA is a different thing with a different set of tools,\n\n1:26:11.900 --> 1:26:14.380\n a different world, a different way of thinking.\n\n1:26:14.380 --> 1:26:16.940\n And we don't have one world that scales.\n\n1:26:16.940 --> 1:26:18.460\n And I think that we can get there.\n\n1:26:18.460 --> 1:26:21.020\n We can have one world that scales in a much better way.\n\n1:26:21.020 --> 1:26:22.500\n And a small tangent then,\n\n1:26:22.500 --> 1:26:25.940\n I think most programming languages are designed for CPUs,\n\n1:26:25.940 --> 1:26:28.900\n for single core, even just in their spirit,\n\n1:26:28.900 --> 1:26:30.460\n even if they allow for parallelization.\n\n1:26:30.460 --> 1:26:34.140\n So what does it look like for a programming language\n\n1:26:34.140 --> 1:26:38.660\n to have parallelization or massive parallelization\n\n1:26:38.660 --> 1:26:41.300\n as it's like first principle?\n\n1:26:41.300 --> 1:26:43.540\n So the canonical example of this\n\n1:26:43.540 --> 1:26:46.380\n is the hardware design world.\n\n1:26:46.380 --> 1:26:50.020\n So Verilog, VHDL, these kinds of languages,\n\n1:26:50.020 --> 1:26:53.500\n they're what's called a high level synthesis language.\n\n1:26:53.500 --> 1:26:56.860\n This is the thing people design chips in.\n\n1:26:56.860 --> 1:26:58.140\n And when you're designing a chip,\n\n1:26:58.140 --> 1:27:02.660\n it's kind of like a brain where you have infinite parallelism.\n\n1:27:02.660 --> 1:27:05.580\n Like you're like laying down transistors.\n\n1:27:05.580 --> 1:27:08.340\n Transistors are always running, okay?\n\n1:27:08.340 --> 1:27:10.260\n And so you're not saying run this transistor,\n\n1:27:10.260 --> 1:27:12.300\n then this transistor, then this transistor.\n\n1:27:12.300 --> 1:27:13.140\n It's like your brain,\n\n1:27:13.140 --> 1:27:15.300\n like your neurons are always just doing something.\n\n1:27:15.300 --> 1:27:16.780\n They're not clocked, right?\n\n1:27:16.780 --> 1:27:20.180\n They're just doing their thing.\n\n1:27:20.180 --> 1:27:23.540\n And so when you design a chip or when you design a CPU,\n\n1:27:23.540 --> 1:27:25.180\n when you design a GPU, when you design,\n\n1:27:25.180 --> 1:27:27.260\n when you're laying down the transistors,\n\n1:27:27.260 --> 1:27:28.460\n similarly, you're talking about,\n\n1:27:28.460 --> 1:27:31.300\n well, okay, well, how do these things communicate?\n\n1:27:31.300 --> 1:27:32.740\n And so these languages exist.\n\n1:27:32.740 --> 1:27:36.140\n Verilog is a kind of mixed example of that.\n\n1:27:36.140 --> 1:27:37.620\n None of these languages are really great.\n\n1:27:37.620 --> 1:27:39.580\n You have a very low level, yeah.\n\n1:27:39.580 --> 1:27:40.660\n Yeah, they're very low level\n\n1:27:40.660 --> 1:27:42.540\n and abstraction is necessary here.\n\n1:27:42.540 --> 1:27:44.500\n And there's different approaches with that.\n\n1:27:44.500 --> 1:27:47.340\n And it's itself a very complicated world,\n\n1:27:47.340 --> 1:27:50.620\n but it's implicitly parallel.\n\n1:27:50.620 --> 1:27:55.620\n And so having that as the domain that you program towards\n\n1:27:56.220 --> 1:27:59.460\n makes it so that by default, you get parallel systems.\n\n1:27:59.460 --> 1:28:00.300\n If you look at CUDA,\n\n1:28:00.300 --> 1:28:03.660\n CUDA is a point halfway in the space where in CUDA,\n\n1:28:03.660 --> 1:28:05.940\n when you write a CUDA kernel for your GPU,\n\n1:28:05.940 --> 1:28:08.100\n it feels like you're writing a scalar program.\n\n1:28:08.100 --> 1:28:10.020\n So you're like, you have ifs, you have for loops,\n\n1:28:10.020 --> 1:28:12.620\n stuff like this, you're just writing normal code.\n\n1:28:12.620 --> 1:28:14.820\n But what happens outside of that in your driver\n\n1:28:14.820 --> 1:28:16.180\n is that it actually is running you\n\n1:28:16.180 --> 1:28:18.900\n on like a thousand things at once, right?\n\n1:28:18.900 --> 1:28:20.580\n And so it's parallel,\n\n1:28:20.580 --> 1:28:23.020\n but it has pulled it out of the programming model.\n\n1:28:23.900 --> 1:28:28.460\n And so now you as a programmer are working in a simpler world\n\n1:28:28.460 --> 1:28:31.540\n and it's solved that for you, right?\n\n1:28:31.540 --> 1:28:33.780\n How do you take the language like Swift?\n\n1:28:36.420 --> 1:28:39.060\n If we think about GPUs, but also ASICs,\n\n1:28:39.060 --> 1:28:40.900\n maybe if we can dance back and forth\n\n1:28:40.900 --> 1:28:42.500\n between hardware and software.\n\n1:28:42.500 --> 1:28:46.740\n How do you design for these features\n\n1:28:46.740 --> 1:28:50.060\n to be able to program and get a first class citizen\n\n1:28:50.060 --> 1:28:53.100\n to be able to do like Swift for TensorFlow\n\n1:28:53.100 --> 1:28:56.660\n to be able to do machine learning on current hardware,\n\n1:28:56.660 --> 1:28:59.700\n but also future hardware like TPUs\n\n1:28:59.700 --> 1:29:00.660\n and all kinds of ASICs\n\n1:29:00.660 --> 1:29:02.220\n that I'm sure will be popping up more and more.\n\n1:29:02.220 --> 1:29:04.380\n Yeah, well, so a lot of this comes down\n\n1:29:04.380 --> 1:29:06.540\n to this whole idea of having the nuts and bolts\n\n1:29:06.540 --> 1:29:08.660\n underneath the covers that work really well.\n\n1:29:08.660 --> 1:29:10.420\n So you need, if you're talking to TPUs,\n\n1:29:10.420 --> 1:29:13.780\n you need MLIR or XLA or one of these compilers\n\n1:29:13.780 --> 1:29:17.420\n that talks to TPUs to build on top of, okay?\n\n1:29:17.420 --> 1:29:19.340\n And if you're talking to circuits,\n\n1:29:19.340 --> 1:29:21.500\n you need to figure out how to lay down the transistors\n\n1:29:21.500 --> 1:29:23.300\n and how to organize it and how to set up clocking\n\n1:29:23.300 --> 1:29:24.460\n and like all the domain problems\n\n1:29:24.460 --> 1:29:26.180\n that you get with circuits.\n\n1:29:27.420 --> 1:29:29.780\n Then you have to decide how to explain it to a human.\n\n1:29:29.780 --> 1:29:31.820\n What is ZY, right?\n\n1:29:31.820 --> 1:29:34.460\n And if you do it right, that's a library problem,\n\n1:29:34.460 --> 1:29:36.420\n not a language problem.\n\n1:29:36.420 --> 1:29:39.060\n And that works if you have a library or a language\n\n1:29:39.060 --> 1:29:42.140\n which allows your library to write things\n\n1:29:42.140 --> 1:29:45.820\n that feel native in the language by implementing libraries,\n\n1:29:45.820 --> 1:29:49.220\n because then you can innovate in programming models\n\n1:29:49.220 --> 1:29:51.220\n without having to change your syntax again.\n\n1:29:51.220 --> 1:29:54.860\n Like you have to invent new code formatting tools\n\n1:29:54.860 --> 1:29:57.500\n and like all the other things that languages come with.\n\n1:29:57.500 --> 1:29:59.940\n And this gets really interesting.\n\n1:29:59.940 --> 1:30:02.300\n And so if you look at the space,\n\n1:30:02.300 --> 1:30:05.820\n the interesting thing once you separate out syntax\n\n1:30:05.820 --> 1:30:07.860\n becomes what is that programming model?\n\n1:30:07.860 --> 1:30:10.260\n And so do you want the CUDA style?\n\n1:30:10.260 --> 1:30:12.780\n I write one program and it runs many places.\n\n1:30:14.340 --> 1:30:16.820\n Do you want the implicitly parallel model?\n\n1:30:16.820 --> 1:30:17.780\n How do you reason about that?\n\n1:30:17.780 --> 1:30:20.780\n How do you give developers, chip architects,\n\n1:30:20.780 --> 1:30:24.100\n the ability to express their intent?\n\n1:30:24.100 --> 1:30:26.300\n And that comes into this whole design question\n\n1:30:26.300 --> 1:30:29.180\n of how do you detect bugs quickly?\n\n1:30:29.180 --> 1:30:30.260\n So you don't have to tape out a chip\n\n1:30:30.260 --> 1:30:32.620\n to find out it's wrong, ideally, right?\n\n1:30:32.620 --> 1:30:35.540\n How do you, and this is a spectrum,\n\n1:30:35.540 --> 1:30:38.500\n how do you make it so that people feel productive?\n\n1:30:38.500 --> 1:30:40.460\n So their turnaround time is very quick.\n\n1:30:40.460 --> 1:30:42.420\n All these things are really hard problems.\n\n1:30:42.420 --> 1:30:46.100\n And in this world, I think that not a lot of effort\n\n1:30:46.100 --> 1:30:48.060\n has been put into that design problem\n\n1:30:48.060 --> 1:30:51.140\n and thinking about the layering in other pieces.\n\n1:30:51.140 --> 1:30:53.500\n Well, you've, on the topic of concurrency,\n\n1:30:53.500 --> 1:30:55.580\n you've written the Swift concurrency manifest.\n\n1:30:55.580 --> 1:30:57.620\n I think it's kind of interesting.\n\n1:30:57.620 --> 1:31:00.620\n Anything that has the word manifest on it\n\n1:31:00.620 --> 1:31:02.380\n is very interesting.\n\n1:31:02.380 --> 1:31:06.140\n Can you summarize the key ideas of each of the five parts\n\n1:31:06.140 --> 1:31:07.380\n you've written about?\n\n1:31:07.380 --> 1:31:08.900\n So what is a manifesto?\n\n1:31:08.900 --> 1:31:09.740\n Yes.\n\n1:31:09.740 --> 1:31:11.820\n How about, we start there.\n\n1:31:11.820 --> 1:31:15.180\n So in the Swift community, we have this problem,\n\n1:31:15.180 --> 1:31:16.100\n which is on the one hand,\n\n1:31:16.100 --> 1:31:19.300\n you wanna have relatively small proposals\n\n1:31:19.300 --> 1:31:21.420\n that you can kind of fit in your head,\n\n1:31:21.420 --> 1:31:24.100\n you can understand the details at a very fine grain level\n\n1:31:24.100 --> 1:31:26.020\n that move the world forward.\n\n1:31:26.020 --> 1:31:28.900\n But then you also have these big arcs, okay?\n\n1:31:28.900 --> 1:31:30.820\n And often when you're working on something\n\n1:31:30.820 --> 1:31:34.060\n that is a big arc, but you're tackling it in small pieces,\n\n1:31:34.060 --> 1:31:35.180\n you have this question of,\n\n1:31:35.180 --> 1:31:37.580\n how do I know I'm not doing a random walk?\n\n1:31:37.580 --> 1:31:38.780\n Where are we going?\n\n1:31:38.780 --> 1:31:39.740\n How does this add up?\n\n1:31:39.740 --> 1:31:43.580\n Furthermore, when you start the first small step,\n\n1:31:43.580 --> 1:31:45.300\n what terminology do you use?\n\n1:31:45.300 --> 1:31:46.580\n How do we think about it?\n\n1:31:46.580 --> 1:31:47.940\n What is better and worse in the space?\n\n1:31:47.940 --> 1:31:48.780\n What are the principles?\n\n1:31:48.780 --> 1:31:50.100\n What are we trying to achieve?\n\n1:31:50.100 --> 1:31:52.060\n And so what a manifesto in the Swift community does\n\n1:31:52.060 --> 1:31:53.220\n is it starts to say,\n\n1:31:53.220 --> 1:31:56.620\n hey, well, let's step back from the details of everything.\n\n1:31:56.620 --> 1:31:58.700\n Let's paint a broad picture to talk about\n\n1:31:58.700 --> 1:32:01.300\n what we're trying to achieve.\n\n1:32:01.300 --> 1:32:02.780\n Let's give an example design point.\n\n1:32:02.780 --> 1:32:05.260\n Let's try to paint the big picture\n\n1:32:05.260 --> 1:32:07.380\n so that then we can zero in on the individual steps\n\n1:32:07.380 --> 1:32:09.660\n and make sure that we're making good progress.\n\n1:32:09.660 --> 1:32:11.220\n And so the Swift concurrency manifesto\n\n1:32:11.220 --> 1:32:13.860\n is something I wrote three years ago.\n\n1:32:13.860 --> 1:32:16.260\n It's been a while, maybe more.\n\n1:32:16.260 --> 1:32:18.660\n Trying to do that for Swift and concurrency.\n\n1:32:19.740 --> 1:32:22.420\n It starts with some fairly simple things\n\n1:32:22.420 --> 1:32:23.980\n like making the observation that\n\n1:32:25.060 --> 1:32:26.740\n when you have multiple different computers\n\n1:32:26.740 --> 1:32:28.940\n and multiple different threads that are communicating,\n\n1:32:28.940 --> 1:32:30.860\n it's best for them to be asynchronous.\n\n1:32:32.020 --> 1:32:34.540\n And so you need things to be able to run separately\n\n1:32:34.540 --> 1:32:35.820\n and then communicate with each other.\n\n1:32:35.820 --> 1:32:37.420\n And this means asynchrony.\n\n1:32:37.420 --> 1:32:38.980\n And this means that you need a way\n\n1:32:38.980 --> 1:32:41.740\n to modeling asynchronous communication.\n\n1:32:41.740 --> 1:32:43.700\n Many languages have features like this.\n\n1:32:43.700 --> 1:32:45.420\n Async await is a popular one.\n\n1:32:45.420 --> 1:32:48.220\n And so that's what I think is very likely in Swift.\n\n1:32:49.220 --> 1:32:51.380\n But as you start building this tower of abstractions,\n\n1:32:51.380 --> 1:32:53.660\n it's not just about how do you write this,\n\n1:32:53.660 --> 1:32:57.460\n you then reach into the how do you get memory safety\n\n1:32:57.460 --> 1:32:58.380\n because you want correctness,\n\n1:32:58.380 --> 1:33:01.700\n you want debuggability and sanity for developers.\n\n1:33:01.700 --> 1:33:06.620\n And how do you get that memory safety into the language?\n\n1:33:06.620 --> 1:33:09.020\n So if you take a language like Go or C\n\n1:33:09.020 --> 1:33:10.420\n or any of these languages,\n\n1:33:10.420 --> 1:33:11.940\n you get what's called a race condition\n\n1:33:11.940 --> 1:33:14.900\n when two different threads or Go routines or whatever\n\n1:33:14.900 --> 1:33:17.380\n touch the same point in memory, right?\n\n1:33:17.380 --> 1:33:21.260\n This is a huge like maddening problem to debug\n\n1:33:21.260 --> 1:33:24.500\n because it's not reproducible generally.\n\n1:33:24.500 --> 1:33:25.540\n And so there's tools,\n\n1:33:25.540 --> 1:33:27.020\n there's a whole ecosystem of solutions\n\n1:33:27.020 --> 1:33:28.300\n that built up around this,\n\n1:33:28.300 --> 1:33:29.700\n but it's a huge problem\n\n1:33:29.700 --> 1:33:31.060\n when you're writing concurrent code.\n\n1:33:31.060 --> 1:33:33.100\n And so with Swift,\n\n1:33:33.100 --> 1:33:35.460\n this whole value semantics thing is really powerful there\n\n1:33:35.460 --> 1:33:39.060\n because it turns out that math and copies actually work\n\n1:33:39.060 --> 1:33:40.700\n even in concurrent worlds.\n\n1:33:40.700 --> 1:33:43.300\n And so you get a lot of safety just out of the box,\n\n1:33:43.300 --> 1:33:44.620\n but there are also some hard problems.\n\n1:33:44.620 --> 1:33:47.020\n And it talks about some of that.\n\n1:33:47.020 --> 1:33:48.820\n When you start building up to the next level up\n\n1:33:48.820 --> 1:33:50.540\n and you start talking beyond memory safety,\n\n1:33:50.540 --> 1:33:53.020\n you have to talk about what is the programmer model?\n\n1:33:53.020 --> 1:33:54.300\n How does a human think about this?\n\n1:33:54.300 --> 1:33:56.820\n So a developer that's trying to build a program\n\n1:33:56.820 --> 1:33:57.660\n think about this,\n\n1:33:57.660 --> 1:34:01.060\n and it proposes a really old model with a new spin\n\n1:34:01.060 --> 1:34:02.100\n called Actors.\n\n1:34:02.100 --> 1:34:03.980\n Actors are about saying,\n\n1:34:03.980 --> 1:34:08.180\n we have islands of single threadedness logically.\n\n1:34:08.180 --> 1:34:09.380\n So you write something that feels like\n\n1:34:09.380 --> 1:34:13.260\n it's one program running in a unit,\n\n1:34:13.260 --> 1:34:16.740\n and then it communicates asynchronously with other things.\n\n1:34:16.740 --> 1:34:19.860\n And so making that expressive and natural feel good\n\n1:34:19.860 --> 1:34:22.420\n be the first thing you reach for and being safe by default\n\n1:34:22.420 --> 1:34:25.620\n is a big part of the design of that proposal.\n\n1:34:25.620 --> 1:34:26.740\n When you start going beyond that,\n\n1:34:26.740 --> 1:34:27.740\n now you start to say, cool,\n\n1:34:27.740 --> 1:34:30.140\n well, these things that communicate asynchronously,\n\n1:34:30.140 --> 1:34:32.020\n they don't have to share memory.\n\n1:34:32.020 --> 1:34:33.260\n Well, if they don't have to share memory\n\n1:34:33.260 --> 1:34:35.100\n and they're sending messages to each other,\n\n1:34:35.100 --> 1:34:37.100\n why do they have to be in the same process?\n\n1:34:38.220 --> 1:34:40.500\n These things should be able to be in different processes\n\n1:34:40.500 --> 1:34:41.740\n on your machine.\n\n1:34:41.740 --> 1:34:43.060\n And why just processes?\n\n1:34:43.060 --> 1:34:44.660\n Well, why not different machines?\n\n1:34:44.660 --> 1:34:47.740\n And so now you have a very nice gradual transition\n\n1:34:47.740 --> 1:34:49.780\n towards distributed programming.\n\n1:34:49.780 --> 1:34:53.060\n And of course, when you start talking about the big future,\n\n1:34:53.060 --> 1:34:55.020\n the manifesto doesn't go into it,\n\n1:34:55.020 --> 1:35:00.020\n but accelerators are things you talk to asynchronously\n\n1:35:00.180 --> 1:35:01.900\n by sending messages to them.\n\n1:35:01.900 --> 1:35:03.900\n And how do you program those?\n\n1:35:03.900 --> 1:35:05.820\n Well, that gets very interesting.\n\n1:35:05.820 --> 1:35:07.580\n That's not in the proposal.\n\n1:35:07.580 --> 1:35:12.500\n And how much do you wanna make that explicit\n\n1:35:12.500 --> 1:35:14.700\n like the control of that whole process\n\n1:35:14.700 --> 1:35:15.780\n explicit to the program?\n\n1:35:15.780 --> 1:35:16.860\n Yeah, good question.\n\n1:35:16.860 --> 1:35:20.540\n So when you're designing any of these kinds of features\n\n1:35:20.540 --> 1:35:22.900\n or language features or even libraries,\n\n1:35:22.900 --> 1:35:25.300\n you have this really hard trade off you have to make,\n\n1:35:25.300 --> 1:35:27.420\n which is how much is it magic\n\n1:35:27.420 --> 1:35:29.740\n or how much is it in the human's control?\n\n1:35:29.740 --> 1:35:32.380\n How much can they predict and control it?\n\n1:35:32.380 --> 1:35:36.260\n What do you do when the default case is the wrong case?\n\n1:35:37.820 --> 1:35:39.820\n And so when you're designing a system,\n\n1:35:39.820 --> 1:35:44.820\n and so when you're designing a system, I won't name names,\n\n1:35:45.060 --> 1:35:50.060\n but there are systems where it's really easy to get started\n\n1:35:50.980 --> 1:35:52.620\n and then you jump.\n\n1:35:52.620 --> 1:35:54.100\n So let's pick like logo.\n\n1:35:54.100 --> 1:35:55.580\n Okay, so something like this.\n\n1:35:55.580 --> 1:35:57.140\n So it's really easy to get started.\n\n1:35:57.140 --> 1:35:59.540\n It's really designed for teaching kids,\n\n1:35:59.540 --> 1:36:02.060\n but as you get into it, you hit a ceiling\n\n1:36:02.060 --> 1:36:03.180\n and then you can't go any higher.\n\n1:36:03.180 --> 1:36:04.100\n And then what do you do?\n\n1:36:04.100 --> 1:36:05.580\n Well, you have to go switch to a different world\n\n1:36:05.580 --> 1:36:07.140\n and rewrite all your code.\n\n1:36:07.140 --> 1:36:09.100\n And this logo is a silly example here.\n\n1:36:09.100 --> 1:36:11.380\n This exists in many other languages.\n\n1:36:11.380 --> 1:36:15.260\n With Python, you would say like concurrency, right?\n\n1:36:15.260 --> 1:36:17.340\n So Python has the global interpreter block.\n\n1:36:17.340 --> 1:36:19.460\n So threading is challenging in Python.\n\n1:36:19.460 --> 1:36:22.620\n And so if you start writing a large scale application\n\n1:36:22.620 --> 1:36:25.140\n in Python, and then suddenly you need concurrency,\n\n1:36:25.140 --> 1:36:28.380\n you're kind of stuck with a series of bad trade offs, right?\n\n1:36:30.420 --> 1:36:32.220\n There's other ways to go where you say like,\n\n1:36:32.220 --> 1:36:37.020\n foist all the complexity on the user all at once, right?\n\n1:36:37.020 --> 1:36:38.820\n And that's also bad in a different way.\n\n1:36:38.820 --> 1:36:43.460\n And so what I prefer is building a simple model\n\n1:36:43.460 --> 1:36:46.940\n that you can explain that then has an escape hatch.\n\n1:36:46.940 --> 1:36:49.500\n So you get in, you have guardrails,\n\n1:36:50.580 --> 1:36:52.100\n memory safety works like this in Swift,\n\n1:36:52.100 --> 1:36:54.860\n where you can start with, like by default,\n\n1:36:54.860 --> 1:36:57.140\n if you use all the standard things, it's memory safe,\n\n1:36:57.140 --> 1:36:58.620\n you're not gonna shoot your foot off.\n\n1:36:58.620 --> 1:37:02.300\n But if you wanna get a C level pointer to something,\n\n1:37:02.300 --> 1:37:04.300\n you can explicitly do that.\n\n1:37:04.300 --> 1:37:07.740\n But by default, there's guardrails.\n\n1:37:07.740 --> 1:37:08.900\n There's guardrails.\n\n1:37:08.900 --> 1:37:13.900\n Okay, so but like, whose job is it to figure out\n\n1:37:14.300 --> 1:37:16.300\n which part of the code is parallelizable?\n\n1:37:17.420 --> 1:37:21.020\n So in the case of the proposal, it is the human's job.\n\n1:37:21.020 --> 1:37:24.220\n So they decide how to architect their application.\n\n1:37:24.220 --> 1:37:28.180\n And then the runtime in the compiler is very predictable.\n\n1:37:29.060 --> 1:37:31.860\n And so this is in contrast to like,\n\n1:37:31.860 --> 1:37:34.180\n there's a long body of work, including on Fortran\n\n1:37:34.180 --> 1:37:36.020\n for auto parallelizing compilers.\n\n1:37:36.020 --> 1:37:39.540\n And this is an example of a bad thing in my,\n\n1:37:39.540 --> 1:37:42.940\n so as a compiler person, I can drag on compiler people.\n\n1:37:42.940 --> 1:37:45.100\n Often compiler people will say,\n\n1:37:45.100 --> 1:37:46.740\n cool, since I can't change the code,\n\n1:37:46.740 --> 1:37:48.500\n I'm gonna write my compiler that then takes\n\n1:37:48.500 --> 1:37:52.060\n this unmodified code and makes go way faster on this machine.\n\n1:37:52.060 --> 1:37:55.700\n Okay, application, and so it does pattern matching.\n\n1:37:55.700 --> 1:37:57.780\n It does like really deep analysis.\n\n1:37:57.780 --> 1:37:58.980\n Compiler people are really smart.\n\n1:37:58.980 --> 1:38:00.820\n And so they like wanna like do something\n\n1:38:00.820 --> 1:38:01.820\n really clever and tricky.\n\n1:38:01.820 --> 1:38:04.500\n And you get like 10X speed up by taking\n\n1:38:04.500 --> 1:38:06.540\n like an array of structures and turn it\n\n1:38:06.540 --> 1:38:08.100\n into a structure of arrays or something,\n\n1:38:08.100 --> 1:38:09.340\n because it's so much better for memory.\n\n1:38:09.340 --> 1:38:11.780\n Like there's bodies, like tons of tricks.\n\n1:38:12.660 --> 1:38:13.860\n They love optimization.\n\n1:38:13.860 --> 1:38:14.980\n Yeah, you love optimization.\n\n1:38:14.980 --> 1:38:15.820\n Everyone loves optimization.\n\n1:38:15.820 --> 1:38:16.660\n Everyone loves it.\n\n1:38:16.660 --> 1:38:19.100\n Well, and it's this promise of build with my compiler\n\n1:38:19.100 --> 1:38:20.980\n and your thing goes fast, right?\n\n1:38:20.980 --> 1:38:24.740\n But here's the problem, Lex, you write a program,\n\n1:38:24.740 --> 1:38:26.580\n you run it with my compiler, it goes fast.\n\n1:38:26.580 --> 1:38:27.420\n You're very happy.\n\n1:38:27.420 --> 1:38:29.500\n Wow, it's so much faster than the other compiler.\n\n1:38:29.500 --> 1:38:31.260\n Then you go and you add a feature to your program\n\n1:38:31.260 --> 1:38:32.700\n or you refactor some code.\n\n1:38:32.700 --> 1:38:35.740\n And suddenly you got a 10X loss in performance.\n\n1:38:35.740 --> 1:38:36.580\n Well, why?\n\n1:38:36.580 --> 1:38:37.580\n What just happened there?\n\n1:38:37.580 --> 1:38:39.860\n What just happened there is the heuristic,\n\n1:38:39.860 --> 1:38:41.980\n the pattern matching, the compiler,\n\n1:38:41.980 --> 1:38:43.940\n whatever analysis it was doing just got defeated\n\n1:38:43.940 --> 1:38:48.220\n because you didn't inline a function or something, right?\n\n1:38:48.220 --> 1:38:50.260\n As a user, you don't know, you don't wanna know.\n\n1:38:50.260 --> 1:38:51.100\n That was the whole point.\n\n1:38:51.100 --> 1:38:52.820\n You don't wanna know how the compiler works.\n\n1:38:52.820 --> 1:38:54.580\n You don't wanna know how the memory hierarchy works.\n\n1:38:54.580 --> 1:38:56.060\n You don't wanna know how it got parallelized\n\n1:38:56.060 --> 1:38:57.380\n across all these things.\n\n1:38:57.380 --> 1:38:59.900\n You wanted that abstracted away from you,\n\n1:38:59.900 --> 1:39:02.900\n but then the magic is lost as soon as you did something\n\n1:39:02.900 --> 1:39:05.060\n and you fall off a performance cliff.\n\n1:39:05.060 --> 1:39:06.700\n And now you're in this funny position\n\n1:39:06.700 --> 1:39:08.060\n where what do I do?\n\n1:39:08.060 --> 1:39:09.060\n I don't change my code.\n\n1:39:09.060 --> 1:39:10.900\n I don't fix that bug.\n\n1:39:10.900 --> 1:39:12.380\n It costs 10X performance.\n\n1:39:12.380 --> 1:39:13.660\n Now what do I do?\n\n1:39:13.660 --> 1:39:16.340\n Well, this is the problem with unpredictable performance.\n\n1:39:16.340 --> 1:39:17.420\n If you care about performance,\n\n1:39:17.420 --> 1:39:19.580\n predictability is a very important thing.\n\n1:39:19.580 --> 1:39:23.900\n And so what the proposal does is it provides\n\n1:39:23.900 --> 1:39:26.740\n architectural patterns for being able to lay out your code,\n\n1:39:26.740 --> 1:39:28.420\n gives you full control over that,\n\n1:39:28.420 --> 1:39:30.220\n makes it really simple so you can explain it.\n\n1:39:30.220 --> 1:39:34.820\n And then if you wanna scale out in different ways,\n\n1:39:34.820 --> 1:39:36.620\n you have full control over that.\n\n1:39:36.620 --> 1:39:39.580\n So in your sense, the intuition is for a compiler,\n\n1:39:39.580 --> 1:39:42.100\n it's too hard to do automated parallelization.\n\n1:39:43.500 --> 1:39:47.660\n Cause the compilers do stuff automatically\n\n1:39:47.660 --> 1:39:50.540\n that's incredibly impressive for other things,\n\n1:39:50.540 --> 1:39:54.660\n but for parallelization, we're not close to there.\n\n1:39:54.660 --> 1:39:56.300\n Well, it depends on the programming model.\n\n1:39:56.300 --> 1:39:58.460\n So there's many different kinds of compilers.\n\n1:39:58.460 --> 1:40:00.380\n And so if you talk about like a C compiler\n\n1:40:00.380 --> 1:40:01.940\n or Swift compiler or something like that,\n\n1:40:01.940 --> 1:40:04.980\n where you're writing imperative code,\n\n1:40:04.980 --> 1:40:07.140\n parallelizing that and reasoning about all the pointers\n\n1:40:07.140 --> 1:40:10.140\n and stuff like that is a very difficult problem.\n\n1:40:10.140 --> 1:40:12.220\n Now, if you switch domains,\n\n1:40:12.220 --> 1:40:15.540\n so there's this cool thing called machine learning, right?\n\n1:40:15.540 --> 1:40:18.940\n So machine learning nerds among other endearing things\n\n1:40:18.940 --> 1:40:22.060\n like solving cat detectors and other things like that\n\n1:40:23.380 --> 1:40:25.420\n have done this amazing breakthrough\n\n1:40:25.420 --> 1:40:27.540\n of producing a programming model,\n\n1:40:27.540 --> 1:40:29.340\n operations that you compose together\n\n1:40:30.260 --> 1:40:33.180\n that has raised levels of abstraction high enough\n\n1:40:33.180 --> 1:40:36.780\n that suddenly you can have auto parallelizing compilers.\n\n1:40:36.780 --> 1:40:39.620\n You can write a model using a TensorFlow\n\n1:40:39.620 --> 1:40:43.460\n and have it run on 1024 nodes of a TPU.\n\n1:40:43.460 --> 1:40:44.300\n Yeah, that's true.\n\n1:40:44.300 --> 1:40:45.860\n I didn't even think about like,\n\n1:40:46.860 --> 1:40:48.220\n cause there's so much flexibility\n\n1:40:48.220 --> 1:40:50.860\n in the design of architectures that ultimately boil down\n\n1:40:50.860 --> 1:40:54.180\n to a graph that's parallelized for you.\n\n1:40:54.180 --> 1:40:56.660\n And if you think about it, that's pretty cool.\n\n1:40:56.660 --> 1:40:57.660\n That's pretty cool, yeah.\n\n1:40:57.660 --> 1:40:59.780\n And you think about batching, for example,\n\n1:40:59.780 --> 1:41:02.460\n as a way of being able to exploit more parallelism.\n\n1:41:02.460 --> 1:41:05.420\n Like that's a very simple thing that now is very powerful.\n\n1:41:05.420 --> 1:41:08.020\n That didn't come out of the programming language nerds,\n\n1:41:08.020 --> 1:41:10.140\n those people, like that came out of people\n\n1:41:10.140 --> 1:41:11.460\n that are just looking to solve a problem\n\n1:41:11.460 --> 1:41:14.060\n and use a few GPUs and organically developed\n\n1:41:14.060 --> 1:41:16.860\n by the community of people focusing on machine learning.\n\n1:41:16.860 --> 1:41:19.900\n And it's an incredibly powerful abstraction layer\n\n1:41:19.900 --> 1:41:22.820\n that enables the compiler people to go and exploit that.\n\n1:41:22.820 --> 1:41:26.420\n And now you can drive supercomputers from Python.\n\n1:41:26.420 --> 1:41:27.580\n Well, that's pretty cool.\n\n1:41:27.580 --> 1:41:28.420\n That's amazing.\n\n1:41:28.420 --> 1:41:29.540\n So just to pause on that,\n\n1:41:30.780 --> 1:41:32.340\n cause I'm not sufficiently low level,\n\n1:41:32.340 --> 1:41:35.420\n I forget to admire the beauty and power of that,\n\n1:41:35.420 --> 1:41:38.540\n but maybe just to linger on it,\n\n1:41:38.540 --> 1:41:42.660\n like what does it take to run a neural network fast?\n\n1:41:42.660 --> 1:41:44.100\n Like how hard is that compilation?\n\n1:41:44.100 --> 1:41:45.700\n It's really hard.\n\n1:41:45.700 --> 1:41:46.940\n So we just skipped,\n\n1:41:46.940 --> 1:41:49.620\n you said like, it's amazing that that's a thing,\n\n1:41:49.620 --> 1:41:51.540\n but yeah, how hard is that of a thing?\n\n1:41:51.540 --> 1:41:55.380\n It's hard and I would say that not all of the systems\n\n1:41:55.380 --> 1:41:58.620\n are really great, including the ones I helped build.\n\n1:41:58.620 --> 1:42:00.740\n So there's a lot of work left to be done there.\n\n1:42:00.740 --> 1:42:02.340\n Is it the compiler nerds working on that\n\n1:42:02.340 --> 1:42:04.620\n or is it a whole new group of people?\n\n1:42:04.620 --> 1:42:05.900\n Well, it's a full stack problem,\n\n1:42:05.900 --> 1:42:09.180\n including compiler people, including APIs,\n\n1:42:09.180 --> 1:42:14.180\n so like Keras and the module API and PyTorch and Jax.\n\n1:42:14.660 --> 1:42:15.980\n And there's a bunch of people pushing\n\n1:42:15.980 --> 1:42:17.460\n on all the different parts of these things,\n\n1:42:17.460 --> 1:42:19.660\n because when you look at it as it's both,\n\n1:42:19.660 --> 1:42:21.300\n how do I express the computation?\n\n1:42:21.300 --> 1:42:22.900\n Do I stack up layers?\n\n1:42:22.900 --> 1:42:25.620\n Well, cool, like setting up a linear sequence of layers\n\n1:42:25.620 --> 1:42:26.780\n is great for the simple case,\n\n1:42:26.780 --> 1:42:28.220\n but how do I do the hard case?\n\n1:42:28.220 --> 1:42:29.500\n How do I do reinforcement learning?\n\n1:42:29.500 --> 1:42:32.660\n Well, now I need to integrate my application logic in this.\n\n1:42:32.660 --> 1:42:34.660\n Then it's the next level down of,\n\n1:42:34.660 --> 1:42:36.700\n how do you represent that for the runtime?\n\n1:42:36.700 --> 1:42:39.100\n How do you get hardware abstraction?\n\n1:42:39.100 --> 1:42:40.780\n And then you get to the next level down of saying like,\n\n1:42:40.780 --> 1:42:41.860\n forget about abstraction,\n\n1:42:41.860 --> 1:42:44.540\n how do I get the peak performance out of my TPU\n\n1:42:44.540 --> 1:42:47.620\n or my iPhone accelerator or whatever, right?\n\n1:42:47.620 --> 1:42:48.940\n And all these different things.\n\n1:42:48.940 --> 1:42:50.260\n And so this is a layered problem\n\n1:42:50.260 --> 1:42:53.620\n with a lot of really interesting design and work\n\n1:42:53.620 --> 1:42:54.540\n going on in the space\n\n1:42:54.540 --> 1:42:56.940\n and a lot of really smart people working on it.\n\n1:42:56.940 --> 1:42:59.460\n Machine learning is a very well funded area\n\n1:42:59.460 --> 1:43:00.820\n of investment right now.\n\n1:43:00.820 --> 1:43:02.940\n And so there's a lot of progress being made.\n\n1:43:02.940 --> 1:43:05.900\n So how much innovation is there on the lower level,\n\n1:43:05.900 --> 1:43:08.220\n so closer to the ASIC,\n\n1:43:08.220 --> 1:43:09.780\n so redesigning the hardware\n\n1:43:09.780 --> 1:43:13.180\n or redesigning concurrently compilers with that hardware?\n\n1:43:13.180 --> 1:43:16.100\n Is that like, if you were to predict the biggest,\n\n1:43:16.100 --> 1:43:20.540\n the equivalent of Moore's law improvements\n\n1:43:20.540 --> 1:43:24.620\n in the inference and the training of neural networks\n\n1:43:24.620 --> 1:43:25.700\n and just all of that,\n\n1:43:25.700 --> 1:43:26.900\n where is that gonna come from, you think?\n\n1:43:26.900 --> 1:43:28.900\n Sure, you get scalability of different things.\n\n1:43:28.900 --> 1:43:33.620\n And so you get Jim Keller shrinking process technology,\n\n1:43:33.620 --> 1:43:36.620\n you get three nanometer instead of five or seven or 10\n\n1:43:36.620 --> 1:43:38.100\n or 28 or whatever.\n\n1:43:38.100 --> 1:43:41.300\n And so that marches forward and that provides improvements.\n\n1:43:41.300 --> 1:43:44.060\n You get architectural level performance.\n\n1:43:44.060 --> 1:43:47.660\n And so the TPU with a matrix multiply unit\n\n1:43:47.660 --> 1:43:49.620\n and a systolic array is much more efficient\n\n1:43:49.620 --> 1:43:53.220\n than having a scalar core doing multiplies and adds\n\n1:43:53.220 --> 1:43:54.380\n and things like that.\n\n1:43:54.380 --> 1:43:58.620\n You then get system level improvements.\n\n1:43:58.620 --> 1:43:59.860\n So how you talk to memory,\n\n1:43:59.860 --> 1:44:02.340\n how you talk across a cluster of machines,\n\n1:44:02.340 --> 1:44:03.300\n how you scale out,\n\n1:44:03.300 --> 1:44:06.060\n how you have fast interconnects between machines.\n\n1:44:06.060 --> 1:44:08.780\n You then get system level programming models.\n\n1:44:08.780 --> 1:44:11.300\n So now that you have all this hardware, how to utilize it.\n\n1:44:11.300 --> 1:44:13.140\n You then have algorithmic breakthroughs where you say,\n\n1:44:13.140 --> 1:44:14.340\n hey, wow, cool.\n\n1:44:14.340 --> 1:44:18.860\n Instead of training in a resonant 50 in a week,\n\n1:44:18.860 --> 1:44:21.860\n I'm now training it in 25 seconds.\n\n1:44:21.860 --> 1:44:26.860\n And it's a combination of new optimizers\n\n1:44:26.940 --> 1:44:29.620\n and new just training regimens\n\n1:44:29.620 --> 1:44:32.100\n and different approaches to train.\n\n1:44:32.100 --> 1:44:33.980\n And all of these things come together\n\n1:44:33.980 --> 1:44:36.020\n to push the world forward.\n\n1:44:36.020 --> 1:44:39.980\n That was a beautiful exposition.\n\n1:44:39.980 --> 1:44:42.740\n But if you were to force to bet all your money\n\n1:44:42.740 --> 1:44:43.820\n on one of these.\n\n1:44:45.220 --> 1:44:46.140\n Why do we have to?\n\n1:44:48.780 --> 1:44:50.740\n Unfortunately, we have people working on all this.\n\n1:44:50.740 --> 1:44:52.220\n It's an exciting time, right?\n\n1:44:52.220 --> 1:44:56.140\n So, I mean, OpenAI did this little paper\n\n1:44:56.140 --> 1:44:58.020\n showing the algorithmic improvement you can get.\n\n1:44:58.020 --> 1:45:00.900\n It's been improving exponentially.\n\n1:45:00.900 --> 1:45:04.220\n I haven't quite seen the same kind of analysis\n\n1:45:04.220 --> 1:45:06.700\n on other layers of the stack.\n\n1:45:06.700 --> 1:45:09.300\n I'm sure it's also improving significantly.\n\n1:45:09.300 --> 1:45:12.300\n I just, it's a nice intuition builder.\n\n1:45:12.300 --> 1:45:16.060\n I mean, there's a reason why Moore's Law,\n\n1:45:16.060 --> 1:45:18.060\n that's the beauty of Moore's Law is\n\n1:45:18.060 --> 1:45:21.380\n somebody writes a paper that makes a ridiculous prediction.\n\n1:45:22.500 --> 1:45:27.100\n And it becomes reality in a sense.\n\n1:45:27.100 --> 1:45:28.820\n There's something about these narratives\n\n1:45:28.820 --> 1:45:33.540\n when you, when Chris Ladner on a silly little podcast\n\n1:45:33.540 --> 1:45:37.180\n makes, bets all his money on a particular thing,\n\n1:45:37.180 --> 1:45:39.220\n somehow it can have a ripple effect\n\n1:45:39.220 --> 1:45:40.700\n of actually becoming real.\n\n1:45:40.700 --> 1:45:43.220\n That's an interesting aspect of it.\n\n1:45:43.220 --> 1:45:44.820\n Cause like it might've been,\n\n1:45:45.980 --> 1:45:47.460\n we focus with Moore's Law,\n\n1:45:47.460 --> 1:45:49.460\n most of the computing industry\n\n1:45:49.460 --> 1:45:52.660\n really, really focused on the hardware.\n\n1:45:53.500 --> 1:45:55.020\n I mean, software innovation,\n\n1:45:55.020 --> 1:45:56.420\n I don't know how much software innovation\n\n1:45:56.420 --> 1:45:57.260\n there was in terms of efficient.\n\n1:45:57.260 --> 1:46:00.060\n What Intel Giveth Bill takes away, right?\n\n1:46:00.060 --> 1:46:04.020\n Yeah, I mean, compilers improved significantly also.\n\n1:46:04.020 --> 1:46:04.860\n Well, not really.\n\n1:46:04.860 --> 1:46:06.780\n So actually, I mean, so I'm joking\n\n1:46:06.780 --> 1:46:08.900\n about how software has gotten slower\n\n1:46:08.900 --> 1:46:11.500\n pretty much as fast as hardware got better,\n\n1:46:11.500 --> 1:46:13.140\n at least through the nineties.\n\n1:46:13.140 --> 1:46:15.700\n There's another joke, another law in compilers,\n\n1:46:15.700 --> 1:46:18.140\n which is called, I think it's called Probstine's Law,\n\n1:46:18.140 --> 1:46:21.580\n which is compilers double the performance\n\n1:46:21.580 --> 1:46:23.700\n of any given code every 18 years.\n\n1:46:26.180 --> 1:46:27.860\n So they move slowly.\n\n1:46:27.860 --> 1:46:28.700\n Yeah, also.\n\n1:46:28.700 --> 1:46:30.940\n Well, yeah, it's exponential also.\n\n1:46:30.940 --> 1:46:32.380\n Yeah, you're making progress,\n\n1:46:32.380 --> 1:46:34.220\n but there again, it's not about,\n\n1:46:35.540 --> 1:46:37.700\n the power of compilers is not just about\n\n1:46:37.700 --> 1:46:39.060\n how do you make the same thing go faster?\n\n1:46:39.060 --> 1:46:41.740\n It's how do you unlock the new hardware?\n\n1:46:41.740 --> 1:46:43.500\n A new chip came out, how do you utilize it?\n\n1:46:43.500 --> 1:46:45.140\n You say, oh, the programming model,\n\n1:46:45.140 --> 1:46:46.980\n how do we make people more productive?\n\n1:46:46.980 --> 1:46:51.940\n How do we have better error messages?\n\n1:46:51.940 --> 1:46:55.460\n Even such mundane things like how do I generate\n\n1:46:55.460 --> 1:46:58.260\n a very specific error message about your code\n\n1:46:58.260 --> 1:46:59.780\n actually makes people happy\n\n1:46:59.780 --> 1:47:01.860\n because then they know how to fix it, right?\n\n1:47:01.860 --> 1:47:03.580\n And it comes back to how do you help people\n\n1:47:03.580 --> 1:47:04.580\n get their job done.\n\n1:47:04.580 --> 1:47:06.740\n Yeah, and yeah, and then in this world\n\n1:47:06.740 --> 1:47:10.260\n of exponentially increasing smart toasters,\n\n1:47:10.260 --> 1:47:15.260\n how do you expand computing to all these kinds of devices?\n\n1:47:16.100 --> 1:47:18.420\n Do you see this world where just everything\n\n1:47:18.420 --> 1:47:20.340\n is a computing surface?\n\n1:47:20.340 --> 1:47:22.100\n You see that possibility?\n\n1:47:22.100 --> 1:47:23.900\n Just everything is a computer?\n\n1:47:23.900 --> 1:47:25.020\n Yeah, I don't see any reason\n\n1:47:25.020 --> 1:47:26.940\n that that couldn't be achieved.\n\n1:47:26.940 --> 1:47:30.380\n It turns out that sand goes into glass\n\n1:47:30.380 --> 1:47:32.580\n and glass is pretty useful too.\n\n1:47:32.580 --> 1:47:35.140\n And why not?\n\n1:47:35.140 --> 1:47:35.980\n Why not?\n\n1:47:35.980 --> 1:47:39.580\n So very important question then,\n\n1:47:39.580 --> 1:47:44.580\n if we're living in a simulation\n\n1:47:44.580 --> 1:47:47.420\n and the simulation is running a computer,\n\n1:47:47.420 --> 1:47:50.660\n like what's the architecture of that computer, do you think?\n\n1:47:51.900 --> 1:47:54.940\n So you're saying is it a quantum system?\n\n1:47:54.940 --> 1:47:57.500\n Yeah, like this whole quantum discussion, is it needed?\n\n1:47:57.500 --> 1:48:02.500\n Or can we run it with a RISC 5 architecture,\n\n1:48:03.700 --> 1:48:05.260\n a bunch of CPUs?\n\n1:48:05.260 --> 1:48:07.540\n I think it comes down to the right tool for the job.\n\n1:48:07.540 --> 1:48:08.620\n Yeah, and so.\n\n1:48:08.620 --> 1:48:10.100\n And what's the compiler?\n\n1:48:10.100 --> 1:48:12.540\n Yeah, exactly, that's my question.\n\n1:48:12.540 --> 1:48:13.660\n Did I get that job?\n\n1:48:13.660 --> 1:48:15.020\n Feed the universe compiler.\n\n1:48:16.740 --> 1:48:19.700\n And so there, as far as we know,\n\n1:48:19.700 --> 1:48:23.660\n quantum systems are the bottom of the pile of turtles\n\n1:48:23.660 --> 1:48:24.500\n so far.\n\n1:48:24.500 --> 1:48:25.460\n Yeah.\n\n1:48:25.460 --> 1:48:28.260\n And so we don't know efficient ways\n\n1:48:28.260 --> 1:48:31.140\n to implement quantum systems without using quantum computers.\n\n1:48:32.180 --> 1:48:33.540\n Yeah, and that's totally outside\n\n1:48:33.540 --> 1:48:35.060\n of everything we've talked about.\n\n1:48:35.060 --> 1:48:37.060\n But who runs that quantum computer?\n\n1:48:37.060 --> 1:48:37.900\n Yeah.\n\n1:48:37.900 --> 1:48:41.460\n Right, so if we really are living in a simulation,\n\n1:48:41.460 --> 1:48:44.420\n then is it bigger quantum computers?\n\n1:48:44.420 --> 1:48:45.260\n Is it different ones?\n\n1:48:45.260 --> 1:48:46.580\n Like how does that work out?\n\n1:48:46.580 --> 1:48:47.700\n How does that scale?\n\n1:48:47.700 --> 1:48:49.940\n Well, it's the same size.\n\n1:48:49.940 --> 1:48:50.780\n It's the same size.\n\n1:48:50.780 --> 1:48:52.660\n But then the thought of the simulation\n\n1:48:52.660 --> 1:48:54.260\n is that you don't have to run the whole thing,\n\n1:48:54.260 --> 1:48:56.860\n that we humans are cognitively very limited.\n\n1:48:56.860 --> 1:48:57.700\n We do checkpoints.\n\n1:48:57.700 --> 1:48:59.420\n We do checkpoints, yeah.\n\n1:48:59.420 --> 1:49:03.020\n And if we, the point at which we human,\n\n1:49:03.020 --> 1:49:06.860\n so you basically do minimal amount of,\n\n1:49:06.860 --> 1:49:11.860\n what is it, Swift does on right, copy on right.\n\n1:49:12.220 --> 1:49:15.540\n So you only adjust the simulation.\n\n1:49:15.540 --> 1:49:17.060\n Parallel universe theories, right?\n\n1:49:17.060 --> 1:49:20.580\n And so every time a decision's made,\n\n1:49:20.580 --> 1:49:22.060\n somebody opens the short end of your box,\n\n1:49:22.060 --> 1:49:23.740\n then there's a fork.\n\n1:49:23.740 --> 1:49:24.980\n And then this could happen.\n\n1:49:24.980 --> 1:49:29.980\n And then, thank you for considering the possibility.\n\n1:49:29.980 --> 1:49:32.900\n But yeah, so it may not require the entirety\n\n1:49:32.900 --> 1:49:34.260\n of the universe to simulate it.\n\n1:49:34.260 --> 1:49:38.460\n But it's interesting to think about\n\n1:49:38.460 --> 1:49:42.940\n as we create this higher and higher fidelity systems.\n\n1:49:42.940 --> 1:49:46.180\n But I do wanna ask on the quantum computer side,\n\n1:49:46.180 --> 1:49:47.900\n because everything we've talked about,\n\n1:49:47.900 --> 1:49:51.660\n whether you work with SciFive, with compilers,\n\n1:49:51.660 --> 1:49:54.660\n none of that includes quantum computers, right?\n\n1:49:54.660 --> 1:49:55.660\n That's true.\n\n1:49:55.660 --> 1:50:00.660\n So have you ever thought about this whole\n\n1:50:03.140 --> 1:50:06.180\n serious engineering work of quantum computers\n\n1:50:06.180 --> 1:50:09.740\n looks like of compilers, of architectures,\n\n1:50:09.740 --> 1:50:10.660\n all of that kind of stuff?\n\n1:50:10.660 --> 1:50:11.820\n So I've looked at it a little bit.\n\n1:50:11.820 --> 1:50:14.300\n I know almost nothing about it,\n\n1:50:14.300 --> 1:50:15.540\n which means that at some point,\n\n1:50:15.540 --> 1:50:17.860\n I will have to find an excuse to get involved,\n\n1:50:17.860 --> 1:50:18.700\n because that's how it works.\n\n1:50:18.700 --> 1:50:21.140\n But do you think that's a thing to be,\n\n1:50:21.140 --> 1:50:24.620\n like with your little tingly senses of the timing\n\n1:50:24.620 --> 1:50:26.860\n of when to be involved, is it not yet?\n\n1:50:26.860 --> 1:50:28.820\n Well, so the thing I do really well\n\n1:50:28.820 --> 1:50:31.660\n is I jump into messy systems\n\n1:50:31.660 --> 1:50:33.700\n and figure out how to make them,\n\n1:50:33.700 --> 1:50:35.540\n figure out what the truth in the situation is,\n\n1:50:35.540 --> 1:50:39.100\n try to figure out what the unifying theory is,\n\n1:50:39.100 --> 1:50:40.980\n how to like factor the complexity,\n\n1:50:40.980 --> 1:50:42.860\n how to find a beautiful answer to a problem\n\n1:50:42.860 --> 1:50:44.860\n that has been well studied\n\n1:50:44.860 --> 1:50:47.060\n and lots of people have bashed their heads against it.\n\n1:50:47.060 --> 1:50:49.300\n I don't know that quantum computers are mature enough\n\n1:50:49.300 --> 1:50:53.740\n and accessible enough to be figured out yet, right?\n\n1:50:53.740 --> 1:50:58.620\n And I think the open question with quantum computers is,\n\n1:50:58.620 --> 1:51:00.180\n is there a useful problem\n\n1:51:00.180 --> 1:51:02.340\n that gets solved with a quantum computer\n\n1:51:02.340 --> 1:51:05.300\n that makes it worth the economic cost\n\n1:51:05.300 --> 1:51:06.780\n of like having one of these things\n\n1:51:06.780 --> 1:51:11.500\n and having legions of people that set it up?\n\n1:51:11.500 --> 1:51:12.780\n You go back to the fifties, right?\n\n1:51:12.780 --> 1:51:13.740\n And there's the projections\n\n1:51:13.740 --> 1:51:18.220\n of the world will only need seven computers, right?\n\n1:51:18.220 --> 1:51:20.740\n Well, and part of that was that people hadn't figured out\n\n1:51:20.740 --> 1:51:21.980\n what they're useful for.\n\n1:51:21.980 --> 1:51:23.260\n What are the algorithms we wanna run?\n\n1:51:23.260 --> 1:51:24.340\n What are the problems that get solved?\n\n1:51:24.340 --> 1:51:27.620\n And this comes back to how do we make the world better,\n\n1:51:27.620 --> 1:51:29.940\n either economically or making somebody's life better\n\n1:51:29.940 --> 1:51:31.940\n or like solving a problem that wasn't solved before,\n\n1:51:31.940 --> 1:51:33.140\n things like this.\n\n1:51:33.140 --> 1:51:36.020\n And I think that just we're a little bit too early\n\n1:51:36.020 --> 1:51:36.860\n in that development cycle\n\n1:51:36.860 --> 1:51:39.380\n because it's still like literally a science project,\n\n1:51:39.380 --> 1:51:41.540\n not a negative connotation, right?\n\n1:51:41.540 --> 1:51:42.860\n It's literally a science project\n\n1:51:42.860 --> 1:51:45.420\n and the progress there is amazing.\n\n1:51:45.420 --> 1:51:48.900\n And so I don't know if it's 10 years away,\n\n1:51:48.900 --> 1:51:50.100\n if it's two years away,\n\n1:51:50.100 --> 1:51:51.660\n exactly where that breakthrough happens,\n\n1:51:51.660 --> 1:51:54.540\n but you look at machine learning,\n\n1:51:56.300 --> 1:51:58.420\n we went through a few winners\n\n1:51:58.420 --> 1:52:00.140\n before the AlexNet transition\n\n1:52:00.140 --> 1:52:02.980\n and then suddenly it had its breakout moment.\n\n1:52:02.980 --> 1:52:04.300\n And that was the catalyst\n\n1:52:04.300 --> 1:52:07.580\n that then drove the talent flocking into it.\n\n1:52:07.580 --> 1:52:10.180\n That's what drove the economic applications of it.\n\n1:52:10.180 --> 1:52:13.420\n That's what drove the technology to go faster\n\n1:52:13.420 --> 1:52:15.940\n because you now have more minds thrown at the problem.\n\n1:52:15.940 --> 1:52:20.180\n This is what caused like a serious knee in deep learning\n\n1:52:20.180 --> 1:52:21.940\n and the algorithms that we're using.\n\n1:52:21.940 --> 1:52:25.540\n And so I think that's what quantum needs to go through.\n\n1:52:25.540 --> 1:52:28.820\n And so right now it's in that formidable finding itself,\n\n1:52:28.820 --> 1:52:32.980\n getting the like literally the physics figured out.\n\n1:52:32.980 --> 1:52:36.100\n And then it has to figure out the application\n\n1:52:36.100 --> 1:52:37.580\n that makes this useful.\n\n1:52:37.580 --> 1:52:40.780\n Yeah, but I'm not skeptical that I think that will happen.\n\n1:52:40.780 --> 1:52:43.420\n I think it's just 10 years away, something like that.\n\n1:52:43.420 --> 1:52:44.500\n I forgot to ask,\n\n1:52:44.500 --> 1:52:46.380\n what programming language do you think\n\n1:52:46.380 --> 1:52:48.620\n the simulation is written in?\n\n1:52:48.620 --> 1:52:50.340\n Ooh, probably Lisp.\n\n1:52:50.340 --> 1:52:52.980\n So not Swift.\n\n1:52:52.980 --> 1:52:57.980\n Like if you're a Tibet, I'll just leave it at that.\n\n1:52:58.060 --> 1:53:00.380\n So, I mean, we've mentioned that you worked\n\n1:53:00.380 --> 1:53:01.220\n with all these companies,\n\n1:53:01.220 --> 1:53:03.900\n we've talked about all these projects.\n\n1:53:03.900 --> 1:53:07.220\n It's kind of like if we just step back and zoom out\n\n1:53:07.220 --> 1:53:10.100\n about the way you did that work.\n\n1:53:10.100 --> 1:53:12.220\n And we look at COVID times,\n\n1:53:12.220 --> 1:53:14.780\n this pandemic we're living through that may,\n\n1:53:14.780 --> 1:53:17.020\n if I look at the way Silicon Valley folks\n\n1:53:17.020 --> 1:53:19.860\n are talking about it, the way MIT is talking about it,\n\n1:53:19.860 --> 1:53:23.060\n this might last for a long time.\n\n1:53:23.060 --> 1:53:28.060\n Not just the virus, but the remote nature.\n\n1:53:28.340 --> 1:53:29.660\n The economic impact.\n\n1:53:29.660 --> 1:53:30.500\n I mean, all of it, yeah.\n\n1:53:30.500 --> 1:53:32.140\n Yeah, it's gonna be a mess.\n\n1:53:32.140 --> 1:53:34.500\n Do you think, what's your prediction?\n\n1:53:34.500 --> 1:53:36.380\n I mean, from sci fi to Google,\n\n1:53:36.380 --> 1:53:41.380\n to just all the places you worked in,\n\n1:53:42.420 --> 1:53:44.260\n just Silicon Valley, you're in the middle of it.\n\n1:53:44.260 --> 1:53:45.100\n What do you think is,\n\n1:53:45.100 --> 1:53:46.620\n how is this whole place gonna change?\n\n1:53:46.620 --> 1:53:49.020\n Yeah, so, I mean, I really can only speak\n\n1:53:49.020 --> 1:53:50.460\n to the tech perspective.\n\n1:53:50.460 --> 1:53:52.820\n I am in that bubble.\n\n1:53:54.140 --> 1:53:55.700\n I think it's gonna be really interesting\n\n1:53:55.700 --> 1:53:58.820\n because the Zoom culture of being remote\n\n1:53:58.820 --> 1:54:00.260\n and on video chat all the time\n\n1:54:00.260 --> 1:54:01.980\n has really interesting effects on people.\n\n1:54:01.980 --> 1:54:05.020\n So on the one hand, it's a great normalizer.\n\n1:54:05.020 --> 1:54:09.060\n It's a normalizer that I think will help communities\n\n1:54:09.060 --> 1:54:12.580\n of people that have traditionally been underrepresented\n\n1:54:12.580 --> 1:54:16.380\n because now you're taking, in some cases, a face off\n\n1:54:16.380 --> 1:54:18.780\n because you don't have to have a camera going, right?\n\n1:54:18.780 --> 1:54:20.020\n And so you can have conversations\n\n1:54:20.020 --> 1:54:22.780\n without physical appearance being part of the dynamic,\n\n1:54:22.780 --> 1:54:24.500\n which is pretty powerful.\n\n1:54:24.500 --> 1:54:25.940\n You're taking remote employees\n\n1:54:25.940 --> 1:54:27.020\n that have already been remote,\n\n1:54:27.020 --> 1:54:29.900\n and you're saying you're now on the same level\n\n1:54:29.900 --> 1:54:31.380\n and footing as everybody else.\n\n1:54:31.380 --> 1:54:33.460\n Nobody gets whiteboards.\n\n1:54:33.460 --> 1:54:34.620\n You're not gonna be the one person\n\n1:54:34.620 --> 1:54:36.020\n that doesn't get to be participating\n\n1:54:36.020 --> 1:54:37.220\n in the whiteboard conversation,\n\n1:54:37.220 --> 1:54:39.300\n and that's pretty powerful.\n\n1:54:39.300 --> 1:54:44.140\n You've got, you're forcing people to think asynchronously\n\n1:54:44.140 --> 1:54:47.220\n in some cases because it's harder to just get people\n\n1:54:47.220 --> 1:54:49.380\n physically together, and the bumping into each other\n\n1:54:49.380 --> 1:54:52.740\n forces people to find new ways to solve those problems.\n\n1:54:52.740 --> 1:54:55.220\n And I think that that leads to more inclusive behavior,\n\n1:54:55.220 --> 1:54:56.780\n which is good.\n\n1:54:56.780 --> 1:55:00.740\n On the other hand, it's also, it just sucks, right?\n\n1:55:00.740 --> 1:55:05.740\n And so the actual communication just sucks\n\n1:55:05.940 --> 1:55:09.820\n being not with people on a daily basis\n\n1:55:09.820 --> 1:55:11.380\n and collaborating with them.\n\n1:55:11.380 --> 1:55:13.060\n Yeah, all of that, right?\n\n1:55:13.060 --> 1:55:15.660\n I mean, everything, this whole situation is terrible.\n\n1:55:15.660 --> 1:55:17.620\n What I meant primarily was the,\n\n1:55:19.060 --> 1:55:20.860\n I think that most humans\n\n1:55:20.860 --> 1:55:22.980\n like working physically with humans.\n\n1:55:22.980 --> 1:55:24.660\n I think this is something that not everybody,\n\n1:55:24.660 --> 1:55:27.100\n but many people are programmed to do.\n\n1:55:27.100 --> 1:55:29.220\n And I think that we get something out of that\n\n1:55:29.220 --> 1:55:31.460\n that is very hard to express, at least for me.\n\n1:55:31.460 --> 1:55:33.180\n And so maybe this isn't true of everybody.\n\n1:55:33.180 --> 1:55:36.860\n But, and so the question to me is,\n\n1:55:36.860 --> 1:55:40.020\n when you get through that time of adaptation,\n\n1:55:40.020 --> 1:55:41.940\n you get out of March and April,\n\n1:55:41.940 --> 1:55:43.220\n and you get into December,\n\n1:55:43.220 --> 1:55:46.580\n you get into next March, if it's not changed, right?\n\n1:55:46.580 --> 1:55:47.820\n It's already terrifying.\n\n1:55:47.820 --> 1:55:49.140\n Well, you think about that,\n\n1:55:49.140 --> 1:55:51.420\n and you think about what is the nature of work?\n\n1:55:51.420 --> 1:55:52.740\n And how do we adapt?\n\n1:55:52.740 --> 1:55:55.100\n And humans are very adaptable species, right?\n\n1:55:55.100 --> 1:55:58.260\n We can learn things when we're forced to,\n\n1:55:58.260 --> 1:56:00.580\n and there's a catalyst to make that happen.\n\n1:56:00.580 --> 1:56:02.700\n And so what is it that comes out of this,\n\n1:56:02.700 --> 1:56:04.740\n and are we better or worse off?\n\n1:56:04.740 --> 1:56:07.180\n I think that you look at the Bay Area,\n\n1:56:07.180 --> 1:56:08.940\n housing prices are insane.\n\n1:56:08.940 --> 1:56:09.900\n Well, why?\n\n1:56:09.900 --> 1:56:12.460\n Well, there's a high incentive to be physically located,\n\n1:56:12.460 --> 1:56:14.980\n because if you don't have proximity,\n\n1:56:14.980 --> 1:56:18.420\n you end up paying for it and commute, right?\n\n1:56:18.420 --> 1:56:21.060\n And there has been huge social pressure\n\n1:56:21.060 --> 1:56:24.660\n in terms of you will be there for the meeting, right?\n\n1:56:24.660 --> 1:56:26.940\n Or whatever scenario it is.\n\n1:56:26.940 --> 1:56:28.260\n And I think that's gonna be way better.\n\n1:56:28.260 --> 1:56:30.020\n I think it's gonna be much more the norm\n\n1:56:30.020 --> 1:56:31.660\n to have remote employees,\n\n1:56:31.660 --> 1:56:33.260\n and I think this is gonna be really great.\n\n1:56:33.260 --> 1:56:37.260\n Do you have friends, or do you hear of people moving?\n\n1:56:37.260 --> 1:56:40.780\n I know one family friend that moved.\n\n1:56:40.780 --> 1:56:41.980\n They moved back to Michigan,\n\n1:56:41.980 --> 1:56:45.620\n and they were a family with three kids\n\n1:56:45.620 --> 1:56:46.820\n living in a small apartment,\n\n1:56:46.820 --> 1:56:50.820\n and we're going insane, right?\n\n1:56:50.820 --> 1:56:54.300\n And they're in tech, husband works for Google.\n\n1:56:54.300 --> 1:56:56.140\n So first of all, friends of mine\n\n1:56:57.140 --> 1:57:00.580\n are in the process of, or have already lost the business.\n\n1:57:00.580 --> 1:57:03.220\n The thing that represents their passion, their dream,\n\n1:57:03.220 --> 1:57:05.340\n it could be small entrepreneurial projects,\n\n1:57:05.340 --> 1:57:06.820\n but it could be large businesses,\n\n1:57:06.820 --> 1:57:08.500\n like people that run gyms.\n\n1:57:08.500 --> 1:57:10.860\n Restaurants, tons of things, yeah.\n\n1:57:10.860 --> 1:57:14.180\n But also, people look at themselves in the mirror\n\n1:57:14.180 --> 1:57:17.660\n and ask the question of, what do I wanna do in life?\n\n1:57:17.660 --> 1:57:20.980\n For some reason, they haven't done it until COVID.\n\n1:57:20.980 --> 1:57:22.100\n They really ask that question,\n\n1:57:22.100 --> 1:57:26.660\n and that results often in moving or leaving the company\n\n1:57:26.660 --> 1:57:28.140\n with starting your own business\n\n1:57:28.140 --> 1:57:30.660\n or transitioning to a different company.\n\n1:57:30.660 --> 1:57:33.620\n Do you think we're gonna see that a lot?\n\n1:57:33.620 --> 1:57:36.220\n Well, I can't speak to that.\n\n1:57:36.220 --> 1:57:37.300\n I mean, we're definitely gonna see it\n\n1:57:37.300 --> 1:57:39.380\n at a higher frequency than we did before,\n\n1:57:39.380 --> 1:57:41.580\n just because I think what you're trying to say\n\n1:57:41.580 --> 1:57:45.220\n is there are decisions that you make yourself,\n\n1:57:45.220 --> 1:57:47.260\n big life decisions that you make yourself,\n\n1:57:47.260 --> 1:57:49.860\n and I'm gonna quit my job and start a new thing.\n\n1:57:49.860 --> 1:57:52.740\n There's also decisions that get made for you.\n\n1:57:52.740 --> 1:57:55.420\n I got fired from my job, what am I gonna do, right?\n\n1:57:55.420 --> 1:57:58.060\n And that's not a decision that you think about,\n\n1:57:58.060 --> 1:58:00.340\n but you're forced to act, okay?\n\n1:58:00.340 --> 1:58:02.900\n And so I think that those, you're forced to act\n\n1:58:02.900 --> 1:58:05.300\n kind of moments where global pandemic\n\n1:58:05.300 --> 1:58:06.660\n comes and wipes out the economy,\n\n1:58:06.660 --> 1:58:09.900\n and now your business doesn't exist.\n\n1:58:09.900 --> 1:58:11.820\n I think that does lead to more reflection, right?\n\n1:58:11.820 --> 1:58:14.460\n Because you're less anchored on what you have,\n\n1:58:14.460 --> 1:58:17.060\n and it's not a, what do I have to lose\n\n1:58:17.060 --> 1:58:19.980\n versus what do I have to gain, A, B, comparison.\n\n1:58:19.980 --> 1:58:21.940\n It's more of a fresh slate.\n\n1:58:21.940 --> 1:58:23.900\n Cool, I could do anything now.\n\n1:58:23.900 --> 1:58:26.380\n Do I wanna do the same thing I was doing?\n\n1:58:26.380 --> 1:58:27.820\n Did that make me happy?\n\n1:58:27.820 --> 1:58:29.500\n Is this now time to go back to college\n\n1:58:29.500 --> 1:58:33.100\n and take a class and learn a new skill?\n\n1:58:33.100 --> 1:58:36.580\n Is this a time to spend time with family\n\n1:58:36.580 --> 1:58:37.820\n if you can afford to do that?\n\n1:58:37.820 --> 1:58:40.980\n Is this time to literally move in with parents, right?\n\n1:58:40.980 --> 1:58:43.900\n I mean, all these things that were not normative before\n\n1:58:43.900 --> 1:58:48.900\n suddenly become, I think, very, the value systems change.\n\n1:58:49.140 --> 1:58:50.820\n And I think that's actually a good thing\n\n1:58:50.820 --> 1:58:55.280\n in the short term, at least, because it leads to,\n\n1:58:56.340 --> 1:58:58.420\n there's kind of been an overoptimization\n\n1:58:58.420 --> 1:59:01.540\n along one set of priorities for the world,\n\n1:59:01.540 --> 1:59:03.540\n and now maybe we'll get to a more balanced\n\n1:59:03.540 --> 1:59:05.180\n and more interesting world\n\n1:59:05.180 --> 1:59:06.780\n where people are doing different things.\n\n1:59:06.780 --> 1:59:07.660\n I think it could be good.\n\n1:59:07.660 --> 1:59:08.980\n I think there could be more innovation\n\n1:59:08.980 --> 1:59:10.100\n that comes out of it, for example.\n\n1:59:10.100 --> 1:59:12.780\n What do you think about all the social chaos\n\n1:59:12.780 --> 1:59:13.980\n we're in the middle of?\n\n1:59:13.980 --> 1:59:14.820\n It sucks.\n\n1:59:14.820 --> 1:59:18.740\n You think it's, let me ask you a whole,\n\n1:59:18.740 --> 1:59:21.100\n you think it's all gonna be okay?\n\n1:59:21.100 --> 1:59:23.420\n Well, I think humanity will survive.\n\n1:59:23.420 --> 1:59:25.420\n The, from an existential,\n\n1:59:25.420 --> 1:59:27.260\n like we're not all gonna kill, yeah, well.\n\n1:59:27.260 --> 1:59:30.380\n Yeah, I don't think the virus is gonna kill all the humans.\n\n1:59:30.380 --> 1:59:31.980\n I don't think all the humans are gonna kill all the humans.\n\n1:59:31.980 --> 1:59:32.900\n I think that's unlikely.\n\n1:59:32.900 --> 1:59:37.900\n But I look at it as progress requires a catalyst, right?\n\n1:59:42.460 --> 1:59:45.580\n So you need a reason for people to be willing\n\n1:59:45.580 --> 1:59:47.740\n to do things that are uncomfortable.\n\n1:59:47.740 --> 1:59:50.740\n I think that the US, at least,\n\n1:59:50.740 --> 1:59:51.740\n but I think the world in general\n\n1:59:51.740 --> 1:59:56.780\n is a pretty unoptimal place to live in for a lot of people.\n\n1:59:56.780 --> 1:59:58.900\n And I think that what we're seeing right now\n\n1:59:58.900 --> 2:00:00.460\n is we're seeing a lot of unhappiness.\n\n2:00:00.460 --> 2:00:03.580\n And because of all the pressure,\n\n2:00:03.580 --> 2:00:05.500\n because of all the badness in the world\n\n2:00:05.500 --> 2:00:06.340\n that's coming together,\n\n2:00:06.340 --> 2:00:07.860\n it's really kind of igniting some of that debate\n\n2:00:07.860 --> 2:00:10.140\n that should have happened a long time ago, right?\n\n2:00:10.140 --> 2:00:11.620\n I mean, I think that we'll see more progress.\n\n2:00:11.620 --> 2:00:14.220\n You're asking about, offline you're asking about politics\n\n2:00:14.220 --> 2:00:15.740\n and wouldn't it be great if politics moved faster\n\n2:00:15.740 --> 2:00:16.940\n because there's all these problems in the world\n\n2:00:16.940 --> 2:00:18.140\n and we can move it.\n\n2:00:18.140 --> 2:00:22.300\n Well, people are intentionally, are inherently conservative.\n\n2:00:22.300 --> 2:00:25.020\n And so if you're talking about conservative people,\n\n2:00:25.020 --> 2:00:27.460\n particularly if they have heavy burdens on their shoulders\n\n2:00:27.460 --> 2:00:30.060\n because they represent literally thousands of people,\n\n2:00:31.700 --> 2:00:33.220\n it makes sense to be conservative.\n\n2:00:33.220 --> 2:00:35.300\n But on the other hand, when you need change,\n\n2:00:35.300 --> 2:00:36.220\n how do you get it?\n\n2:00:37.140 --> 2:00:40.500\n The global pandemic will probably lead to some change.\n\n2:00:40.500 --> 2:00:44.300\n And it's not a directed, it's not a directed plan,\n\n2:00:44.300 --> 2:00:45.900\n but I think that it leads to people\n\n2:00:45.900 --> 2:00:47.340\n asking really interesting questions.\n\n2:00:47.340 --> 2:00:48.180\n And some of those questions\n\n2:00:48.180 --> 2:00:50.100\n should have been asked a long time ago.\n\n2:00:50.100 --> 2:00:53.260\n Well, let me know if you've observed this as well.\n\n2:00:53.260 --> 2:00:55.620\n Something that's bothered me in the machine learning\n\n2:00:55.620 --> 2:00:58.260\n community, I'm guessing it might be prevalent\n\n2:00:58.260 --> 2:01:02.500\n in other places, is something that feels like in 2020\n\n2:01:02.500 --> 2:01:05.260\n increase the level of toxicity.\n\n2:01:05.260 --> 2:01:09.700\n Like people are just quicker to pile on,\n\n2:01:09.700 --> 2:01:13.260\n to just be, they're just harsh on each other,\n\n2:01:13.260 --> 2:01:18.260\n to like mob, pick a person that screwed up\n\n2:01:19.300 --> 2:01:22.020\n and like make it a big thing.\n\n2:01:22.020 --> 2:01:25.460\n And is there something that we can like,\n\n2:01:26.340 --> 2:01:28.180\n yeah, have you observed that in other places?\n\n2:01:28.180 --> 2:01:30.180\n Is there some way out of this?\n\n2:01:30.180 --> 2:01:32.140\n I think there's an inherent thing in humanity\n\n2:01:32.140 --> 2:01:34.420\n that's kind of an us versus them thing,\n\n2:01:34.420 --> 2:01:37.100\n which is that you wanna succeed and how do you succeed?\n\n2:01:37.100 --> 2:01:39.580\n Well, it's relative to somebody else.\n\n2:01:39.580 --> 2:01:43.100\n And so what's happening in, at least in some part\n\n2:01:43.100 --> 2:01:47.100\n is that with the internet and with online communication,\n\n2:01:47.100 --> 2:01:49.580\n the world's getting smaller, right?\n\n2:01:49.580 --> 2:01:53.020\n And so we're having some of the social ties\n\n2:01:53.020 --> 2:01:57.540\n of like my town versus your town's football team, right?\n\n2:01:57.540 --> 2:02:02.540\n Turn into much larger and yet shallower problems.\n\n2:02:02.980 --> 2:02:06.580\n And people don't have time, the incentives,\n\n2:02:06.580 --> 2:02:08.060\n the clickbait and like all these things\n\n2:02:08.060 --> 2:02:10.500\n kind of really feed into this machine.\n\n2:02:10.500 --> 2:02:12.460\n And I don't know where that goes.\n\n2:02:12.460 --> 2:02:15.060\n Yeah, I mean, the reason I think about that,\n\n2:02:15.060 --> 2:02:17.500\n I mentioned to you this offline a little bit,\n\n2:02:17.500 --> 2:02:22.500\n but I have a few difficult conversations scheduled,\n\n2:02:23.060 --> 2:02:25.100\n some of them political related,\n\n2:02:25.100 --> 2:02:27.340\n some of them within the community,\n\n2:02:28.180 --> 2:02:30.620\n difficult personalities that went through some stuff.\n\n2:02:30.620 --> 2:02:32.140\n I mean, one of them I've talked before,\n\n2:02:32.140 --> 2:02:34.340\n I will talk again is Yann LeCun.\n\n2:02:34.340 --> 2:02:36.380\n He got a little bit of crap on Twitter\n\n2:02:38.380 --> 2:02:40.940\n for talking about a particular paper\n\n2:02:40.940 --> 2:02:42.740\n and the bias within a data set.\n\n2:02:42.740 --> 2:02:45.940\n And then there's been a huge, in my view,\n\n2:02:45.940 --> 2:02:49.700\n and I'm willing, comfortable saying it,\n\n2:02:49.700 --> 2:02:54.380\n irrational, over exaggerated pile on his comments\n\n2:02:54.380 --> 2:02:58.460\n because he made pretty basic comments about the fact that\n\n2:02:58.460 --> 2:02:59.860\n if there's bias in the data,\n\n2:02:59.860 --> 2:03:02.380\n there's going to be bias in the results.\n\n2:03:02.380 --> 2:03:04.540\n So we should not have bias in the data,\n\n2:03:04.540 --> 2:03:07.300\n but people piled on to him because he said\n\n2:03:07.300 --> 2:03:10.020\n he trivialized the problem of bias.\n\n2:03:10.020 --> 2:03:13.180\n Like it's a lot more than just bias in the data,\n\n2:03:13.180 --> 2:03:16.500\n but like, yes, that's a very good point,\n\n2:03:16.500 --> 2:03:18.900\n but that's not what he was saying.\n\n2:03:18.900 --> 2:03:19.740\n That's not what he was saying.\n\n2:03:19.740 --> 2:03:23.100\n And the response, like the implied response\n\n2:03:23.100 --> 2:03:26.660\n that he's basically sexist and racist\n\n2:03:27.620 --> 2:03:30.420\n is something that completely drives away\n\n2:03:30.420 --> 2:03:32.860\n the possibility of nuanced discussion.\n\n2:03:32.860 --> 2:03:37.860\n One nice thing about like a pocket long form of conversation\n\n2:03:37.940 --> 2:03:40.300\n is you can talk it out.\n\n2:03:40.300 --> 2:03:42.860\n You can lay your reasoning out.\n\n2:03:42.860 --> 2:03:44.500\n And even if you're wrong,\n\n2:03:44.500 --> 2:03:47.140\n you can still show that you're a good human being\n\n2:03:47.140 --> 2:03:48.220\n underneath it.\n\n2:03:48.220 --> 2:03:49.100\n You know, your point about\n\n2:03:49.100 --> 2:03:50.980\n you can't have a productive discussion.\n\n2:03:50.980 --> 2:03:53.860\n Well, how do you get to the point where people can turn?\n\n2:03:53.860 --> 2:03:56.260\n They can learn, they can listen, they can think,\n\n2:03:56.260 --> 2:04:00.660\n they can engage versus just being a shallow like,\n\n2:04:00.660 --> 2:04:02.500\n and then keep moving, right?\n\n2:04:02.500 --> 2:04:06.620\n And I don't think that progress really comes from that,\n\n2:04:06.620 --> 2:04:07.460\n right?\n\n2:04:07.460 --> 2:04:09.820\n And I don't think that one should expect that.\n\n2:04:09.820 --> 2:04:12.260\n I think that you'd see that as reinforcing\n\n2:04:12.260 --> 2:04:14.460\n individual circles and the us versus them thing.\n\n2:04:14.460 --> 2:04:17.500\n And I think that's fairly divisive.\n\n2:04:17.500 --> 2:04:20.900\n Yeah, I think there's a big role in,\n\n2:04:20.900 --> 2:04:24.020\n like the people that bother me most on Twitter\n\n2:04:24.020 --> 2:04:26.580\n when I observe things is not the people\n\n2:04:26.580 --> 2:04:30.060\n who get very emotional, angry, like over the top.\n\n2:04:30.060 --> 2:04:33.820\n It's the people who like prop them up.\n\n2:04:33.820 --> 2:04:36.100\n It's all the, it's this,\n\n2:04:36.100 --> 2:04:37.940\n I think what should be the,\n\n2:04:37.940 --> 2:04:42.300\n we should teach each other is to be sort of empathetic.\n\n2:04:42.300 --> 2:04:44.660\n The thing that it's really easy to forget,\n\n2:04:44.660 --> 2:04:47.740\n particularly on like Twitter or the internet or an email,\n\n2:04:47.740 --> 2:04:50.740\n is that sometimes people just have a bad day, right?\n\n2:04:50.740 --> 2:04:53.100\n You have a bad day or you're like,\n\n2:04:53.100 --> 2:04:55.500\n I've been in the situation where it's like between meetings,\n\n2:04:55.500 --> 2:04:57.260\n like fire off a quick response to an email\n\n2:04:57.260 --> 2:05:00.660\n because I want to like help get something unblocked,\n\n2:05:00.660 --> 2:05:03.620\n phrase it really objectively wrong.\n\n2:05:03.620 --> 2:05:04.980\n I screwed up.\n\n2:05:04.980 --> 2:05:08.660\n And suddenly this is now something that sticks with people.\n\n2:05:08.660 --> 2:05:10.540\n And it's not because they're bad.\n\n2:05:10.540 --> 2:05:11.820\n It's not because you're bad.\n\n2:05:11.820 --> 2:05:15.180\n Just psychology of like, you said a thing,\n\n2:05:15.180 --> 2:05:16.020\n it sticks with you.\n\n2:05:16.020 --> 2:05:16.940\n You didn't mean it that way,\n\n2:05:16.940 --> 2:05:18.460\n but it really impacted somebody\n\n2:05:18.460 --> 2:05:20.860\n because the way they interpret it.\n\n2:05:20.860 --> 2:05:23.340\n And this is just an aspect of working together as humans.\n\n2:05:23.340 --> 2:05:26.140\n And I have a lot of optimism in the long term,\n\n2:05:26.140 --> 2:05:29.060\n the very long term about what we as humanity can do.\n\n2:05:29.060 --> 2:05:29.980\n But I think that's going to be,\n\n2:05:29.980 --> 2:05:31.100\n it's just always a rough ride.\n\n2:05:31.100 --> 2:05:33.100\n And you came into this by saying like,\n\n2:05:33.100 --> 2:05:36.180\n what does COVID and all the social strife\n\n2:05:36.180 --> 2:05:38.060\n that's happening right now mean?\n\n2:05:38.060 --> 2:05:40.900\n And I think that it's really bad in the short term,\n\n2:05:40.900 --> 2:05:42.540\n but I think it'll lead to progress.\n\n2:05:42.540 --> 2:05:44.300\n And for that, I'm very thankful.\n\n2:05:45.940 --> 2:05:47.980\n Yeah, painful in the short term though.\n\n2:05:47.980 --> 2:05:48.820\n Well, yeah.\n\n2:05:48.820 --> 2:05:49.740\n I mean, people are out of jobs.\n\n2:05:49.740 --> 2:05:50.860\n Like some people can't eat.\n\n2:05:50.860 --> 2:05:52.500\n Like it's horrible.\n\n2:05:52.500 --> 2:05:56.940\n And, but you know, it's progress.\n\n2:05:56.940 --> 2:05:58.500\n So we'll see what happens.\n\n2:05:58.500 --> 2:06:01.900\n I mean, the real question is when you look back 10 years,\n\n2:06:01.900 --> 2:06:03.580\n 20 years, a hundred years from now,\n\n2:06:03.580 --> 2:06:06.860\n how do we evaluate the decisions are being made right now?\n\n2:06:06.860 --> 2:06:09.780\n I think that's really the way you can frame that\n\n2:06:09.780 --> 2:06:10.620\n and look at it.\n\n2:06:10.620 --> 2:06:11.660\n And you say, you know,\n\n2:06:11.660 --> 2:06:14.260\n you integrate across all the short term horribleness\n\n2:06:14.260 --> 2:06:17.220\n that's happening and you look at what that means\n\n2:06:17.220 --> 2:06:19.660\n and is the improvement across the world\n\n2:06:19.660 --> 2:06:22.980\n or the regression across the world significant enough\n\n2:06:22.980 --> 2:06:24.700\n to make it a good or a bad thing?\n\n2:06:24.700 --> 2:06:26.820\n I think that's the question.\n\n2:06:26.820 --> 2:06:27.660\n Yeah.\n\n2:06:27.660 --> 2:06:29.460\n And for that, it's good to study history.\n\n2:06:29.460 --> 2:06:32.020\n I mean, one of the big problems for me right now\n\n2:06:32.020 --> 2:06:34.740\n is I'm reading The Rise and Fall of the Third Reich.\n\n2:06:36.060 --> 2:06:37.340\n Light reading?\n\n2:06:37.340 --> 2:06:39.660\n So it's everything is just,\n\n2:06:39.660 --> 2:06:42.140\n I just see parallels and it means it's,\n\n2:06:42.140 --> 2:06:45.300\n you have to be really careful not to overstep it,\n\n2:06:45.300 --> 2:06:48.700\n but just the thing that worries me the most\n\n2:06:48.700 --> 2:06:53.700\n is the pain that people feel when a few things combine,\n\n2:06:54.380 --> 2:06:55.940\n which is like economic depression,\n\n2:06:55.940 --> 2:06:57.820\n which is quite possible in this country.\n\n2:06:57.820 --> 2:07:02.540\n And then just being disrespected in some kind of way,\n\n2:07:02.540 --> 2:07:05.100\n which the German people were really disrespected\n\n2:07:05.100 --> 2:07:10.100\n by most of the world, like in a way that's over the top,\n\n2:07:10.220 --> 2:07:12.100\n that something can build up\n\n2:07:12.100 --> 2:07:14.940\n and then all you need is a charismatic leader\n\n2:07:15.940 --> 2:07:19.460\n to go either positive or negative and both work\n\n2:07:19.460 --> 2:07:21.060\n as long as they're charismatic.\n\n2:07:21.060 --> 2:07:22.140\n And there's...\n\n2:07:22.140 --> 2:07:23.740\n It's taking advantage of, again,\n\n2:07:23.740 --> 2:07:26.340\n that inflection point that the world's in\n\n2:07:26.340 --> 2:07:28.700\n and what they do with it could be good or bad.\n\n2:07:29.700 --> 2:07:32.700\n And so it's a good way to think about times now,\n\n2:07:32.700 --> 2:07:34.740\n like on an individual level,\n\n2:07:34.740 --> 2:07:38.260\n what we decide to do is when history is written,\n\n2:07:38.260 --> 2:07:40.940\n 30 years from now, what happened in 2020,\n\n2:07:40.940 --> 2:07:43.140\n probably history is gonna remember 2020.\n\n2:07:43.140 --> 2:07:43.980\n Yeah, I think so.\n\n2:07:43.980 --> 2:07:46.820\n Either for good or bad,\n\n2:07:46.820 --> 2:07:49.540\n and it's up to us to write it so it's good.\n\n2:07:49.540 --> 2:07:50.900\n Well, one of the things I've observed\n\n2:07:50.900 --> 2:07:54.180\n that I find fascinating is most people act\n\n2:07:54.180 --> 2:07:56.460\n as though the world doesn't change.\n\n2:07:56.460 --> 2:07:59.980\n You make decision knowingly, right?\n\n2:07:59.980 --> 2:08:02.620\n You make a decision where you're predicting the future\n\n2:08:02.620 --> 2:08:04.780\n based on what you've seen in the recent past.\n\n2:08:04.780 --> 2:08:06.100\n And so if something's always been,\n\n2:08:06.100 --> 2:08:07.300\n it's rained every single day,\n\n2:08:07.300 --> 2:08:10.060\n then of course you expect it to rain today too, right?\n\n2:08:10.060 --> 2:08:13.420\n On the other hand, the world changes all the time.\n\n2:08:13.420 --> 2:08:14.260\n Yeah.\n\n2:08:14.260 --> 2:08:16.780\n Constantly, like for better and for worse.\n\n2:08:16.780 --> 2:08:17.700\n And so the question is,\n\n2:08:17.700 --> 2:08:20.900\n if you're interested in something that's not right,\n\n2:08:20.900 --> 2:08:22.900\n what is the inflection point that led to a change?\n\n2:08:22.900 --> 2:08:24.380\n And you can look to history for this.\n\n2:08:24.380 --> 2:08:27.980\n Like what is the catalyst that led to that explosion\n\n2:08:27.980 --> 2:08:30.220\n that led to that bill that led to the,\n\n2:08:30.220 --> 2:08:33.220\n like you can kind of work your way backwards from that.\n\n2:08:33.220 --> 2:08:35.740\n And maybe if you pull together the right people\n\n2:08:35.740 --> 2:08:36.940\n and you get the right ideas together,\n\n2:08:36.940 --> 2:08:38.980\n you can actually start driving that change\n\n2:08:38.980 --> 2:08:40.340\n and doing it in a way that's productive\n\n2:08:40.340 --> 2:08:41.780\n and hurts fewer people.\n\n2:08:41.780 --> 2:08:43.020\n Yeah, like a single person,\n\n2:08:43.020 --> 2:08:44.820\n a single event can turn all of history.\n\n2:08:44.820 --> 2:08:46.420\n Absolutely, everything starts somewhere.\n\n2:08:46.420 --> 2:08:48.500\n And often it's a combination of multiple factors,\n\n2:08:48.500 --> 2:08:52.500\n but yeah, these things can be engineered.\n\n2:08:52.500 --> 2:08:54.980\n That's actually the optimistic view that.\n\n2:08:54.980 --> 2:08:57.580\n I'm a longterm optimist on pretty much everything\n\n2:08:57.580 --> 2:08:59.340\n and human nature.\n\n2:08:59.340 --> 2:09:00.700\n We can look to all the negative things\n\n2:09:00.700 --> 2:09:03.300\n that humanity has, all the pettiness\n\n2:09:03.300 --> 2:09:05.860\n and all the like self servingness\n\n2:09:05.860 --> 2:09:09.780\n and the just the cruelty, right?\n\n2:09:09.780 --> 2:09:13.380\n The biases, the just humans can be very horrible.\n\n2:09:13.380 --> 2:09:17.140\n But on the other hand, we're capable of amazing things.\n\n2:09:17.140 --> 2:09:21.540\n And the progress across 100 year chunks\n\n2:09:21.540 --> 2:09:23.300\n is striking.\n\n2:09:23.300 --> 2:09:26.700\n And even across decades, we've come a long ways\n\n2:09:26.700 --> 2:09:27.820\n and there's still a long ways to go,\n\n2:09:27.820 --> 2:09:29.980\n but that doesn't mean that we've stopped.\n\n2:09:29.980 --> 2:09:33.060\n Yeah, the kind of stuff we've done in the last 100 years\n\n2:09:33.060 --> 2:09:34.900\n is unbelievable.\n\n2:09:34.900 --> 2:09:36.740\n It's kind of scary to think what's gonna happen\n\n2:09:36.740 --> 2:09:37.580\n in this 100 years.\n\n2:09:37.580 --> 2:09:39.020\n It's scary, like exciting.\n\n2:09:39.020 --> 2:09:41.700\n Like scary in a sense that it's kind of sad\n\n2:09:41.700 --> 2:09:43.780\n that the kind of technology is gonna come out\n\n2:09:43.780 --> 2:09:45.740\n in 10, 20, 30 years.\n\n2:09:45.740 --> 2:09:47.820\n We're probably too old to really appreciate\n\n2:09:47.820 --> 2:09:49.100\n if you don't grow up with it.\n\n2:09:49.100 --> 2:09:51.700\n It'll be like kids these days with their virtual reality\n\n2:09:51.700 --> 2:09:54.500\n and their TikToks and stuff like this.\n\n2:09:54.500 --> 2:09:56.820\n Like, how does this thing and like,\n\n2:09:56.820 --> 2:09:59.140\n come on, give me my static photo.\n\n2:10:00.860 --> 2:10:02.300\n My Commodore 64.\n\n2:10:02.300 --> 2:10:03.740\n Yeah, exactly.\n\n2:10:03.740 --> 2:10:05.820\n Okay, sorry, we kind of skipped over.\n\n2:10:05.820 --> 2:10:10.820\n Let me ask on, the machine learning world\n\n2:10:11.060 --> 2:10:15.740\n has been kind of inspired, their imagination captivated\n\n2:10:15.740 --> 2:10:18.740\n with GPT3 and these language models.\n\n2:10:18.740 --> 2:10:21.820\n I thought it'd be cool to get your opinion on it.\n\n2:10:21.820 --> 2:10:26.260\n What's your thoughts on this exciting world of,\n\n2:10:27.300 --> 2:10:29.940\n it connects to computation actually,\n\n2:10:29.940 --> 2:10:33.020\n is of language models that are huge\n\n2:10:33.020 --> 2:10:37.420\n and take many, many computers, not just to train,\n\n2:10:37.420 --> 2:10:39.420\n but to also do inference on.\n\n2:10:39.420 --> 2:10:40.460\n Sure.\n\n2:10:40.460 --> 2:10:43.420\n Well, I mean, it depends on what you're speaking to there.\n\n2:10:43.420 --> 2:10:45.300\n But I mean, I think that there's been\n\n2:10:45.300 --> 2:10:48.380\n a pretty well understood maximum in deep learning\n\n2:10:48.380 --> 2:10:49.660\n that if you make the model bigger\n\n2:10:49.660 --> 2:10:51.380\n and you shove more data into it,\n\n2:10:51.380 --> 2:10:52.420\n assuming you train it right\n\n2:10:52.420 --> 2:10:54.020\n and you have a good model architecture,\n\n2:10:54.020 --> 2:10:55.820\n that you'll get a better model out.\n\n2:10:55.820 --> 2:10:59.740\n And so on one hand, GPT3 was not that surprising.\n\n2:10:59.740 --> 2:11:02.060\n On the other hand, a tremendous amount of engineering\n\n2:11:02.060 --> 2:11:03.580\n went into making it possible.\n\n2:11:04.740 --> 2:11:07.060\n The implications of it are pretty huge.\n\n2:11:07.060 --> 2:11:08.980\n I think that when GPT2 came out,\n\n2:11:08.980 --> 2:11:11.380\n there was a very provocative blog post from OpenAI\n\n2:11:11.380 --> 2:11:13.660\n talking about, we're not gonna release it\n\n2:11:13.660 --> 2:11:15.460\n because of the social damage it could cause\n\n2:11:15.460 --> 2:11:18.660\n if it's misused.\n\n2:11:18.660 --> 2:11:20.140\n I think that's still a concern.\n\n2:11:20.140 --> 2:11:23.300\n I think that we need to look at how technology is applied\n\n2:11:23.300 --> 2:11:26.900\n and well meaning tools can be applied in very horrible ways\n\n2:11:26.900 --> 2:11:29.340\n and they can have very profound impact on that.\n\n2:11:30.620 --> 2:11:34.020\n I think that GPT3 is a huge technical achievement.\n\n2:11:34.020 --> 2:11:35.780\n And what will GPT4 be?\n\n2:11:35.780 --> 2:11:38.540\n Well, it'll probably be bigger, more expensive to train.\n\n2:11:38.540 --> 2:11:42.020\n Really cool architectural tricks.\n\n2:11:42.020 --> 2:11:43.980\n What do you think, is there,\n\n2:11:43.980 --> 2:11:46.460\n I don't know how much thought you've done\n\n2:11:46.460 --> 2:11:48.700\n on distributed computing.\n\n2:11:48.700 --> 2:11:52.940\n Is there some technical challenges that are interesting\n\n2:11:52.940 --> 2:11:54.620\n that you're hopeful about exploring\n\n2:11:54.620 --> 2:11:57.660\n in terms of a system that,\n\n2:11:57.660 --> 2:12:02.660\n like a piece of code that with GPT4 that might have,\n\n2:12:05.260 --> 2:12:09.340\n I don't know, hundreds of trillions of parameters\n\n2:12:09.340 --> 2:12:11.580\n which have to run on thousands of computers.\n\n2:12:11.580 --> 2:12:15.340\n Is there some hope that we can make that happen?\n\n2:12:15.340 --> 2:12:18.940\n Yeah, well, I mean, today you can write a check\n\n2:12:18.940 --> 2:12:21.780\n and get access to a thousand TPU cores\n\n2:12:21.780 --> 2:12:23.940\n and do really interesting large scale training\n\n2:12:23.940 --> 2:12:26.540\n and inference and things like that in Google Cloud,\n\n2:12:26.540 --> 2:12:27.420\n for example, right?\n\n2:12:27.420 --> 2:12:31.340\n And so I don't think it's a question about scale,\n\n2:12:31.340 --> 2:12:33.220\n it's a question about utility.\n\n2:12:33.220 --> 2:12:36.220\n And when I look at the transformer series of architectures\n\n2:12:36.220 --> 2:12:38.780\n that the GPT series is based on,\n\n2:12:38.780 --> 2:12:39.900\n it's really interesting to look at that\n\n2:12:39.900 --> 2:12:42.940\n because they're actually very simple designs.\n\n2:12:42.940 --> 2:12:44.740\n They're not recurrent.\n\n2:12:44.740 --> 2:12:47.460\n The training regimens are pretty simple.\n\n2:12:47.460 --> 2:12:51.700\n And so they don't really reflect like human brains, right?\n\n2:12:51.700 --> 2:12:54.620\n But they're really good at learning language models\n\n2:12:54.620 --> 2:12:55.740\n and they're unrolled enough\n\n2:12:55.740 --> 2:12:59.020\n that you can simulate some recurrence, right?\n\n2:12:59.020 --> 2:13:02.100\n And so the question I think about is,\n\n2:13:02.100 --> 2:13:03.260\n where does this take us?\n\n2:13:03.260 --> 2:13:05.140\n Like, so we can just keep scaling it,\n\n2:13:05.140 --> 2:13:07.700\n have more parameters, more data, more things,\n\n2:13:07.700 --> 2:13:09.460\n we'll get a better result for sure.\n\n2:13:09.460 --> 2:13:11.820\n But are there architectural techniques\n\n2:13:11.820 --> 2:13:15.300\n that can lead to progress at a faster pace, right?\n\n2:13:15.300 --> 2:13:17.740\n This is when, you know, how do you get,\n\n2:13:17.740 --> 2:13:20.660\n instead of just like making it a constant time bigger,\n\n2:13:20.660 --> 2:13:23.380\n how do you get like an algorithmic improvement\n\n2:13:23.380 --> 2:13:24.220\n out of this, right?\n\n2:13:24.220 --> 2:13:25.780\n And whether it be a new training regimen,\n\n2:13:25.780 --> 2:13:30.380\n if it becomes sparse networks, for example,\n\n2:13:30.380 --> 2:13:33.660\n the human brain is sparse, all these networks are dense.\n\n2:13:33.660 --> 2:13:36.140\n The connectivity patterns can be very different.\n\n2:13:36.140 --> 2:13:38.260\n I think this is where I get very interested\n\n2:13:38.260 --> 2:13:39.500\n and I'm way out of my league\n\n2:13:39.500 --> 2:13:41.580\n on the deep learning side of this.\n\n2:13:41.580 --> 2:13:43.700\n But I think that could lead to big breakthroughs.\n\n2:13:43.700 --> 2:13:46.140\n When you talk about large scale networks,\n\n2:13:46.140 --> 2:13:47.980\n one of the things that Jeff Dean likes to talk about\n\n2:13:47.980 --> 2:13:50.940\n and he's given a few talks on\n\n2:13:50.940 --> 2:13:54.220\n is this idea of having a sparsely gated mixture of experts\n\n2:13:54.220 --> 2:13:57.420\n kind of a model where you have, you know,\n\n2:13:57.420 --> 2:13:59.460\n different nets that are trained\n\n2:13:59.460 --> 2:14:02.060\n and are really good at certain kinds of tasks.\n\n2:14:02.060 --> 2:14:04.820\n And so you have this distributor across a cluster\n\n2:14:04.820 --> 2:14:06.420\n and so you have a lot of different computers\n\n2:14:06.420 --> 2:14:08.580\n that end up being kind of locally specialized\n\n2:14:08.580 --> 2:14:09.740\n in different demands.\n\n2:14:09.740 --> 2:14:11.060\n And then when a query comes in,\n\n2:14:11.060 --> 2:14:13.740\n you gate it and you use learn techniques\n\n2:14:13.740 --> 2:14:15.460\n to route to different parts of the network.\n\n2:14:15.460 --> 2:14:18.020\n And then you utilize the compute resources\n\n2:14:18.020 --> 2:14:20.660\n of the entire cluster by having specialization within it.\n\n2:14:20.660 --> 2:14:23.700\n And I don't know where that goes\n\n2:14:23.700 --> 2:14:25.540\n or when it starts to work,\n\n2:14:25.540 --> 2:14:26.700\n but I think things like that\n\n2:14:26.700 --> 2:14:28.380\n could be really interesting as well.\n\n2:14:28.380 --> 2:14:30.060\n And on the data side too,\n\n2:14:30.060 --> 2:14:33.700\n if you can think of data selection\n\n2:14:33.700 --> 2:14:35.820\n as a kind of programming.\n\n2:14:35.820 --> 2:14:36.660\n Yeah.\n\n2:14:36.660 --> 2:14:37.980\n I mean, essentially, if you look at it,\n\n2:14:37.980 --> 2:14:40.580\n like Karpathy talked about software 2.0,\n\n2:14:40.580 --> 2:14:44.020\n I mean, in a sense, data is the program.\n\n2:14:44.020 --> 2:14:44.860\n Yeah, yeah.\n\n2:14:44.860 --> 2:14:48.340\n So let me try to summarize Andre's position really quick\n\n2:14:48.340 --> 2:14:50.020\n before I disagree with it.\n\n2:14:50.020 --> 2:14:51.140\n Yeah.\n\n2:14:51.140 --> 2:14:53.420\n So Andre Karpathy is amazing.\n\n2:14:53.420 --> 2:14:55.180\n So this is nothing personal with him.\n\n2:14:55.180 --> 2:14:57.380\n He's an amazing engineer.\n\n2:14:57.380 --> 2:14:59.220\n And also a good blog post writer.\n\n2:14:59.220 --> 2:15:01.100\n Yeah, well, he's a great communicator.\n\n2:15:01.100 --> 2:15:02.420\n You know, he's just an amazing person.\n\n2:15:02.420 --> 2:15:03.720\n He's also really sweet.\n\n2:15:03.720 --> 2:15:08.720\n So his basic premise is that software is suboptimal.\n\n2:15:09.360 --> 2:15:11.040\n I think we can all agree to that.\n\n2:15:11.040 --> 2:15:14.480\n He also points out that deep learning\n\n2:15:14.480 --> 2:15:16.360\n and other learning based techniques are really great\n\n2:15:16.360 --> 2:15:17.520\n because you can solve problems\n\n2:15:17.520 --> 2:15:22.120\n in more structured ways with less like ad hoc code\n\n2:15:22.120 --> 2:15:24.440\n that people write out and don't write test cases for\n\n2:15:24.440 --> 2:15:25.280\n in some cases.\n\n2:15:25.280 --> 2:15:27.800\n And so they don't even know if it works in the first place.\n\n2:15:27.800 --> 2:15:32.320\n And so if you start replacing systems of imperative code\n\n2:15:32.320 --> 2:15:37.320\n with deep learning models, then you get a better result.\n\n2:15:37.400 --> 2:15:38.380\n Okay.\n\n2:15:38.380 --> 2:15:40.680\n And I think that he argues that software 2.0\n\n2:15:40.680 --> 2:15:44.120\n is a pervasively learned set of models\n\n2:15:44.120 --> 2:15:45.920\n and you get away from writing code.\n\n2:15:45.920 --> 2:15:49.040\n And he's given talks where he talks about, you know,\n\n2:15:49.040 --> 2:15:50.960\n swapping over more and more and more parts of the code\n\n2:15:50.960 --> 2:15:54.840\n to being learned and driven that way.\n\n2:15:54.840 --> 2:15:56.640\n I think that works.\n\n2:15:56.640 --> 2:15:59.280\n And if you're predisposed to liking machine learning,\n\n2:15:59.280 --> 2:16:01.760\n then I think that that's definitely a good thing.\n\n2:16:01.760 --> 2:16:04.720\n I think this is also good for accessibility in many ways\n\n2:16:04.720 --> 2:16:06.800\n because certain people are not gonna write C code\n\n2:16:06.800 --> 2:16:07.720\n or something.\n\n2:16:07.720 --> 2:16:10.200\n And so having a data driven approach to do\n\n2:16:10.200 --> 2:16:12.720\n this kind of stuff, I think can be very valuable.\n\n2:16:12.720 --> 2:16:14.200\n On the other hand, there are huge trade offs.\n\n2:16:14.200 --> 2:16:19.200\n It's not clear to me that software 2.0 is the answer.\n\n2:16:19.200 --> 2:16:21.440\n And probably Andre wouldn't argue that it's the answer\n\n2:16:21.440 --> 2:16:22.960\n for every problem either.\n\n2:16:22.960 --> 2:16:26.760\n But I look at machine learning as not a replacement\n\n2:16:26.760 --> 2:16:27.920\n for software 1.0.\n\n2:16:27.920 --> 2:16:30.120\n I look at it as a new programming paradigm.\n\n2:16:30.120 --> 2:16:35.120\n And so programming paradigms, when you look across demands,\n\n2:16:35.140 --> 2:16:38.500\n is structured programming where you go from go tos\n\n2:16:38.500 --> 2:16:42.300\n to if, then, else, or functional programming from Lisp.\n\n2:16:42.300 --> 2:16:44.440\n And you start talking about higher order functions\n\n2:16:44.440 --> 2:16:45.900\n and values and things like this.\n\n2:16:45.900 --> 2:16:48.060\n Or you talk about object oriented programming.\n\n2:16:48.060 --> 2:16:49.440\n You're talking about encapsulation,\n\n2:16:49.440 --> 2:16:50.460\n subclassing, inheritance.\n\n2:16:50.460 --> 2:16:52.640\n You start talking about generic programming\n\n2:16:52.640 --> 2:16:54.460\n where you start talking about code reuse\n\n2:16:54.460 --> 2:16:59.240\n through specialization and different type instantiations.\n\n2:16:59.240 --> 2:17:01.740\n When you start talking about differentiable programming,\n\n2:17:01.740 --> 2:17:04.500\n something that I am very excited about\n\n2:17:04.500 --> 2:17:05.940\n in the context of machine learning,\n\n2:17:05.940 --> 2:17:09.500\n talking about taking functions and generating variants,\n\n2:17:09.500 --> 2:17:11.140\n like the derivative of another function.\n\n2:17:11.140 --> 2:17:13.780\n Like that's a programming paradigm that's very useful\n\n2:17:13.780 --> 2:17:16.220\n for solving certain classes of problems.\n\n2:17:16.220 --> 2:17:17.660\n Machine learning is amazing\n\n2:17:17.660 --> 2:17:19.180\n at solving certain classes of problems.\n\n2:17:19.180 --> 2:17:21.940\n Like you're not gonna write a cat detector\n\n2:17:21.940 --> 2:17:25.900\n or even a language translation system by writing C code.\n\n2:17:25.900 --> 2:17:28.920\n That's not a very productive way to do things anymore.\n\n2:17:28.920 --> 2:17:31.060\n And so machine learning is absolutely\n\n2:17:31.060 --> 2:17:31.980\n the right way to do that.\n\n2:17:31.980 --> 2:17:34.120\n In fact, I would say that learned models\n\n2:17:34.120 --> 2:17:35.980\n are really one of the best ways to work\n\n2:17:35.980 --> 2:17:38.220\n with the human world in general.\n\n2:17:38.220 --> 2:17:40.320\n And so anytime you're talking about sensory input\n\n2:17:40.320 --> 2:17:41.360\n of different modalities,\n\n2:17:41.360 --> 2:17:44.300\n anytime that you're talking about generating things\n\n2:17:44.300 --> 2:17:45.780\n in a way that makes sense to a human,\n\n2:17:45.780 --> 2:17:48.900\n I think that learned models are really, really useful.\n\n2:17:48.900 --> 2:17:50.580\n And that's because humans are very difficult\n\n2:17:50.580 --> 2:17:52.620\n to characterize, okay?\n\n2:17:52.620 --> 2:17:55.220\n And so this is a very powerful paradigm\n\n2:17:55.220 --> 2:17:57.120\n for solving classes of problems.\n\n2:17:57.120 --> 2:17:59.700\n But on the other hand, imperative code is too.\n\n2:17:59.700 --> 2:18:03.020\n You're not gonna write a bootloader for your computer\n\n2:18:03.020 --> 2:18:04.060\n with a deep learning model.\n\n2:18:04.060 --> 2:18:07.060\n Deep learning models are very hardware intensive.\n\n2:18:07.060 --> 2:18:08.980\n They're very energy intensive\n\n2:18:08.980 --> 2:18:11.060\n because you have a lot of parameters\n\n2:18:11.060 --> 2:18:14.520\n and you can provably implement any function\n\n2:18:14.520 --> 2:18:17.700\n with a learned model, like this has been shown,\n\n2:18:17.700 --> 2:18:20.060\n but that doesn't make it efficient.\n\n2:18:20.060 --> 2:18:22.300\n And so if you're talking about caring about a few orders\n\n2:18:22.300 --> 2:18:24.100\n of magnitudes worth of energy usage,\n\n2:18:24.100 --> 2:18:26.940\n then it's useful to have other tools in the toolbox.\n\n2:18:26.940 --> 2:18:28.420\n There's also robustness too.\n\n2:18:28.420 --> 2:18:29.260\n I mean, as a...\n\n2:18:29.260 --> 2:18:30.100\n Yeah, exactly.\n\n2:18:30.100 --> 2:18:32.500\n All the problems of dealing with data and bias in data,\n\n2:18:32.500 --> 2:18:35.100\n all the problems of software 2.0.\n\n2:18:35.100 --> 2:18:39.340\n And one of the great things that Andre is arguing towards,\n\n2:18:39.340 --> 2:18:40.940\n which I completely agree with him,\n\n2:18:40.940 --> 2:18:43.820\n is that when you start implementing things\n\n2:18:43.820 --> 2:18:46.220\n with deep learning, you need to learn from software 1.0\n\n2:18:46.220 --> 2:18:49.060\n in terms of testing, continuous integration,\n\n2:18:49.060 --> 2:18:51.220\n how you deploy, how do you validate,\n\n2:18:51.220 --> 2:18:53.980\n all these things and building systems around that\n\n2:18:53.980 --> 2:18:55.020\n so that you're not just saying like,\n\n2:18:55.020 --> 2:18:58.460\n oh, it seems like it's good, ship it, right?\n\n2:18:58.460 --> 2:18:59.840\n Well, what happens when I regress something?\n\n2:18:59.840 --> 2:19:02.500\n What happens when I make a classification that's wrong\n\n2:19:02.500 --> 2:19:05.540\n and now I hurt somebody, right?\n\n2:19:05.540 --> 2:19:07.380\n I mean, all these things you have to reason about.\n\n2:19:07.380 --> 2:19:08.380\n Yeah, but at the same time,\n\n2:19:08.380 --> 2:19:11.860\n the bootloader that works for us humans\n\n2:19:12.980 --> 2:19:15.700\n looks awfully a lot like a neural network, right?\n\n2:19:15.700 --> 2:19:16.540\n Yeah.\n\n2:19:16.540 --> 2:19:18.520\n It's messy and you can cut out\n\n2:19:18.520 --> 2:19:19.780\n different parts of the brain.\n\n2:19:19.780 --> 2:19:22.400\n There's a lot of this neuroplasticity work\n\n2:19:22.400 --> 2:19:24.100\n that shows that it's gonna adjust.\n\n2:19:24.100 --> 2:19:26.900\n It's a really interesting question,\n\n2:19:26.900 --> 2:19:29.700\n how much of the world's programming\n\n2:19:29.700 --> 2:19:31.780\n could be replaced by software 2.0?\n\n2:19:31.780 --> 2:19:32.620\n Like with...\n\n2:19:32.620 --> 2:19:35.180\n Oh, well, I mean, it's provably true\n\n2:19:35.180 --> 2:19:37.540\n that you could replace all of it.\n\n2:19:37.540 --> 2:19:39.220\n Right, so then it's a question of the trade offs.\n\n2:19:39.220 --> 2:19:40.940\n Anything that's a function, you can.\n\n2:19:40.940 --> 2:19:42.940\n So it's not a question about if.\n\n2:19:42.940 --> 2:19:44.900\n I think it's a economic question.\n\n2:19:44.900 --> 2:19:47.740\n It's a, what kind of talent can you get?\n\n2:19:47.740 --> 2:19:50.460\n What kind of trade offs in terms of maintenance, right?\n\n2:19:50.460 --> 2:19:51.680\n Those kinds of questions, I think.\n\n2:19:51.680 --> 2:19:53.280\n What kind of data can you collect?\n\n2:19:53.280 --> 2:19:55.120\n I think one of the reasons that I'm most interested\n\n2:19:55.120 --> 2:19:58.580\n in machine learning as a programming paradigm\n\n2:19:58.580 --> 2:20:00.340\n is that one of the things that we've seen\n\n2:20:00.340 --> 2:20:02.340\n across computing in general is that\n\n2:20:02.340 --> 2:20:04.680\n being laser focused on one paradigm\n\n2:20:04.680 --> 2:20:07.540\n often puts you in a box that's not super great.\n\n2:20:07.540 --> 2:20:10.420\n And so you look at object oriented programming,\n\n2:20:10.420 --> 2:20:12.060\n like it was all the rage in the early 80s\n\n2:20:12.060 --> 2:20:13.520\n and like everything has to be objects.\n\n2:20:13.520 --> 2:20:15.620\n And people forgot about functional programming\n\n2:20:15.620 --> 2:20:17.380\n even though it came first.\n\n2:20:17.380 --> 2:20:19.820\n And then people rediscovered that,\n\n2:20:19.820 --> 2:20:21.820\n hey, if you mix functional and object oriented\n\n2:20:21.820 --> 2:20:24.300\n in structure, like you mix these things together,\n\n2:20:24.300 --> 2:20:25.820\n you can provide very interesting tools\n\n2:20:25.820 --> 2:20:28.460\n that are good at solving different problems.\n\n2:20:28.460 --> 2:20:30.800\n And so the question there is how do you get\n\n2:20:30.800 --> 2:20:32.660\n the best way to solve the problems?\n\n2:20:32.660 --> 2:20:36.020\n It's not about whose tribe should win, right?\n\n2:20:36.020 --> 2:20:38.780\n It's not about, you know, that shouldn't be the question.\n\n2:20:38.780 --> 2:20:40.060\n The question is how do you make it\n\n2:20:40.060 --> 2:20:42.180\n so that people can solve those problems the fastest\n\n2:20:42.180 --> 2:20:44.340\n and they have the right tools in their box\n\n2:20:44.340 --> 2:20:47.180\n to build good libraries and they can solve these problems.\n\n2:20:47.180 --> 2:20:49.100\n And when you look at that, that's like, you know,\n\n2:20:49.100 --> 2:20:50.340\n you look at reinforcement learning\n\n2:20:50.340 --> 2:20:52.660\n as one really interesting subdomain of this.\n\n2:20:52.660 --> 2:20:55.080\n Reinforcement learning, often you have to have\n\n2:20:55.080 --> 2:20:57.660\n the integration of a learned model\n\n2:20:57.660 --> 2:21:00.820\n combined with your Atari or whatever the other scenario\n\n2:21:00.820 --> 2:21:02.880\n it is that you're working in.\n\n2:21:02.880 --> 2:21:05.700\n You have to combine that thing with the robot control\n\n2:21:05.700 --> 2:21:07.660\n for the arm, right?\n\n2:21:07.660 --> 2:21:11.960\n And so now it's not just about that one paradigm,\n\n2:21:11.960 --> 2:21:14.600\n it's about integrating that with all the other systems\n\n2:21:14.600 --> 2:21:17.100\n that you have, including often legacy systems\n\n2:21:17.100 --> 2:21:18.160\n and things like this, right?\n\n2:21:18.160 --> 2:21:21.500\n And so to me, I think that the interesting thing to say\n\n2:21:21.500 --> 2:21:23.820\n is like, how do you get the best out of this domain\n\n2:21:23.820 --> 2:21:25.820\n and how do you enable people to achieve things\n\n2:21:25.820 --> 2:21:27.340\n that they otherwise couldn't do\n\n2:21:27.340 --> 2:21:29.720\n without excluding all the good things\n\n2:21:29.720 --> 2:21:31.300\n we already know how to do?\n\n2:21:31.300 --> 2:21:35.340\n Right, but okay, this is a crazy question,\n\n2:21:35.340 --> 2:21:38.860\n but we talked a little bit about GPT3,\n\n2:21:38.860 --> 2:21:42.340\n but do you think it's possible that these language models\n\n2:21:42.340 --> 2:21:47.340\n that in essence, in the language domain,\n\n2:21:47.340 --> 2:21:51.820\n Software 2.0 could replace some aspect of compilation,\n\n2:21:51.820 --> 2:21:54.260\n for example, or do program synthesis,\n\n2:21:54.260 --> 2:21:56.900\n replace some aspect of programming?\n\n2:21:56.900 --> 2:21:57.740\n Yeah, absolutely.\n\n2:21:57.740 --> 2:22:00.380\n So I think that learned models in general\n\n2:22:00.380 --> 2:22:01.580\n are extremely powerful,\n\n2:22:01.580 --> 2:22:03.700\n and I think that people underestimate them.\n\n2:22:04.740 --> 2:22:07.180\n Maybe you can suggest what I should do.\n\n2:22:07.180 --> 2:22:11.380\n So if I have access to the GPT3 API,\n\n2:22:11.380 --> 2:22:14.260\n would I be able to generate Swift code, for example?\n\n2:22:14.260 --> 2:22:16.060\n Do you think that could do something interesting\n\n2:22:16.060 --> 2:22:17.420\n and would work?\n\n2:22:17.420 --> 2:22:21.140\n So GPT3 is probably not trained on the right corpus,\n\n2:22:21.140 --> 2:22:23.700\n so it probably has the ability to generate some Swift.\n\n2:22:23.700 --> 2:22:25.220\n I bet it does.\n\n2:22:25.220 --> 2:22:27.280\n It's probably not gonna generate a large enough body\n\n2:22:27.280 --> 2:22:28.340\n of Swift to be useful,\n\n2:22:28.340 --> 2:22:30.580\n but take it a next step further.\n\n2:22:30.580 --> 2:22:33.980\n Like if you had the goal of training something like GPT3\n\n2:22:33.980 --> 2:22:38.020\n and you wanted to train it to generate source code, right?\n\n2:22:38.020 --> 2:22:39.780\n It could definitely do that.\n\n2:22:39.780 --> 2:22:42.640\n Now the question is, how do you express the intent\n\n2:22:42.640 --> 2:22:44.300\n of what you want filled in?\n\n2:22:44.300 --> 2:22:47.060\n You can definitely write scaffolding of code\n\n2:22:47.060 --> 2:22:48.940\n and say, fill in the hole,\n\n2:22:48.940 --> 2:22:50.300\n and sort of put in some for loops,\n\n2:22:50.300 --> 2:22:51.540\n or put in some classes or whatever.\n\n2:22:51.540 --> 2:22:53.700\n And the power of these models is impressive,\n\n2:22:53.700 --> 2:22:56.940\n but there's an unsolved question, at least unsolved to me,\n\n2:22:56.940 --> 2:22:59.700\n which is, how do I express the intent of what to fill in?\n\n2:22:59.700 --> 2:23:01.000\n Right?\n\n2:23:01.000 --> 2:23:03.180\n And kind of what you'd really want to have,\n\n2:23:03.180 --> 2:23:06.340\n and I don't know that these models are up to the task,\n\n2:23:06.340 --> 2:23:08.300\n is you wanna be able to say,\n\n2:23:08.300 --> 2:23:09.660\n here's the scaffolding,\n\n2:23:09.660 --> 2:23:12.460\n and here are the assertions at the end.\n\n2:23:12.460 --> 2:23:14.020\n And the assertions always pass.\n\n2:23:14.020 --> 2:23:16.460\n And so you want a generative model on the one hand, yes.\n\n2:23:16.460 --> 2:23:17.580\n Oh, that's fascinating, yeah.\n\n2:23:17.580 --> 2:23:20.420\n Right, but you also want some loop back,\n\n2:23:20.420 --> 2:23:23.180\n some reinforcement learning system or something,\n\n2:23:23.180 --> 2:23:24.660\n where you're actually saying like,\n\n2:23:24.660 --> 2:23:26.580\n I need to hill climb towards something\n\n2:23:26.580 --> 2:23:28.500\n that is more correct.\n\n2:23:28.500 --> 2:23:29.720\n And I don't know that we have that.\n\n2:23:29.720 --> 2:23:33.640\n So it would generate not only a bunch of the code,\n\n2:23:33.640 --> 2:23:35.940\n but like the checks that do the testing.\n\n2:23:35.940 --> 2:23:37.100\n It would generate the tests.\n\n2:23:37.100 --> 2:23:38.860\n I think the humans would generate the tests, right?\n\n2:23:38.860 --> 2:23:39.700\n Oh, okay.\n\n2:23:39.700 --> 2:23:41.340\n But it would be fascinating if...\n\n2:23:41.340 --> 2:23:43.060\n Well, the tests are the requirements.\n\n2:23:43.060 --> 2:23:44.260\n Yes, but the, okay, so...\n\n2:23:44.260 --> 2:23:45.940\n Because you have to express to the model\n\n2:23:45.940 --> 2:23:47.100\n what you want to...\n\n2:23:47.100 --> 2:23:49.020\n You don't just want gibberish code.\n\n2:23:49.020 --> 2:23:51.340\n Look at how compelling this code looks.\n\n2:23:51.340 --> 2:23:54.800\n You want a story about four horned unicorns or something.\n\n2:23:54.800 --> 2:23:55.980\n Well, okay, so exactly.\n\n2:23:55.980 --> 2:23:57.720\n But that's human requirements.\n\n2:23:57.720 --> 2:24:00.220\n But then I thought it's a compelling idea\n\n2:24:00.220 --> 2:24:05.220\n that the GPT4 model could generate checks\n\n2:24:06.980 --> 2:24:11.980\n that are more high fidelity that check for correctness.\n\n2:24:11.980 --> 2:24:14.680\n Because the code it generates,\n\n2:24:14.680 --> 2:24:18.400\n like say I ask it to generate a function\n\n2:24:18.400 --> 2:24:21.620\n that gives me the Fibonacci sequence.\n\n2:24:21.620 --> 2:24:22.460\n Sure.\n\n2:24:22.460 --> 2:24:24.340\n I don't like...\n\n2:24:24.340 --> 2:24:25.640\n So decompose the problem, right?\n\n2:24:25.640 --> 2:24:26.980\n So you have two things.\n\n2:24:26.980 --> 2:24:29.360\n You have, you need the ability to generate\n\n2:24:29.360 --> 2:24:33.080\n syntactically correct Swift code that's interesting, right?\n\n2:24:33.080 --> 2:24:37.560\n I think GPT series of model architectures can do that.\n\n2:24:37.560 --> 2:24:41.320\n But then you need the ability to add the requirements.\n\n2:24:41.320 --> 2:24:43.360\n So generate Fibonacci.\n\n2:24:43.360 --> 2:24:46.040\n The human needs to express that goal.\n\n2:24:46.040 --> 2:24:49.160\n We don't have that language that I know of.\n\n2:24:49.160 --> 2:24:50.840\n No, I mean, it can generate stuff.\n\n2:24:50.840 --> 2:24:52.840\n Have you seen what GPT3 can generate?\n\n2:24:52.840 --> 2:24:55.760\n You can say, I mean, there's a interface stuff\n\n2:24:55.760 --> 2:24:58.360\n like it can generate HTML.\n\n2:24:58.360 --> 2:25:02.000\n It can generate basic for loops that give you like...\n\n2:25:02.000 --> 2:25:02.880\n Right, but pick HTML.\n\n2:25:02.880 --> 2:25:05.100\n How do I say I want google.com?\n\n2:25:06.080 --> 2:25:07.800\n Well, no, you could say...\n\n2:25:07.800 --> 2:25:09.360\n Or not literally google.com.\n\n2:25:09.360 --> 2:25:10.520\n How do I say I want a webpage\n\n2:25:10.520 --> 2:25:13.160\n that's got a shopping cart and this and that?\n\n2:25:13.160 --> 2:25:14.000\n It does that.\n\n2:25:14.000 --> 2:25:14.840\n I mean, so, okay.\n\n2:25:14.840 --> 2:25:17.680\n So just, I don't know if you've seen these demonstrations\n\n2:25:17.680 --> 2:25:20.340\n but you type in, I want a red button\n\n2:25:20.340 --> 2:25:22.440\n with the text that says hello.\n\n2:25:22.440 --> 2:25:24.160\n And you type that in natural language\n\n2:25:24.160 --> 2:25:26.120\n and it generates the correct HTML.\n\n2:25:26.120 --> 2:25:27.600\n I've done this demo.\n\n2:25:27.600 --> 2:25:29.000\n It's kind of compelling.\n\n2:25:29.000 --> 2:25:33.280\n So you have to prompt it with similar kinds of mappings.\n\n2:25:33.280 --> 2:25:35.640\n Of course, it's probably handpicked.\n\n2:25:35.640 --> 2:25:37.940\n I got to experiment that probably,\n\n2:25:37.940 --> 2:25:39.520\n but the fact that you can do that once\n\n2:25:39.520 --> 2:25:43.200\n even out of like 20 is quite impressive.\n\n2:25:43.200 --> 2:25:45.200\n Again, that's very basic.\n\n2:25:45.200 --> 2:25:48.440\n Like the HTML is kind of messy and bad.\n\n2:25:48.440 --> 2:25:49.960\n But yes, the intent is...\n\n2:25:49.960 --> 2:25:53.320\n The idea is the intent is specified in natural language.\n\n2:25:53.320 --> 2:25:54.400\n Yeah, so I have not seen that.\n\n2:25:54.400 --> 2:25:55.240\n That's really cool.\n\n2:25:55.240 --> 2:25:56.560\n Yeah.\n\n2:25:56.560 --> 2:25:59.840\n Yeah, but the question is the correctness of that.\n\n2:25:59.840 --> 2:26:02.840\n Like visually you can check, oh, the button is red,\n\n2:26:02.840 --> 2:26:09.840\n but for more complicated functions\n\n2:26:10.160 --> 2:26:12.080\n where the intent is harder to check.\n\n2:26:12.080 --> 2:26:15.460\n This goes into like NP completeness kind of things.\n\n2:26:15.460 --> 2:26:18.120\n Like I want to know that this code is correct\n\n2:26:18.120 --> 2:26:20.720\n and generates a giant thing\n\n2:26:20.720 --> 2:26:23.680\n that does some kind of calculation.\n\n2:26:23.680 --> 2:26:25.400\n It seems to be working.\n\n2:26:25.400 --> 2:26:27.880\n It's interesting to think like,\n\n2:26:27.880 --> 2:26:30.720\n should the system also try to generate checks\n\n2:26:30.720 --> 2:26:32.080\n for itself for correctness?\n\n2:26:32.080 --> 2:26:33.000\n Yeah, I don't know.\n\n2:26:33.000 --> 2:26:35.960\n And this is way beyond my experience.\n\n2:26:35.960 --> 2:26:39.200\n The thing that I think about is that\n\n2:26:39.200 --> 2:26:41.120\n there doesn't seem to be a lot of\n\n2:26:41.120 --> 2:26:43.480\n equational reasoning going on.\n\n2:26:43.480 --> 2:26:45.280\n There's a lot of pattern matching and filling in\n\n2:26:45.280 --> 2:26:47.560\n and kind of propagating patterns\n\n2:26:47.560 --> 2:26:49.220\n that have been seen before into the future\n\n2:26:49.220 --> 2:26:50.680\n and into the generator result.\n\n2:26:50.680 --> 2:26:53.240\n And so if you want to get correctness,\n\n2:26:53.240 --> 2:26:55.180\n you kind of need theorem proving kind of things\n\n2:26:55.180 --> 2:26:57.320\n and like higher level logic.\n\n2:26:57.320 --> 2:26:58.600\n And I don't know that...\n\n2:26:58.600 --> 2:27:00.520\n You could talk to Jan about that\n\n2:27:00.520 --> 2:27:03.560\n and see what the bright minds\n\n2:27:03.560 --> 2:27:04.720\n are thinking about right now,\n\n2:27:04.720 --> 2:27:08.180\n but I don't think the GPT is in that vein.\n\n2:27:08.180 --> 2:27:09.240\n It's still really cool.\n\n2:27:09.240 --> 2:27:11.880\n Yeah, and surprisingly, who knows,\n\n2:27:11.880 --> 2:27:13.960\n maybe reasoning is...\n\n2:27:13.960 --> 2:27:14.780\n Is overrated.\n\n2:27:14.780 --> 2:27:15.620\n Yeah, is overrated.\n\n2:27:15.620 --> 2:27:17.320\n Right, I mean, do we reason?\n\n2:27:17.320 --> 2:27:18.160\n Yeah.\n\n2:27:18.160 --> 2:27:18.980\n How do you tell, right?\n\n2:27:18.980 --> 2:27:20.560\n Are we just pattern matching based on what we have\n\n2:27:20.560 --> 2:27:22.960\n and then reverse justifying to ourselves?\n\n2:27:22.960 --> 2:27:24.280\n Exactly, the reverse.\n\n2:27:24.280 --> 2:27:26.920\n So like I think what the neural networks are missing\n\n2:27:26.920 --> 2:27:29.820\n and I think GPT4 might have\n\n2:27:29.820 --> 2:27:33.800\n is to be able to tell stories to itself about what it did.\n\n2:27:33.800 --> 2:27:34.920\n Well, that's what humans do, right?\n\n2:27:34.920 --> 2:27:38.240\n I mean, you talk about like network explainability, right?\n\n2:27:38.240 --> 2:27:40.720\n And we give, no, that's a hard time about this,\n\n2:27:40.720 --> 2:27:42.420\n but humans don't know why we make decisions.\n\n2:27:42.420 --> 2:27:43.800\n We have this thing called intuition\n\n2:27:43.800 --> 2:27:45.240\n and then we try to like say,\n\n2:27:45.240 --> 2:27:47.360\n this feels like the right thing, but why, right?\n\n2:27:47.360 --> 2:27:49.120\n And you wrestle with that\n\n2:27:49.120 --> 2:27:50.320\n when you're making hard decisions\n\n2:27:50.320 --> 2:27:52.200\n and is that science?\n\n2:27:52.200 --> 2:27:53.120\n Not really.\n\n2:27:54.400 --> 2:27:57.400\n Let me ask you about a few high level questions, I guess.\n\n2:27:57.400 --> 2:28:02.400\n Because you've done a million things in your life\n\n2:28:02.400 --> 2:28:04.240\n and been very successful.\n\n2:28:04.240 --> 2:28:07.000\n A bunch of young folks listen to this,\n\n2:28:07.000 --> 2:28:10.720\n ask for advice from successful people like you.\n\n2:28:11.720 --> 2:28:15.680\n If you were to give advice to somebody,\n\n2:28:15.680 --> 2:28:17.080\n you know, another graduate student\n\n2:28:17.080 --> 2:28:19.040\n or some high school student\n\n2:28:19.040 --> 2:28:23.560\n about pursuing a career in computing\n\n2:28:23.560 --> 2:28:25.600\n or just advice about life in general,\n\n2:28:25.600 --> 2:28:28.880\n is there some words of wisdom you can give them?\n\n2:28:28.880 --> 2:28:30.860\n So I think you come back to change\n\n2:28:30.860 --> 2:28:34.160\n and profound leaps happen\n\n2:28:34.160 --> 2:28:35.420\n because people are willing to believe\n\n2:28:35.420 --> 2:28:36.520\n that change is possible\n\n2:28:36.520 --> 2:28:39.200\n and that the world does change\n\n2:28:39.200 --> 2:28:41.040\n and are willing to do the hard thing\n\n2:28:41.040 --> 2:28:42.720\n that it takes to make change happen.\n\n2:28:42.720 --> 2:28:45.920\n And whether it be implementing a new programming language\n\n2:28:45.920 --> 2:28:47.120\n or employing a new system\n\n2:28:47.120 --> 2:28:49.240\n or employing a new research paper,\n\n2:28:49.240 --> 2:28:50.240\n designing a new thing,\n\n2:28:50.240 --> 2:28:51.680\n moving the world forward in science\n\n2:28:51.680 --> 2:28:53.540\n and philosophy, whatever,\n\n2:28:53.540 --> 2:28:54.560\n it really comes down to somebody\n\n2:28:54.560 --> 2:28:57.120\n who's willing to put in the work, right?\n\n2:28:57.120 --> 2:29:00.320\n And you have, the work is hard\n\n2:29:00.320 --> 2:29:01.560\n for a whole bunch of different reasons.\n\n2:29:01.560 --> 2:29:06.560\n One of which is, it's work, right?\n\n2:29:06.960 --> 2:29:08.840\n And so you have to have the space in your life\n\n2:29:08.840 --> 2:29:09.880\n in which you can do that work,\n\n2:29:09.880 --> 2:29:11.020\n which is why going to grad school\n\n2:29:11.020 --> 2:29:13.320\n can be a beautiful thing for certain people.\n\n2:29:14.720 --> 2:29:16.860\n But also there's a self doubt that happens.\n\n2:29:16.860 --> 2:29:18.360\n Like you're two years into a project,\n\n2:29:18.360 --> 2:29:20.320\n is it going anywhere, right?\n\n2:29:20.320 --> 2:29:21.160\n Well, what do you do?\n\n2:29:21.160 --> 2:29:23.320\n Do you just give up because it's hard?\n\n2:29:23.320 --> 2:29:25.620\n No, no, I mean, some people like suffering.\n\n2:29:26.720 --> 2:29:29.280\n And so you plow through it.\n\n2:29:29.280 --> 2:29:31.960\n The secret to me is that you have to love what you're doing\n\n2:29:31.960 --> 2:29:35.000\n and follow that passion\n\n2:29:35.000 --> 2:29:37.080\n because when you get to the hard times,\n\n2:29:37.080 --> 2:29:40.080\n that's when, if you love what you're doing,\n\n2:29:40.080 --> 2:29:41.680\n you're willing to kind of push through.\n\n2:29:41.680 --> 2:29:45.420\n And this is really hard\n\n2:29:45.420 --> 2:29:48.640\n because it's hard to know what you will love doing\n\n2:29:48.640 --> 2:29:50.200\n until you start doing a lot of things.\n\n2:29:50.200 --> 2:29:51.640\n And so that's why I think that,\n\n2:29:51.640 --> 2:29:53.280\n particularly early in your career,\n\n2:29:53.280 --> 2:29:54.920\n it's good to experiment.\n\n2:29:54.920 --> 2:29:55.920\n Do a little bit of everything.\n\n2:29:55.920 --> 2:29:59.360\n Go take the survey class on\n\n2:29:59.360 --> 2:30:03.760\n the first half of every class in your upper division lessons\n\n2:30:03.760 --> 2:30:05.720\n and just get exposure to things\n\n2:30:05.720 --> 2:30:07.120\n because certain things will resonate with you\n\n2:30:07.120 --> 2:30:08.960\n and you'll find out, wow, I'm really good at this.\n\n2:30:08.960 --> 2:30:10.080\n I'm really smart at this.\n\n2:30:10.080 --> 2:30:13.040\n Well, it's just because it works with the way your brain.\n\n2:30:13.040 --> 2:30:14.340\n And when something jumps out,\n\n2:30:14.340 --> 2:30:15.620\n I mean, that's one of the things\n\n2:30:15.620 --> 2:30:19.160\n that people often ask about is like,\n\n2:30:19.160 --> 2:30:21.400\n well, I think there's a bunch of cool stuff out there.\n\n2:30:21.400 --> 2:30:23.240\n Like how do I pick the thing?\n\n2:30:23.240 --> 2:30:27.600\n Like how do you hook, in your life,\n\n2:30:27.600 --> 2:30:30.440\n how did you just hook yourself in and stuck with it?\n\n2:30:30.440 --> 2:30:31.680\n Well, I got lucky, right?\n\n2:30:31.680 --> 2:30:34.800\n I mean, I think that many people forget\n\n2:30:34.800 --> 2:30:38.760\n that a huge amount of it or most of it is luck, right?\n\n2:30:38.760 --> 2:30:40.860\n So let's not forget that.\n\n2:30:41.880 --> 2:30:44.800\n So for me, I fell in love with computers early on\n\n2:30:44.800 --> 2:30:47.740\n because they spoke to me, I guess.\n\n2:30:49.280 --> 2:30:50.740\n What language did they speak?\n\n2:30:50.740 --> 2:30:51.580\n Basic.\n\n2:30:51.580 --> 2:30:53.380\n Basic, yeah.\n\n2:30:53.380 --> 2:30:56.960\n But then it was just kind of following\n\n2:30:56.960 --> 2:30:58.200\n a set of logical progressions,\n\n2:30:58.200 --> 2:31:01.400\n but also deciding that something that was hard\n\n2:31:01.400 --> 2:31:04.080\n was worth doing and a lot of fun, right?\n\n2:31:04.080 --> 2:31:06.240\n And so I think that that is also something\n\n2:31:06.240 --> 2:31:08.080\n that's true for many other domains,\n\n2:31:08.080 --> 2:31:10.360\n which is if you find something that you love doing\n\n2:31:10.360 --> 2:31:13.440\n that's also hard, if you invest yourself in it\n\n2:31:13.440 --> 2:31:14.960\n and add value to the world,\n\n2:31:14.960 --> 2:31:17.120\n then it will mean something generally, right?\n\n2:31:17.120 --> 2:31:19.120\n And again, that can be a research paper,\n\n2:31:19.120 --> 2:31:20.400\n that can be a software system,\n\n2:31:20.400 --> 2:31:22.040\n that can be a new robot,\n\n2:31:22.040 --> 2:31:24.760\n that can be, there's many things that that can be,\n\n2:31:24.760 --> 2:31:27.100\n but a lot of it is like real value\n\n2:31:27.100 --> 2:31:29.320\n comes from doing things that are hard.\n\n2:31:29.320 --> 2:31:33.840\n And that doesn't mean you have to suffer, but.\n\n2:31:33.840 --> 2:31:34.680\n It's hard.\n\n2:31:34.680 --> 2:31:36.360\n I mean, you don't often hear that message.\n\n2:31:36.360 --> 2:31:38.000\n We talked about it last time a little bit,\n\n2:31:38.000 --> 2:31:42.800\n but it's one of my, not enough people talk about this.\n\n2:31:43.840 --> 2:31:47.400\n It's beautiful to hear a successful person.\n\n2:31:47.400 --> 2:31:49.460\n Well, and self doubt and imposter syndrome,\n\n2:31:49.460 --> 2:31:52.360\n these are all things that successful people\n\n2:31:52.360 --> 2:31:53.960\n suffer with as well,\n\n2:31:53.960 --> 2:31:55.120\n particularly when they put themselves\n\n2:31:55.120 --> 2:31:56.660\n in a point of being uncomfortable,\n\n2:31:56.660 --> 2:31:59.200\n which I like to do now and then\n\n2:31:59.200 --> 2:32:02.060\n just because it puts you in learning mode.\n\n2:32:02.060 --> 2:32:04.080\n Like if you wanna grow as a person,\n\n2:32:04.080 --> 2:32:07.000\n put yourself in a room with a bunch of people\n\n2:32:07.000 --> 2:32:09.160\n that know way more about whatever you're talking about\n\n2:32:09.160 --> 2:32:11.520\n than you do and ask dumb questions.\n\n2:32:11.520 --> 2:32:13.040\n And guess what?\n\n2:32:13.040 --> 2:32:15.280\n Smart people love to teach often,\n\n2:32:15.280 --> 2:32:16.800\n not always, but often.\n\n2:32:16.800 --> 2:32:18.320\n And if you listen, if you're prepared to listen,\n\n2:32:18.320 --> 2:32:19.180\n if you're prepared to grow,\n\n2:32:19.180 --> 2:32:20.680\n if you're prepared to make connections,\n\n2:32:20.680 --> 2:32:22.380\n you can do some really interesting things.\n\n2:32:22.380 --> 2:32:25.360\n And I think a lot of progress is made by people\n\n2:32:25.360 --> 2:32:28.000\n who kind of hop between domains now and then,\n\n2:32:28.000 --> 2:32:32.480\n because they bring a perspective into a field\n\n2:32:32.480 --> 2:32:34.760\n that nobody else has,\n\n2:32:34.760 --> 2:32:38.280\n if people have only been working in that field themselves.\n\n2:32:38.280 --> 2:32:41.380\n We mentioned that the universe is kind of like a compiler.\n\n2:32:43.120 --> 2:32:44.880\n The entirety of it, the whole evolution\n\n2:32:44.880 --> 2:32:46.720\n is kind of a kind of compilation.\n\n2:32:46.720 --> 2:32:50.640\n Maybe us human beings are kind of compilers.\n\n2:32:51.640 --> 2:32:53.560\n Let me ask the old sort of question\n\n2:32:53.560 --> 2:32:54.920\n that I didn't ask you last time,\n\n2:32:54.920 --> 2:32:57.740\n which is what's the meaning of it all?\n\n2:32:57.740 --> 2:32:58.720\n Is there a meaning?\n\n2:32:58.720 --> 2:33:00.820\n Like if you asked a compiler why,\n\n2:33:01.680 --> 2:33:03.380\n what would a compiler say?\n\n2:33:03.380 --> 2:33:04.600\n What's the meaning of life?\n\n2:33:04.600 --> 2:33:06.800\n What's the meaning of life?\n\n2:33:06.800 --> 2:33:08.840\n I'm prepared for it not to mean anything.\n\n2:33:09.720 --> 2:33:14.200\n Here we are, all biological things programmed to survive\n\n2:33:14.200 --> 2:33:17.500\n and propagate our DNA.\n\n2:33:19.160 --> 2:33:21.400\n And maybe the universe is just a computer\n\n2:33:21.400 --> 2:33:25.320\n and you just go until entropy takes over the universe\n\n2:33:25.320 --> 2:33:26.320\n and then you're done.\n\n2:33:27.440 --> 2:33:29.640\n I don't think that's a very productive way\n\n2:33:29.640 --> 2:33:31.540\n to live your life, if so.\n\n2:33:33.000 --> 2:33:34.760\n And so I prefer to bias towards the other way,\n\n2:33:34.760 --> 2:33:37.960\n which is saying the universe has a lot of value.\n\n2:33:37.960 --> 2:33:41.840\n And I take happiness out of other people.\n\n2:33:41.840 --> 2:33:43.840\n And a lot of times part of that's having kids,\n\n2:33:43.840 --> 2:33:46.920\n but also the relationships you build with other people.\n\n2:33:46.920 --> 2:33:49.680\n And so the way I try to live my life is like,\n\n2:33:49.680 --> 2:33:51.240\n what can I do that has value?\n\n2:33:51.240 --> 2:33:52.480\n How can I move the world forward?\n\n2:33:52.480 --> 2:33:54.540\n How can I take what I'm good at\n\n2:33:54.540 --> 2:33:57.600\n and bring it into the world?\n\n2:33:57.600 --> 2:34:00.640\n And I'm one of these people that likes to work really hard\n\n2:34:00.640 --> 2:34:03.140\n and be very focused on the things that I do.\n\n2:34:03.140 --> 2:34:05.040\n And so if I'm gonna do that,\n\n2:34:05.040 --> 2:34:08.040\n how can it be in a domain that actually will matter?\n\n2:34:08.040 --> 2:34:10.020\n Because a lot of things that we do,\n\n2:34:10.020 --> 2:34:11.680\n we find ourselves in the cycle of like,\n\n2:34:11.680 --> 2:34:12.880\n okay, I'm doing a thing.\n\n2:34:12.880 --> 2:34:13.760\n I'm very familiar with it.\n\n2:34:13.760 --> 2:34:15.400\n I've done it for a long time.\n\n2:34:15.400 --> 2:34:16.680\n I've never done anything else,\n\n2:34:16.680 --> 2:34:19.760\n but I'm not really learning, right?\n\n2:34:19.760 --> 2:34:21.720\n I'm not really, I'm keeping things going,\n\n2:34:21.720 --> 2:34:23.680\n but there's a younger generation\n\n2:34:23.680 --> 2:34:24.640\n that can do the same thing,\n\n2:34:24.640 --> 2:34:26.480\n maybe even better than me, right?\n\n2:34:26.480 --> 2:34:28.000\n Maybe if I actually step out of this\n\n2:34:28.000 --> 2:34:31.280\n and jump into something I'm less comfortable with,\n\n2:34:31.280 --> 2:34:32.280\n it's scary.\n\n2:34:32.280 --> 2:34:33.440\n But on the other hand,\n\n2:34:33.440 --> 2:34:34.920\n it gives somebody else a new opportunity.\n\n2:34:34.920 --> 2:34:37.480\n It also then puts you back in learning mode,\n\n2:34:37.480 --> 2:34:38.960\n and that can be really interesting.\n\n2:34:38.960 --> 2:34:41.280\n And one of the things I've learned is that\n\n2:34:41.280 --> 2:34:42.360\n when you go through that,\n\n2:34:42.360 --> 2:34:45.040\n that first you're deep into imposter syndrome,\n\n2:34:45.040 --> 2:34:46.940\n but when you start working your way out,\n\n2:34:46.940 --> 2:34:47.780\n you start to realize,\n\n2:34:47.780 --> 2:34:49.980\n hey, well, there's actually a method to this.\n\n2:34:49.980 --> 2:34:53.280\n And now I'm able to add new things\n\n2:34:53.280 --> 2:34:54.680\n because I bring different perspective.\n\n2:34:54.680 --> 2:34:57.280\n And this is one of the good things\n\n2:34:57.280 --> 2:34:59.800\n about bringing different kinds of people together.\n\n2:34:59.800 --> 2:35:01.880\n Diversity of thought is really important.\n\n2:35:01.880 --> 2:35:04.440\n And if you can pull together people\n\n2:35:04.440 --> 2:35:06.460\n that are coming at things from different directions,\n\n2:35:06.460 --> 2:35:07.760\n you often get innovation.\n\n2:35:07.760 --> 2:35:10.540\n And I love to see that, that aha moment\n\n2:35:10.540 --> 2:35:12.760\n where you're like, oh, we've really cracked this.\n\n2:35:12.760 --> 2:35:15.200\n This is something nobody's ever done before.\n\n2:35:15.200 --> 2:35:16.760\n And then if you can do it in the context\n\n2:35:16.760 --> 2:35:18.960\n where it adds value, other people can build on it,\n\n2:35:18.960 --> 2:35:20.280\n it helps move the world,\n\n2:35:20.280 --> 2:35:22.720\n then that's what really excites me.\n\n2:35:22.720 --> 2:35:24.480\n So that kind of description\n\n2:35:24.480 --> 2:35:26.480\n of the magic of the human experience,\n\n2:35:26.480 --> 2:35:29.880\n do you think we'll ever create that in an AGI system?\n\n2:35:29.880 --> 2:35:33.480\n Do you think we'll be able to create,\n\n2:35:34.440 --> 2:35:38.040\n give AI systems a sense of meaning\n\n2:35:38.040 --> 2:35:39.640\n where they operate in this kind of world\n\n2:35:39.640 --> 2:35:41.800\n exactly in the way you've described,\n\n2:35:41.800 --> 2:35:43.240\n which is they interact with each other,\n\n2:35:43.240 --> 2:35:44.800\n they interact with us humans.\n\n2:35:44.800 --> 2:35:45.640\n Sure, sure.\n\n2:35:45.640 --> 2:35:50.640\n Well, so, I mean, why are you being so a speciest, right?\n\n2:35:50.840 --> 2:35:54.640\n All right, so AGI versus Bionets,\n\n2:35:54.640 --> 2:35:57.720\n or something like that versus biology, right?\n\n2:35:57.720 --> 2:36:00.280\n You know, what are we but machines, right?\n\n2:36:00.280 --> 2:36:02.900\n We're just programmed to run our,\n\n2:36:02.900 --> 2:36:03.920\n we have our objective function\n\n2:36:03.920 --> 2:36:06.440\n that we were optimized for, right?\n\n2:36:06.440 --> 2:36:07.640\n And so we're doing our thing,\n\n2:36:07.640 --> 2:36:10.000\n we think we have purpose, but do we really, right?\n\n2:36:10.000 --> 2:36:13.760\n I'm not prepared to say that those newfangled AGI's\n\n2:36:13.760 --> 2:36:16.840\n have no soul just because we don't understand them, right?\n\n2:36:16.840 --> 2:36:20.120\n And I think that would be, when they exist,\n\n2:36:20.120 --> 2:36:24.180\n that would be very premature to look at a new thing\n\n2:36:24.180 --> 2:36:26.880\n through your own lens without fully understanding it.\n\n2:36:28.200 --> 2:36:29.400\n You might be just saying that\n\n2:36:29.400 --> 2:36:31.680\n because AI systems in the future\n\n2:36:31.680 --> 2:36:33.080\n will be listening to this and then.\n\n2:36:33.080 --> 2:36:34.080\n Oh yeah, exactly.\n\n2:36:34.080 --> 2:36:34.920\n You don't wanna say anything.\n\n2:36:34.920 --> 2:36:36.280\n Please be nice to me, you know,\n\n2:36:36.280 --> 2:36:39.160\n when Skynet kills everybody, please spare me.\n\n2:36:39.160 --> 2:36:42.600\n So wise look ahead thinking.\n\n2:36:42.600 --> 2:36:44.760\n Yeah, but I mean, I think that people will spend\n\n2:36:44.760 --> 2:36:46.320\n a lot of time worrying about this kind of stuff,\n\n2:36:46.320 --> 2:36:48.140\n and I think that what we should be worrying about\n\n2:36:48.140 --> 2:36:49.840\n is how do we make the world better?\n\n2:36:49.840 --> 2:36:52.840\n And the thing that I'm most scared about with AGI's\n\n2:36:52.840 --> 2:36:57.400\n is not that necessarily the Skynet\n\n2:36:57.400 --> 2:36:58.920\n will start shooting everybody with lasers\n\n2:36:58.920 --> 2:37:02.040\n and stuff like that to use us for our calories.\n\n2:37:03.040 --> 2:37:05.360\n The thing that I'm worried about is that\n\n2:37:05.360 --> 2:37:08.280\n humanity, I think, needs a challenge.\n\n2:37:08.280 --> 2:37:11.600\n And if we get into a mode of not having a personal challenge,\n\n2:37:11.600 --> 2:37:13.560\n not having a personal contribution,\n\n2:37:13.560 --> 2:37:15.880\n whether that be like, you know, your kids\n\n2:37:15.880 --> 2:37:18.800\n and seeing what they grow into and helping guide them,\n\n2:37:18.800 --> 2:37:21.920\n whether it be your community that you're engaged in,\n\n2:37:21.920 --> 2:37:23.920\n you're driving forward, whether it be your work\n\n2:37:23.920 --> 2:37:25.040\n and the things that you're doing\n\n2:37:25.040 --> 2:37:25.880\n and the people you're working with\n\n2:37:25.880 --> 2:37:28.880\n and the products you're building and the contribution there,\n\n2:37:28.880 --> 2:37:31.960\n if people don't have a objective,\n\n2:37:31.960 --> 2:37:33.360\n I'm afraid what that means.\n\n2:37:33.360 --> 2:37:37.840\n And I think that this would lead to a rise\n\n2:37:37.840 --> 2:37:39.920\n of the worst part of people, right?\n\n2:37:39.920 --> 2:37:42.240\n Instead of people striving together\n\n2:37:42.240 --> 2:37:45.120\n and trying to make the world better,\n\n2:37:45.120 --> 2:37:49.720\n it could degrade into a very unpleasant world.\n\n2:37:49.720 --> 2:37:51.140\n But I don't know.\n\n2:37:51.140 --> 2:37:53.600\n I mean, we hopefully have a long ways to go\n\n2:37:53.600 --> 2:37:54.800\n before we discover that.\n\n2:37:54.800 --> 2:37:57.680\n And fortunately, we have pretty on the ground problems\n\n2:37:57.680 --> 2:37:58.660\n with the pandemic right now,\n\n2:37:58.660 --> 2:38:01.520\n and so I think we should be focused on that as well.\n\n2:38:01.520 --> 2:38:04.700\n Yeah, ultimately, just as you said, you're optimistic.\n\n2:38:04.700 --> 2:38:07.360\n I think it helps for us to be optimistic.\n\n2:38:07.360 --> 2:38:10.400\n So that's fake it until you make it.\n\n2:38:10.400 --> 2:38:11.520\n Yeah, well, and why not?\n\n2:38:11.520 --> 2:38:12.800\n What's the other side, right?\n\n2:38:12.800 --> 2:38:17.500\n So, I mean, I'm not personally a very religious person,\n\n2:38:17.500 --> 2:38:19.160\n but I've heard people say like,\n\n2:38:19.160 --> 2:38:20.480\n oh yeah, of course I believe in God.\n\n2:38:20.480 --> 2:38:23.360\n Of course I go to church, because if God's real,\n\n2:38:23.360 --> 2:38:25.960\n you know, I wanna be on the right side of that.\n\n2:38:25.960 --> 2:38:27.120\n If it's not real, it doesn't matter.\n\n2:38:27.120 --> 2:38:27.960\n Yeah, it doesn't matter.\n\n2:38:27.960 --> 2:38:32.200\n And so, you know, that's a fair way to do it.\n\n2:38:32.200 --> 2:38:35.640\n Yeah, I mean, the same thing with nuclear deterrence,\n\n2:38:35.640 --> 2:38:38.440\n all, you know, global warming, all these things,\n\n2:38:38.440 --> 2:38:41.380\n all these threats, natural engineer pandemics,\n\n2:38:41.380 --> 2:38:42.720\n all these threats we face.\n\n2:38:42.720 --> 2:38:47.720\n I think it's paralyzing to be terrified\n\n2:38:49.700 --> 2:38:52.540\n of all the possible ways we could destroy ourselves.\n\n2:38:52.540 --> 2:38:56.560\n I think it's much better or at least productive\n\n2:38:56.560 --> 2:38:59.840\n to be hopeful and to engineer defenses\n\n2:38:59.840 --> 2:39:03.000\n against these things, to engineer a future\n\n2:39:03.000 --> 2:39:06.640\n where like, you know, see like a positive future\n\n2:39:06.640 --> 2:39:07.960\n and engineer that future.\n\n2:39:07.960 --> 2:39:10.220\n Yeah, well, and I think that's another thing\n\n2:39:10.220 --> 2:39:12.680\n to think about as, you know, a human,\n\n2:39:12.680 --> 2:39:14.560\n particularly if you're young and trying to figure out\n\n2:39:14.560 --> 2:39:18.120\n what it is that you wanna be when you grow up, like I am.\n\n2:39:18.120 --> 2:39:19.840\n I'm always looking for that.\n\n2:39:19.840 --> 2:39:23.380\n The question then is, how do you wanna spend your time?\n\n2:39:24.300 --> 2:39:26.020\n And right now there seems to be a norm\n\n2:39:26.020 --> 2:39:28.800\n of being a consumption culture.\n\n2:39:28.800 --> 2:39:31.520\n Like I'm gonna watch the news and revel\n\n2:39:31.520 --> 2:39:33.520\n in how horrible everything is right now.\n\n2:39:33.520 --> 2:39:36.560\n I'm going to go find out about the latest atrocity\n\n2:39:36.560 --> 2:39:38.840\n and find out all the details of like the terrible thing\n\n2:39:38.840 --> 2:39:40.640\n that happened and be outraged by it.\n\n2:39:41.960 --> 2:39:44.000\n You can spend a lot of time watching TV\n\n2:39:44.000 --> 2:39:46.640\n and watching the news at home or whatever\n\n2:39:46.640 --> 2:39:49.340\n people watch these days, I don't know.\n\n2:39:49.340 --> 2:39:51.160\n But that's a lot of hours, right?\n\n2:39:51.160 --> 2:39:53.400\n And those are hours that if you're turned\n\n2:39:53.400 --> 2:39:56.960\n to being productive, learning, growing,\n\n2:39:56.960 --> 2:39:59.600\n experiencing, you know, when the pandemic's over,\n\n2:39:59.600 --> 2:40:03.600\n going exploring, right, it leads to more growth.\n\n2:40:03.600 --> 2:40:06.400\n And I think it leads to more optimism and happiness\n\n2:40:06.400 --> 2:40:08.620\n because you're building, right?\n\n2:40:08.620 --> 2:40:10.960\n You're building yourself, you're building your capabilities,\n\n2:40:10.960 --> 2:40:12.200\n you're building your viewpoints,\n\n2:40:12.200 --> 2:40:13.400\n you're building your perspective.\n\n2:40:13.400 --> 2:40:18.360\n And I think that a lot of the consuming\n\n2:40:18.360 --> 2:40:19.960\n of other people's messages leads\n\n2:40:19.960 --> 2:40:21.720\n to kind of a negative viewpoint,\n\n2:40:21.720 --> 2:40:24.360\n which you need to be aware of what's happening\n\n2:40:24.360 --> 2:40:25.680\n because that's also important,\n\n2:40:25.680 --> 2:40:28.120\n but there's a balance that I think focusing\n\n2:40:28.120 --> 2:40:32.000\n on creation is a very valuable thing to do.\n\n2:40:32.000 --> 2:40:33.840\n Yeah, so what you're saying is people should focus\n\n2:40:33.840 --> 2:40:37.320\n on working on the sexiest field of them all,\n\n2:40:37.320 --> 2:40:38.440\n which is compiler design.\n\n2:40:38.440 --> 2:40:39.680\n Exactly.\n\n2:40:39.680 --> 2:40:41.160\n Hey, you could go work on machine learning\n\n2:40:41.160 --> 2:40:43.640\n and be crowded out by the thousands of graduates\n\n2:40:43.640 --> 2:40:45.620\n popping out of school that all want to do the same thing,\n\n2:40:45.620 --> 2:40:48.560\n or you could work in the place that people overpay you\n\n2:40:48.560 --> 2:40:51.260\n because there's not enough smart people working in it.\n\n2:40:51.260 --> 2:40:53.480\n And here at the end of Moore's Law,\n\n2:40:53.480 --> 2:40:55.480\n according to some people,\n\n2:40:55.480 --> 2:40:57.480\n actually the software is the hard part too.\n\n2:40:58.480 --> 2:41:02.280\n I mean, optimization is truly, truly beautiful.\n\n2:41:02.280 --> 2:41:05.120\n And also on the YouTube side or education side,\n\n2:41:07.920 --> 2:41:09.760\n it'd be nice to have some material\n\n2:41:09.760 --> 2:41:12.160\n that shows the beauty of compilers.\n\n2:41:12.160 --> 2:41:13.160\n Yeah, yeah.\n\n2:41:13.160 --> 2:41:14.480\n That's something.\n\n2:41:14.480 --> 2:41:17.440\n So that's a call for people to create\n\n2:41:17.440 --> 2:41:18.920\n that kind of content as well.\n\n2:41:18.920 --> 2:41:22.800\n Chris, you're one of my favorite people to talk to.\n\n2:41:22.800 --> 2:41:25.560\n It's such a huge honor that you would waste your time\n\n2:41:25.560 --> 2:41:26.560\n talking to me.\n\n2:41:26.560 --> 2:41:27.760\n I've always appreciated it.\n\n2:41:27.760 --> 2:41:29.600\n Thank you so much for talking to me.\n\n2:41:29.600 --> 2:41:32.320\n The truth of it is you spent a lot of time talking to me\n\n2:41:32.320 --> 2:41:34.440\n just on walks and other things like that,\n\n2:41:34.440 --> 2:41:35.640\n so it's great to catch up with.\n\n2:41:35.640 --> 2:41:37.200\n Thanks, man.\n\n2:41:37.200 --> 2:41:39.240\n Thanks for listening to this conversation\n\n2:41:39.240 --> 2:41:42.360\n with Chris Latner, and thank you to our sponsors.\n\n2:41:42.360 --> 2:41:45.200\n Blinkist, an app that summarizes key ideas\n\n2:41:45.200 --> 2:41:46.600\n from thousands of books.\n\n2:41:46.600 --> 2:41:49.640\n Neuro, which is a maker of functional gum and mints\n\n2:41:49.640 --> 2:41:51.440\n that supercharge my mind.\n\n2:41:51.440 --> 2:41:55.480\n Masterclass, which are online courses from world experts.\n\n2:41:55.480 --> 2:41:57.840\n And finally, Cash App, which is an app\n\n2:41:57.840 --> 2:42:00.200\n for sending money to friends.\n\n2:42:00.200 --> 2:42:02.360\n Please check out these sponsors in the description\n\n2:42:02.360 --> 2:42:06.120\n to get a discount and to support this podcast.\n\n2:42:06.120 --> 2:42:08.440\n If you enjoy this thing, subscribe on YouTube,\n\n2:42:08.440 --> 2:42:10.600\n review it with five stars on Apple Podcast,\n\n2:42:10.600 --> 2:42:13.280\n follow on Spotify, support it on Patreon,\n\n2:42:13.280 --> 2:42:16.320\n connect with me on Twitter at Lex Friedman.\n\n2:42:16.320 --> 2:42:19.080\n And now, let me leave you with some words from Chris Latner.\n\n2:42:19.080 --> 2:42:21.760\n So much of language design is about tradeoffs,\n\n2:42:21.760 --> 2:42:23.720\n and you can't see those tradeoffs\n\n2:42:23.720 --> 2:42:25.640\n unless you have a community of people\n\n2:42:25.640 --> 2:42:28.560\n that really represent those different points.\n\n2:42:28.560 --> 2:42:47.560\n Thank you for listening, and hope to see you next time.\n\n"
}